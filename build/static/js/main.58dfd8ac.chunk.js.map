{"version":3,"sources":["pages/home/components/MapContainer.js","pages/home/Home.js","pages/history/History.js","pages/scan/Scan.js","pages/customer/components/SupervisedTable.js","pages/customer/components/MostAlerted.js","pages/customer/components/DataAnalytics.js","pages/customer/components/MaskChart.js","pages/customer/Customer.js","pages/scan/components/styles.js","pages/scan/components/Camera.js","pages/scan/components/useUserMedia.js","pages/scan/components/userCardRatio.js","pages/scan/components/useOffSet.js","components/App.js","serviceWorker.js","index.js"],"names":["PeopleMap","props","state","userInput","defaultMapSize","lat","lng","windowSize","emask_data","fetch","then","response","json","data","setState","Geocode","setApiKey","setLanguage","setRegion","enableDebug","address","i","fromAddress","results","geometry","location","index","length","error","console","new_emask","this","isMapOpen","emask","name","clickedInput","replace","item","list_location","getDistance","coord","log","push","clickable","getIndexPerson","zoom","onCenterChanged","centerChange","onZoomChanged","zoomChange","center","map","getLocation","item1","index1","position","parseFloat","key","onClick","onOpen","onCloseClick","style","color","radius","Component","MapContainer","compose","withScriptjs","withGoogleMap","Home","onChange","e","suggestions","currentTarget","value","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","suggestedValue","split","activeSuggestion","showSuggestions","innerText","onKeyDown","keyCode","suggestionsListComponent","className","type","placeholder","googleMapURL","loadingElement","height","containerElement","mapElement","withRouter","Meta","Card","History","count_","localStorage","getItem","count","setItem","sort","a","b","moment","date","isBefore","isAfter","sortedData","sortData","list_date","format","listDate","lg","md","sm","avatar","size","icon","status","backgroundColor","title","Item","Form","Option","Select","layout","labelCol","span","wrapperCol","tailLayout","offset","Scan","new_item","onNameChange","toString","onAddressChange","onPhoneChange","phone","onEmailChange","email","bind","history","window","reload","getFieldDecorator","form","label","initialValue","rules","required","message","htmlType","create","Content","Layout","TabPane","Tabs","column","dataIndex","sorted","sortDirections","render","SupervisedTable","selectedOption","pickeddate","pathname","employees","month","year","isoWeek","non_employees","menu","mode","defaultSelectedKeys","defaultActiveKey","tab","id","defaultValue","dataSource","columns","scroll","x","y","Grid","MostAlerted","paddingLeft","pull","DataAnalyticRow","gutter","bordered","MaskChart","month_data","months_data","j","mon","parseInt","extract_month","textAlign","forceFit","textStyle","fill","textBaseline","crosshairs","cursor","active","shadowColor","shadowBlur","opacity","tooltip","adjust","marginRatio","Customer","Breadcrumb","BreadcrumbItem","DataAnalytics","flashAnimation","keyframes","Wrapper","styled","div","Container","maxWidth","maxHeight","Canvas","canvas","Video","video","Overlay","Flash","flash","css","Button","button","CAPTURE_OPTIONS","audio","facingMode","canvasRef","useRef","videoRef","useState","width","container","setContainer","isVideoPlaying","setIsVideoPlaying","isCanvasEmpty","setIsCanvasEmpty","isFlashing","setIsFlashing","linkBlob","setLinkBlob","mediaStream","requestedMedia","setMediaStream","useEffect","navigator","mediaDevices","getUserMedia","stream","getTracks","forEach","track","stop","enableStream","useUserMedia","initialRatio","aspectRatio","setAspectRatio","useCallback","useCardRatio","calculateRatio","offsets","vWidth","vHeight","cWidth","cHeight","setOffsets","Math","round","useOffsets","current","videoWidth","videoHeight","handleCanPlay","play","onclick","axios","post","phoneNumber","srcObject","setTimeout","getContext","drawImage","link","document","createElement","download","toBlob","blob","href","URL","createObjectURL","handleCapture","clearRect","key5","key2","key3","key4","key1","key6","key7","key8","key9","res","bounds","onResize","contentRect","measureRef","ref","hidden","onCanPlay","autoPlay","playsInline","muted","top","left","onAnimationEnd","src","Header","Footer","Sider","App","toggle","collapsed","trigger","collapsible","theme","to","padding","minHeight","exact","path","component","onCountChange","setCountZero","Camera","Boolean","hostname","match","ReactDOM","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.58dfd8ac.chunk.js","sourcesContent":["import {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    Marker,\n    InfoWindow, \n    Circle\n  } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport React, {Component, Fragment} from \"react\"\nimport { compose, withProps, withStateHandlers } from \"recompose\"\nimport { getDistance } from 'geolib';\n// import data from \"../../../data/Data\";\n\n  class PeopleMap extends Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        userInput: \"\",\n      \n        \n        defaultMapSize: { lat: -33.797, lng: 151.1 }, \n        windowSize:10, \n        emask_data: []\n        \n      }\n    }\n    componentDidMount(){\n     \n      fetch(\"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\")\n        .then(response => response.json())\n        .then(data => {\n          this.setState({emask_data:data});\n        \n      // this.setState({openToogleList: Array(this.state.emask_data.length).fill(true)})\n      Geocode.setApiKey(\"AIzaSyAOOgr6Eg-N_Pi3Ic5mNo1EybmjAH3w1D0\");\n \n      // set response language. Defaults to english.\n      Geocode.setLanguage(\"en\");\n      \n      // set response region. Its optional.\n      // A Geocoding request with region=es (Spain) will return the Spanish city.\n      Geocode.setRegion(\"aus\");\n      Geocode.enableDebug();\n      \n      \n      \n      // Get latidude & longitude from address.\n      \n      for (var i=0; i< data.length; i++){\n        let address = data[i].address\n        Geocode.fromAddress(address).then(\n          response => {\n            \n            const { lat, lng } = response.results[0].geometry.location;\n            \n            \n            for(var index =0 ; index <data.length; index ++){\n              if(data[index].address === address){\n                data[index].location= {lat:lat, lng:lng}\n                this.setState({\n                  emask_data:data\n                })\n                break;\n              }\n            }           \n            \n            // console.log(lat)\n            // console.log(lng)\n            \n\n          },\n          error => {\n            console.error(error);\n          }\n        );\n      }\n      })\n        \n      }\n            \n      // if (this.props.clickable ===true){\n      //   console.log(\"hello\")\n      //   for (var i =0; i < this.state.location_data.length; i++){\n      //     if(data[i].name === this.props.clickedInput.replace(/\\s/g, '')){\n      //       console.log('world')\n      //       // let item =this.state.location_data[i]\n      //       // let copyDefaultMapSize= {...this.state.defaultMapSize};\n      //       // copyDefaultMapSize.lat= parseFloat(item.lat);\n      //       // copyDefaultMapSize.lng = parseFloat(item.lng) ;\n      //       this.setState({\n      //         // defaultMapSize: copyDefaultMapSize,\n      //         windowSize:20\n      //       })\n      //       break;\n      //     }\n      //   // }\n        \n      //   }\n      // }\n      \n     \n    \n    // componentDidUpdate(previousProps, previousState){\n    //   // if (this.state.defaultCenter !== previousState.defaultCenter && this.state.windowSize !== previousState.windowSize){\n    //     if (this.props.clickable ===true){\n    //       console.log(\"hello\")\n    //       for (var i =0; i < this.state.location_data.length; i++){\n    //         if(data[i].name === this.props.clickedInput.replace(/\\s/g, '')){\n    //           console.log('world')\n    //           // let item =this.state.location_data[i]\n    //           // let copyDefaultMapSize= {...this.state.defaultMapSize};\n    //           // copyDefaultMapSize.lat= parseFloat(item.lat);\n    //           // copyDefaultMapSize.lng = parseFloat(item.lng) ;\n    //           this.setState({\n    //             // defaultMapSize: copyDefaultMapSize,\n    //             windowSize:20\n    //           })\n    //           break;\n    //         }\n    //       // }\n          \n    //     }\n    //   }\n    // }\n    // changeMapSize(item){\n      \n      \n    // }\n    \n    onOpen(index){\n      \n      let new_emask = [...this.state.emask_data];\n      new_emask[index].isMapOpen = ! new_emask[index].isMapOpen;\n\n      this.setState({\n        emask: new_emask\n      }\n      )\n    }\n    getIndexPerson(){\n      \n      for(var i =0; i< this.state.emask_data.length; i++){\n        if(this.state.emask_data[i].name===this.props.clickedInput.replace(/\\s/g, '')){\n\n          // console.log(this.state.clickedInput)\n          return i;\n        }\n      }\n    }\n    getLocation(item){\n      var list_location= []\n      for (var i = 0 ; i < this.state.emask_data.length; i++){\n        if(getDistance(this.state.emask_data[i].location, item.location)< 1000 && item.address !== this.state.emask_data[i].address  ){\n          var coord = this.state.emask_data[i].location;\n          coord.name= this.state.emask_data[i].name\n          coord.address= this.state.emask_data[i].address\n          console.log(item.address +\" \"+item.name)\n          console.log(this.state.emask_data[i].name +\" \" +this.state.emask_data[i].address)\n          // console.log(getDistance(this.state.emask_data[i].location, item.location))\n\n          // console.log(getDistance(this.state.location_data[i],item))\n          list_location.push(coord)\n          \n          \n        }\n      }\n      return list_location\n    }\n    centerChange(){\n      \n      if(this.props.clickable === true){\n        \n        var index = this.getIndexPerson()\n        this.setState({defaultMapSize:this.state.emask_data[index].location});\n      }\n    }\n    \n    \n    render(){\n      console.log(this.state.emask_data)\n      // console.log(this.state.location_data)\n      return(\n        <GoogleMap\n    zoom={this.props.windowSize}\n      onCenterChanged = {() =>{this.centerChange()}}\n      onZoomChanged= {()=> {this.zoomChange()}}\n      center={this.state.defaultMapSize}\n    >\n      \n      {this.state.emask_data.map((item, index)=>{\n        if (this.props.clickable === true){\n          \n          if (this.state.emask_data[index].name == this.props.clickedInput.replace(/\\s/g, '')){\n            var list_location= this.getLocation(item)\n            \n            return(\n              <div>\n              {list_location.map((item1,index1) =>{\n                // console.log(data[index1].address)\n                return(\n                <Marker\n            position={{lat : parseFloat(item1.lat), lng: parseFloat(item1.lng) }}\n            key = {index1}\n            onClick={() => this.onOpen(index1) }\n              >\n            {this.state.emask_data[index1].isMapOpen &&\n              <Fragment>\n              <InfoWindow onCloseClick={()=> this.onOpen(index1)}>\n                <div>\n                <h3>Name: {item1.name}</h3>\n                <h3>Address: {item1.address}</h3>\n                </div>\n                {/* <Person name = {item1.name} /> */}\n              </InfoWindow>\n              \n            </Fragment> \n          \n            }\n         \n              </Marker>\n\n              )})}\n              <Marker\n            position={{lat : parseFloat(item.location.lat), lng: parseFloat(item.location.lng) }}\n            key = {index}\n            onClick={() => this.onOpen(index) }\n              >\n            {this.state.emask_data[index].isMapOpen &&\n              <Fragment>\n              <InfoWindow onCloseClick={()=> this.onOpen(index)}>\n                <div>\n                <h3 style= {{color: \"red\"}}><b> Name: {this.state.emask_data[index].name}</b></h3>\n                {/* <h3>{this.props.clickedInput}</h3> */}\n                <h3 style= {{color: \"red\"}}><b> Address: {this.state.emask_data[index].address}</b></h3>\n                </div>\n              </InfoWindow>\n              <Circle\n              radius= {1000}\n              center= {{lat : parseFloat(item.location.lat), lng: parseFloat(item.location.lng) }}\n              />\n              \n            </Fragment> \n          \n            }\n            \n              </Marker>\n            </div>\n           \n            \n      \n      \n              \n          )\n    }}})}\n      \n    </GoogleMap>\n      )\n    }\n  }\n  const MapContainer =compose(\n    withScriptjs,\n    withGoogleMap\n  )(PeopleMap);\n  \n  export default MapContainer\n  \n//   <MapWithAMarker\n//     googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC4R6AN7SmujjPUIGKdyao2Kqitzr1kiRg&v=3.exp&libraries=geometry,drawing,places\"\n//     loadingElement={<div style={{ height: `100%` }} />}\n//     containerElement={<div style={{ height: `400px` }} />}\n//     mapElement={<div style={{ height: `100%` }} />}\n//   />","import React, {Component, Fragment} from 'react'\nimport { Layout, Breadcrumb, Icon, Input} from \"antd\"\nimport {withRouter} from \"react-router-dom\"\nimport MapContainer from './components/MapContainer'\n// import data from \"../../data/Data\"\nclass Home extends Component{\n    \n     \n      constructor(props) {\n        super(props);\n    \n        this.state = {\n          // The active selection's index\n          activeSuggestion: 0,\n          // The suggestions that match the user's input\n          filteredSuggestions: [],\n          // Whether or not the suggestionuggestions, you're on your own! list is shown\n          showSuggestions: false,\n          // What the user has entered\n          userInput: \"\",\n          clickable: false,\n          windowSize: 10, \n          emask_data: []\n         \n        };\n      }\n      componentDidMount(){\n        fetch(\"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\")\n        .then(response => response.json())\n        .then(data => this.setState({emask_data:data}))\n    }\n      // Event fired when the input value is changed\n      onChange = e => {\n        const  suggestions  = this.state.emask_data;\n        const userInput = e.currentTarget.value;\n        console.log(suggestions)\n        // Filter our suggestions that don't contain the user's input\n        const filteredSuggestions = suggestions.filter(\n          suggestion =>\n            suggestion.name.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n        );\n    \n        // Update the user input and filtered suggestions, reset the active\n        // suggestion and make sure the suggestions are shown\n        const suggestedValue=e.currentTarget.value.split('-')[0];\n        // console.log(\"hello  \" + suggestedValue)\n        // if (this.state.clickable ==true){\n        //   localStorage.setItem('userInput', suggestedValue);\n        //   console.log(\"hello\")\n        //   console.log(suggestedValue)\n       \n        // }\n        // console.log(e.currentTarget.value)\n        this.setState({\n          activeSuggestion: 0,\n          filteredSuggestions,\n          showSuggestions: true,\n          userInput: suggestedValue,\n          clickedInput:\"\"\n        });\n        \n       \n      };\n    \n      // Event fired when the user clicks on a suggestion\n      onClick = e => {\n        // Update the user input and reset the rest of the state\n        \n        this.setState({\n          activeSuggestion: 0,\n          filteredSuggestions: [],\n          showSuggestions: false,\n          userInput: e.currentTarget.innerText.split(\"-\")[0],\n          clickedInput: e.currentTarget.innerText.split(\"-\")[0],\n          clickable: true,\n          windowSize:15\n        });\n        console.log(\"Onclick\")\n       \n        // // console.log(\"hello\")\n        // console.log(e.currentTarget.innerText.split(\"-\")[0])\n       \n    \n      };\n    \n      // Event fired when the user presses a key down\n      onKeyDown = e => {\n        // console.log(\"dsaf\")\n        const { activeSuggestion, filteredSuggestions } = this.state;\n        // User pressed the enter key, update the input and close the\n        // suggestions\n        if (e.keyCode === 13) {\n          this.setState({\n            activeSuggestion: 0,\n            showSuggestions: false,\n            userInput: filteredSuggestions[activeSuggestion]\n          });\n        }\n        \n        // User pressed the up arrow, decrement the index\n        else if (e.keyCode === 38) {\n          if (activeSuggestion === 0) {\n            return;\n          }\n    \n          this.setState({ activeSuggestion: activeSuggestion - 1 });\n        }\n        // User pressed the down arrow, increment the index\n        else if (e.keyCode === 40) {\n          if (activeSuggestion - 1 === filteredSuggestions.length) {\n            return;\n          }\n    \n          this.setState({ activeSuggestion: activeSuggestion + 1 });\n        }\n        \n        \n      };\n    render(){\n        let suggestionsListComponent;\n\n        if (this.state.showSuggestions== true && this.state.userInput != \"\") {\n          if (this.state.filteredSuggestions.length) {\n            suggestionsListComponent = (\n            //   <ul class=\"suggestions\">\n            <div>\n                {this.state.filteredSuggestions.map((suggestion, index) => {\n                  let className;\n    \n                  // Flag the active suggestion with a class\n                  if (index === this.state.activeSuggestion) {\n                    className = \"suggestion-active\";\n                  }\n    \n                  return (\n                    \n                    <div className={className}\n                    key = {suggestion.name}\n               \n                    onClick={this.onClick}>\n                    <Icon type = \"search\"/>\n                    \n                    {\" \"+ suggestion.name +\"-\" +suggestion.type}\n                    </div>\n                    \n                      \n                    \n                  );\n                })}\n            </div>\n            );\n          } else {\n            suggestionsListComponent = (\n              <div className=\"no-suggestions\">\n                <em>Not Found</em>\n              </div>\n            );\n          }\n        }\n\n        return(\n            <Fragment>\n                <Input\n          type=\"text\"\n          onChange={this.onChange}\n          onKeyDown={this.onKeyDown}\n          value={this.state.userInput}\n          placeholder= \"Search person\"\n        />\n        \n       \n       \n        {suggestionsListComponent}\n               \n                <MapContainer\n    googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAOOgr6Eg-N_Pi3Ic5mNo1EybmjAH3w1D0&v=3.exp&libraries=geometry,drawing,places\"\n    loadingElement={<div style={{ height: `100%` }} />}\n    containerElement={<div style={{ height: `400px` }} />}\n    mapElement={<div style={{ height: `100%` }} />}\n    clickedInput= {this.state.clickedInput}\n    clickable= {this.state.clickable}\n    windowSize= {this.state.windowSize}\n  />\n            </Fragment>\n           \n            \n          \n      \n        )\n    }\n}\nexport default withRouter(Home);","import React, {Component} from \"react\"\nimport data from \"../../data/Data\"\nimport moment from \"moment\"\nimport {Card, Avatar, Col, Icon } from \"antd\";\nconst {Meta} = Card\nclass History extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            emask_data: [], \n            count_: 0\n        }\n    }\n    componentDidMount(){\n        if(localStorage.getItem(\"count_data\")){\n            this.setState({count: localStorage.setItem})\n        }\n        localStorage.setItem(\"count_data\", 0)\n        \n        fetch(\"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\")\n        .then(response => response.json())\n        .then(data => this.setState({emask_data:data}))\n    }\n    sortData(){\n        let sortedData = this.state.emask_data.sort(function(a, b) {\n            \n            // Compare the 2 dates\n            if (moment(a.date).isBefore(b.date)) return 1;\n            if (moment(a.date).isAfter(b.date)) return -1;\n            return 0;\n        });\n          return sortedData\n    }\n    listDate(){\n        let sortedData = this.sortData();\n        // console.log(sortedData)\n        let list_date = []\n        for (let i =0 ; i < sortedData.length; i++){\n            \n            if (i === 0){\n                list_date.push(moment(sortedData[i].date).format(\"YYYY-MM-DD\"))\n            }else{\n                // console.log(i)\n                // console.log(sortedData[i].date)\n                if (moment(sortedData[i].date).format(\"YYYY-MM-DD\") !== moment(sortedData[i-1].date).format(\"YYYY-MM-DD\")){\n                    list_date.push(moment(sortedData[i].date).format(\"YYYY-MM-DD\"))\n                }\n            }\n        }\n        return list_date\n    }\n    \n    render(){\n        let sortedData= this.sortData();\n        let listDate = this.listDate();\n        console.log(\"list date\")\n        console.log(listDate)\n\n        return(\n            <div>\n              {listDate.map((item, index) =>{\n                  return(\n                      <div>\n                      <h3><b>{moment(item).format((\"DD-MMMM-YYYY\"))} </b></h3>\n                      <hr></hr>\n                      {sortedData.map((item1, index1) =>{\n                          if(moment(item1.date).format(\"YYYY-MM-DD\") === item  ){\n                                return(\n                                    <Card >\n                                        <Col lg={10} md={12} sm={24}>\n                                           \n                                        <Meta\n                                avatar={<Avatar size = {20} icon= {item1.status === \"ALERTED\"? \"alert\": \"check\"}  style= {{backgroundColor: \"green\" }} />}\n                                title =  {item1.name}\n                            /></Col>\n                            <Col lg={10} md={12} sm={24}> {moment(item1.date).format(\"LT\")}</Col>\n                            </Card>\n                                )\n                          }\n                      })}\n                      </div>\n                      \n                  )\n              })}  \n            </div>\n        )\n    }\n}\nexport default History","import React, {Component} from \"react\"\nimport {  Form, Input, Button, Checkbox, Select }  from'antd'\nimport moment from \"moment\"\nimport {withRouter} from \"react-router-dom\"\nimport axios from 'axios'\nconst {Item} = Form\nconst {Option} = Select\nconst layout = {\n    labelCol: {\n      span: 8,\n    },\n    wrapperCol: {\n      span: 16,\n    },\n  };\n  const tailLayout = {\n    wrapperCol: {\n      offset: 8,\n      span: 16,\n    },\n  };\nclass Scan extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n   \n      item : {\n        date: moment().format('YYYY-MM-DD hh:mm:ss'),\n        address: \"\",\n        email: \"\",\n        isMapOpen: true,\n        key: \"\",\n        name: \"\",\n        phone: \"\",\n        status: \"ALERTED\",\n        type: \"\",\n        emask_data:[]\n\n      }\n    };\n    this.onChange= this.onChange.bind(this)\n    this.onClick = this.onClick.bind(this)\n  }\n  componentDidMount(){\n    fetch(\"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\")\n        .then(response => response.json())\n        .then(data => this.setState({emask_data:data}))\n  }\n  onChange = (e) =>{\n    let new_item = this.state.item\n    new_item.type =   e;\n    this.setState({\n      item: new_item\n    })\n  }\n  onNameChange = e =>{\n    let new_item = this.state.item\n    new_item.name =   e.currentTarget.value;\n    new_item.key= (this.state.emask_data.length+1).toString()\n    this.setState({\n      item: new_item\n    })\n  }\n  onAddressChange = e =>{\n    let new_item = this.state.item\n    new_item.address =   e.currentTarget.value;\n    this.setState({\n      item: new_item\n    })\n  }\n  onPhoneChange = e =>{\n    let new_item = this.state.item\n    new_item.phone =   e.currentTarget.value;\n    this.setState({\n      item: new_item\n    })\n  }\n  onEmailChange = e =>{\n    let new_item = this.state.item\n    new_item.email =   e.currentTarget.value;\n    this.setState({\n      item: new_item\n    })\n  }\n  onClick(){\n   \n    \n    // const data= {\n    //   key5: `${this.state.item.date}`,\n    //   key2: `${this.state.item.address}`,\n    //   key3: `${this.state.item.email}`,\n    //   key4: `${this.state.item.isMapOpen}`,\n    //   key1: `${this.state.item.key}`,\n    //   key6: `${this.state.item.name}`,\n    //   key7: `${this.state.item.phone}`,\n    //   key8: `${this.state.item.status}`,\n    //   key9: `${this.state.item.type}`\n    // };\n    // axios.post(\n    //   \"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\",\n    //   {\n    //     key5: `${this.state.item.date}`,\n    //     key2: `${this.state.item.address}`,\n    //     key3: `${this.state.item.email}`,\n    //     key4: `${this.state.item.isMapOpen}`,\n    //     key1: `${this.state.item.key}`,\n    //     key6: `${this.state.item.name}`,\n    //     key7: `${this.state.item.phone}`,\n    //     key8: `${this.state.item.status}`,\n    //     key9: `${this.state.item.type}`\n    //   }\n    \n    // ).then(res =>{console.log(res)})\n    \n    \n    this.props.history.push(\"/camera\", this.state.item)\n    window.location.reload(false);\n    \n  }\n    render(){\n      const { getFieldDecorator } = this.props.form;\n       return (\n          <Form\n            {...layout}\n            name=\"basic\"\n            \n          >\n            <Item\n              label=\"Name\"\n              name=\"name\"\n              >\n              {getFieldDecorator('userName', {\n                initialValue: this.state.item.name,\n                rules: [{ required: true, message: 'Please input your name!' }],\n              })(\n              <Input   onChange = {this.onNameChange}/>\n              )}\n              \n              </Item>\n      \n            <Item\n              label=\"Address\"\n              name=\"Address\"\n             \n            >\n               {getFieldDecorator('address', {\n                 initialValue: this.state.item.address,\n                rules: [{ required: true, message: 'Please input your address!' }],\n              })(\n              <Input  onChange = {this.onAddressChange}/>\n              )}  </Item>\n            <Item\n              label=\"Phone number\"\n              name=\"Phone number\"\n              \n            >\n               {getFieldDecorator('phone', {\n                 initialValue: this.state.item.phone,\n                rules: [{ required: true, message: 'Please input your phone number!' }],\n              })(\n              <Input   onChange = {this.onPhoneChange}/>\n              )}          \n              </Item>\n              <Item\n              label=\"Email\"\n              name=\"email\"\n              >\n              {getFieldDecorator('email', {\n                initialValue: this.state.item.email,\n                rules: [{ required: true, message: 'Please input your email!' }],\n              })(\n              <Input   onChange = {this.onEmailChange}/>\n              )}\n              \n              </Item>\n            <Item\n              label=\"status\"\n              name=\"type\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your name!',\n                },\n              ]}\n\n            >\n              <Select\n                value={this.state.item.type}\n                \n                onChange={this.onChange}\n                \n              >\n                <Option value=\"Employee\">Employee</Option>\n                <Option value=\"Non-Employee\">Non-Employee</Option>\n              </Select>\n            </Item>\n      \n            \n            <Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\" onClick = {this.onClick}>\n                Submit\n              </Button>\n            </Item>\n          </Form>\n        );\n  }\n}\nexport default Form.create({ name: 'normal_login' })(withRouter(Scan));","import React, {Component, useState, useEffect} from 'react'\nimport { Layout, Tabs, Menu,Dropdown, Table, Tag, DatePicker} from \"antd\"\nimport {withRouter} from \"react-router-dom\"\nimport moment from \"moment\"\nimport \"../style/supervisedTable.css\"\n// import data from  \"../../../data/Data\"\nconst {Content} = Layout;\n\nconst {\n    TabPane \n  } = Tabs;\n  \n  const column = [\n      {\n        title : \"Name\", \n        dataIndex: \"name\",\n        key : \"name\", \n        \n        sorted: (a,b) => a.name.length -b.name.length,\n        sortDirections: [\"descend\", \"ascend\"]\n\n      }, \n      {\n        title : \"Email\", \n        dataIndex: \"email\",\n        key : \"email\",\n        sorted: (a,b) => a.email.length- b.email.length,\n        sortDirections: [\"descend\", \"ascend\"]\n\n      },\n      {\n        title : \"Phone\", \n        dataIndex: \"phone\",\n        key : \"phone\",\n        sorted: (a,b) => a.phone- b.phone,\n        sortDirections: [\"descend\", \"ascend\"]\n\n      },\n      {\n        title : \"Status\", \n        dataIndex: \"status\",\n        key : \"status\", \n        render: status =>{\n            let color = \"red\";\n            if (status=== \"CONFIRMED\"){\n                color = \"green\"\n            }else if (status ===\"ALERTED\"){\n                color= \"red\"\n            }\n            return (\n                <div>\n                    <Tag color = {color} >\n                        {status}\n                    </Tag>\n                </div>\n            )\n        }\n      },\n      {\n        title : \"Date\", \n        dataIndex: \"date\",\n        key : \"date\",\n        sorted: (a,b) => moment(a.date).isAfter(b.date), \n        sortDirections: [\"descend\", \"ascend\"]\n\n      },\n      \n      \n\n  ];\n  \n\nclass SupervisedTable extends Component{\n    \n   state= {\n     selectedOption: \"1\", \n     pickeddate : moment('2020/06/09', 'YYYY/MM/DD'), \n     emask_data:[]\n   }\n   \n    componentDidMount () {\n        \n        localStorage.setItem('route', this.props.location.pathname);\n        fetch(\"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\")\n        .then(response => response.json())\n        .then(data => this.setState({emask_data:data}))\n       \n      };\n    render(){\n      const dateFormat = 'YYYY/MM/DD';\n        const employees = this.state.emask_data.filter(e =>{\n          console.log(this.state.pickeddate)\n          if(this.state.selectedOption == '1'){\n            console.log(\"hello\")\n            console.log(moment(e.date, \"YYYY/MM/DD\"))\n            return e.type === \"Employee\" && moment(e.date).format(\"YYYY-MM-DD\")=== moment(this.state.pickeddate).format(\"YYYY-MM-DD\")\n          }else if (this.state.selectedOption === '3'){\n            return e.type === \"Employee\" && moment(e.date, \"YYYY/MM/DD\").month() === this.state.pickeddate.month() && moment(e.date, \"YYYY/MM/DD\").year() === this.state.pickeddate.year()\n    \n          }else if(this.state.selectedOption === '2'){\n            return e.type === \"Employee\" && moment(e.date, \"YYYY/MM/DD\").month() === this.state.pickeddate.month() && moment(e.date, \"YYYY/MM/DD\").year() === this.state.pickeddate.year() && moment(e.date, \"YYYY/MM/DD\").isoWeek() === this.state.pickeddate.isoWeek()\n    \n          }\n             \n        }\n        );\n        const non_employees = this.state.emask_data.filter(e =>{\n            return e.type === \"Non-Employee\"\n        }\n        );\n        const menu = (\n          <Menu mode = \"horizontal\" defaultSelectedKeys = {['1']}>\n            <Menu.Item key=\"1\" onClick = {() => {this.setState({selectedOption:'1'})}}>\n              All day\n            </Menu.Item>\n            <Menu.Item key=\"2\" onClick = {() => {this.setState({selectedOption:'2'})}}>\n              All week  \n            </Menu.Item>\n            \n            <Menu.Item key=\"3\"onClick = {() => {this.setState({selectedOption:'3'})}} >\n              All month\n            </Menu.Item>\n          </Menu>\n        );\n        return(\n            <Content>\n                 <Tabs defaultActiveKey = \"1\">\n                   \n                    <TabPane key = \"1\" tab = \"Employees\">\n                    <div id = \"datepicker\">\n                      <DatePicker defaultValue={moment('2020/06/09', dateFormat)} format={dateFormat} onChange={date => {this.setState({pickeddate : date})}}/>\n                    </div>\n                    <div id = \"dateoption\">\n                      \n                       {menu}\n                    \n                    </div>\n                    \n                        <Table dataSource = {employees}  columns = {column} scroll={{ x: 'calc(700px + 50%)', y: 240 }} />\n                    </TabPane>\n                    <TabPane key = \"2\" tab = \"Non-Enployees\">\n                    <div id = \"datepicker\">\n                      <DatePicker defaultValue={moment('2020/06/09', dateFormat)} format={dateFormat} onChange={date => {this.setState({pickeddate : date})}}/>\n                    </div>\n                    <div id = \"dateoption\">\n                      \n                       {menu}\n                    \n                    </div>\n                        <Table dataSource = {non_employees}  columns = {column} scroll={{ x: 'calc(700px + 50%)', y: 240 }}/>\n                    </TabPane>\n                </Tabs>\n            </Content>\n        )\n    }\n}\nexport default withRouter(SupervisedTable);","import {Avatar, Row, Col, Card} from \"antd\"\nimport React, {Component, Fragment} from 'react'\nimport data from \"../../../data/Data\"\nconst {Grid, Meta} = Card;\n\nclass MostAlerted extends Component{\n  render(){\n    return(\n        <Fragment>\n            <hr></hr>\n            <Row>\n                <Col span={18} push={6}>\n                    <div style = {{paddingLeft: 100 }}>\n                        <Meta\n                            avatar={<Avatar size = {100} icon= \"user\" />}\n                            \n                        />\n                    </div>\n                    \n                  \n                </Col>\n                <Col span={6} pull={18}>\n                <div> 1. </div>\n                    <h2> Frank</h2>\n                    <h2><b> 23</b></h2>\n                \n                </Col>\n            </Row>\n            \n            \n        </Fragment>\n        \n    )\n  }\n}\nexport default MostAlerted;","import {Layout, Row, Col,Card} from \"antd\"\nimport React, {Component} from 'react'\nimport { withConfigConsumer } from \"antd/lib/config-provider/context\"\nimport { withRouter } from \"react-router-dom\"\nimport MostAlerted from \"./MostAlerted\"\nconst data = [\n  {\n    time: \"8 am\",\n    alert: 20\n  },\n  {\n    time: \"9 am\",\n    alert: 27\n  },\n  {\n    time: \"10 am\",\n    alert: 36\n  },\n  {\n    time: \"11 am\",\n    alert: 56\n  },\n  {\n    time: \"12 pm\",\n    alert: 53\n  },\n  {\n    time: \"1 pm\",\n    visitor: 62\n  },\n  {\n    time: \"2 pm\",\n    visitor: 75\n  },\n  {\n    time: \"3 pm\",\n    visitor: 95\n  },\n  {\n    time: \"4 pm\",\n    visitor: 125\n  },\n  {\n    time: \"5 pm\",\n    visitor: 175\n  },\n];\n\nclass DataAnalyticRow extends Component {\n    constructor() {\n      super();\n      this.state = {};\n  \n    }\n  \n    render() {\n      return(\n        <Layout >\n          <Row gutter={18}>\n            <Col lg={10} md={12} sm={24}>\n              <Card bordered={false} title= \"Most Alerted (month)\">\n                    <MostAlerted/>\n              </Card>\n            </Col>\n            <Col lg={10} md={12} sm={24}>\n              <Card bordered={false} title = \"Daily Alerted\">\n                <hr></hr>\n                <h2>5</h2>\n              </Card>\n            </Col>\n            {/* <Col lg={6} md={12} sm={24}>\n              <Card bordered={false}>\n                <h3>month</h3>\n              </Card>\n            </Col>\n            <Col lg={6} md={12} sm={24}>\n              <Card bordered={false}>\n                <h3>month</h3>\n              </Card>\n            </Col> */}\n          </Row>\n        </Layout>\n      );\n    }\n  }\n  export default DataAnalyticRow","import {Layout, Row, Col,Card } from \"antd\"\nimport React, {Component} from 'react'\nimport moment, { months } from \"moment\"\nimport { Chart,\n    Geom,\n    Axis,\n    Tooltip, Legend} from \"bizcharts\";\n  \n const {Content} = Layout \nclass MaskChart extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            emask_data:[],\n            month_data:[]\n        }\n    }\n    componentDidMount () {\n        \n          fetch(\"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\")\n        .then(response => response.json())\n        .then(data => this.setState({emask_data:data}))\n       \n      };\n      extract_month(){\n          var months_data = [\n            {\n                month: \"Jan\",\n                count:0,\n                \n            },\n            {\n                month: \"Feb\",\n                count:0,\n                \n            },\n            {\n                month: \"Mar\",\n                count:0,\n                \n            },\n            {\n                month: \"Apr\",\n                count:0,\n                \n            }, \n            {\n                month: \"May\",\n                count:0,\n               \n            },\n            {\n                month: \"Jun\",\n                count:0,\n                \n            },\n            {\n                month: \"jul\",\n                count:0,\n               \n            },\n            {\n                month: \"Aug\",\n                count:0,\n               \n            },\n            {\n                month: \"Sep\",\n                count:0,\n                \n            },\n            {\n                month: \"Oct\",\n                count:0,\n                \n            }, \n            {\n                month: \"Nov\",\n                count:0,\n                \n            }, \n            {\n                month: \"Dec\",\n                count:0,\n                \n            }\n        ];\n          \n          for(var i =0; i < this.state.emask_data.length; i++){\n            for(var j=0; j < months_data.length; j++){\n                var mon= j+1;\n                if(this.state.emask_data[i].status ===\"ALERTED\"){\n                    if(parseInt(moment(this.state.emask_data[i].date).format(\"MM\")) == mon ){\n                    \n                        months_data[j].count = months_data[j].count+1\n                        break;\n                    }\n                }\n            }\n          }\n          return months_data;\n\n      }\n    \n    render(){\n        var month_data = this.extract_month()\n        \n        const getTooltipData = (month, count) => {\n            return {\n                name: \"the number of alerted\",\n                value: count\n               \n            };\n        }\n        \n        return(\n            <Content>\n                <Card>\n                    <h2 style= {{textAlign:\"center\"}}> The number of unweared masks by month </h2>\n                <Chart data={month_data} height={200} forceFit={true}>\n        <Legend />\n        <Axis name='month'         label={{\n            textStyle: {\n                fill: 'red',  // colour\n                textBaseline: 'top'  // Align the baseline\n            },\n            \n        }}/>\n        <Axis name='count' />\n        <Tooltip         crosshairs={{\n            type: \"y\" \n        }} />\n        <Geom type='interval' position='month*count'                style={{ cursor: 'pointer' }} // When the mouse hover goes up, it shows the little hand, free to send\n        active={[\n            true,\n            {\n                style: {\n                    fill: 'black',  // pillar color, continue to mourn\n                    shadowColor: 'red',  // overall shadow color, including edges\n                    shadowBlur: 1,  // shadow transparency\n                    opacity: 0 // pillar color transparency\n                }\n            }\n        ]}        tooltip={[\"month*count\", getTooltipData]} adjust={[{ type: 'dodge', marginRatio: 1 / 32 }]} />\n      </Chart>\n                </Card>\n            </Content>\n        )\n    }\n}\nexport default MaskChart;","import React, {Component} from 'react'\nimport { Layout, Tabs,  Breadcrumb} from \"antd\"\nimport {withRouter} from \"react-router-dom\"\nimport SupervisedTable from './components/SupervisedTable'\nimport DataAnalyticsRow from './components/DataAnalytics'\nimport  MaskChart from \"./components/MaskChart\"\nconst {Content} = Layout;\nconst {BreadcrumbItem} = Breadcrumb;\n  \nclass Customer extends Component{\n    \n    render(){\n        return(\n            <Layout>\n                <Content>\n                <h3>Customer</h3>\n                <DataAnalyticsRow/>\n                <MaskChart/>\n            <SupervisedTable/>\n                </Content>\n            </Layout>\n            \n        )\n    }\n}\nexport default withRouter(Customer);","import styled, { css, keyframes } from 'styled-components';\n\nconst flashAnimation = keyframes`\n  from {\n    opacity: 0.75;\n  }\n\n  to {\n    opacity: 0;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const Container = styled.div`\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n  max-width: ${({ maxWidth }) => maxWidth && `${maxWidth}px`};\n  max-height: ${({ maxHeight }) => maxHeight && `${maxHeight}px`};\n`;\n\nexport const Canvas = styled.canvas`\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nexport const Video = styled.video`\n  position: absolute;\n\n  &::-webkit-media-controls-play-button {\n    display: none !important;\n    -webkit-appearance: none;\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  bottom: 20px;\n  left: 20px;\n  box-shadow: 0px 0px 20px 56px rgba(0, 0, 0, 0.6);\n  border: 1px solid #ffffff;\n  border-radius: 10px;\n`;\n\nexport const Flash = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  opacity: 0;\n  background-color: #ffffff;\n\n  ${({ flash }) => {\n    if (flash) {\n      return css`\n        animation: ${flashAnimation} 750ms ease-out;\n      `;\n    }\n  }}\n`;\n\nexport const Button = styled.button`\n  width: 75%;\n  min-width: 100px;\n  max-width: 250px;\n  margin-top: 24px;\n  padding: 12px 24px;\n  background: silver;\n`;","import React, { useState, useRef, useEffect, Fragment } from \"react\";\nimport Measure from \"react-measure\";\nimport { useUserMedia } from \"./useUserMedia\";\nimport { useCardRatio } from \"./userCardRatio\";\nimport { useOffsets } from \"./useOffSet\";\nimport {\n  Video,\n  Canvas,\n  Wrapper,\n  Container,\n  Flash,\n  Overlay,\n  Button\n} from \"./styles\";\nimport { withRouter } from \"react-router-dom\";\nimport { OmitProps } from \"antd/lib/transfer/renderListBody\";\nimport axios from \"axios\"\nconst CAPTURE_OPTIONS = {\n  audio: false,\n  video: { facingMode: \"environment\" }\n};\n\nfunction Camera(props) {\n  const canvasRef = useRef();\n  const videoRef = useRef();\n\n  const [container, setContainer] = useState({ width: 0, height: 0 });\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const [isCanvasEmpty, setIsCanvasEmpty] = useState(true);\n  const [isFlashing, setIsFlashing] = useState(false);\n  const [linkBlob, setLinkBlob] = useState(\"\");\n  const [emask_data, setEmaskData] = useState([])\n  const mediaStream = useUserMedia(CAPTURE_OPTIONS);\n  const [aspectRatio, calculateRatio] = useCardRatio(1.586);\n  \n  const offsets = useOffsets(videoRef.current && videoRef.current.videoWidth,videoRef.current && videoRef.current.videoHeight,container.width,container.height);\n\n  if (mediaStream && videoRef.current && !videoRef.current.srcObject) {\n    videoRef.current.srcObject = mediaStream;\n  }\n \n\n  function handleResize(contentRect) {\n    setContainer({\n      width: contentRect.bounds.width,\n      height: Math.round(contentRect.bounds.width / aspectRatio)\n    });\n  }\n\n  function handleCanPlay() {\n    calculateRatio(videoRef.current.videoHeight, videoRef.current.videoWidth);\n    setIsVideoPlaying(true);\n    videoRef.current.play();\n  }\n\n  function handleCapture() {\n    const context = canvasRef.current.getContext(\"2d\");\n\n    context.drawImage(\n      videoRef.current,\n      offsets.x,\n      offsets.y,\n      container.width,\n      container.height,\n      0,\n      0,\n      container.width,\n      container.height\n    );\n    var link = document.createElement(\"a\");\n  link.download = \"image.png\";\n    canvasRef.current.toBlob(function(blob){{\n        link.href = URL.createObjectURL(blob);\n        console.log(blob);\n        setLinkBlob(link.href)\n        console.log(link.href); // this line should be here\n      }}, \"image/png\", 1);\n    setIsCanvasEmpty(false);\n    setIsFlashing(true);\n  }\n\n  function handleClear() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setIsCanvasEmpty(false);\n    // onClear();\n  }\n  useEffect(() => { \n    // console.log(props.history.location.state)\n    \n\n    \n    \n    setTimeout(() => { if (isVideoPlaying){\n      if(isCanvasEmpty){\n        handleCapture();\n        handleClear();\n     \n        axios.post(\n          \"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\",\n          {\n            key5: `${props.history.location.state.date}`,\n          key2: `${props.history.location.state.address}`,\n          key3: `${props.history.location.state.email}`,\n          key4: `${props.history.location.state.isMapOpen}`,\n          key1: `${props.history.location.state.key}`,\n          key6: `${props.history.location.state.name}`,\n          key7: `${props.history.location.state.phone}`,\n          key8: `${props.history.location.state.status}`,\n          key9: `${props.history.location.state.type}`\n          }).then(res =>{console.log(res)})\n        \n      }\n      \n      \n      \n     \n    }}, 2000)\n      \n    }\n  );\n  function onclick(){\n    if (localStorage.getItem(\"count_data\")){\n      const count= parseInt( localStorage.getItem(\"count_data\"))\n      localStorage.setItem(\"count_data\", count+1)\n    }else{\n      localStorage.setItem(\"count_data\", 1)\n    }\n    console.log(props.history.location.state.status)\n    console.log(props.history.location.state.phone)\n    if (props.history.location.state.status === \"ALERTED\"){\n\n      axios.post(\"https://f0mrzhjnf1.execute-api.ap-southeast-2.amazonaws.com/stage\", {\n        message:\"U should wear the meask immediately\",\n        phoneNumber: `${props.history.location.state.phone}`\n      })\n    }\n    props.history.push(\"/\");\n    // window.location.reload(false);\n    \n  }\n\n\n\n  if (!mediaStream) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n    <Measure bounds onResize={handleResize}>\n      {({ measureRef }) => (\n        <Wrapper>\n          <Container\n            ref={measureRef}\n            maxHeight={videoRef.current && videoRef.current.videoHeight}\n            maxWidth={videoRef.current && videoRef.current.videoWidth}\n            style={{\n              height: `${container.height}px`\n            }}\n          >\n            <Video\n              ref={videoRef}\n              hidden={!isVideoPlaying}\n              onCanPlay={handleCanPlay}\n              autoPlay\n              playsInline\n              muted\n              style={{\n                top: `-${offsets.y}px`,\n                left: `-${offsets.x}px`\n              }}\n            />\n\n            <Overlay hidden={!isVideoPlaying} />\n\n            <Canvas\n              ref={canvasRef}\n              width={container.width}\n              height={container.height}\n            />\n\n            <Flash\n              flash={isFlashing}\n              onAnimationEnd={() => setIsFlashing(false)}\n            />\n          </Container>\n\n         \n          {!isCanvasEmpty && \n            <Fragment>\n            <div>\n            <h2 style= {{textAlign:\"center\"}}>Preview</h2>\n            <img src = {linkBlob}/>\n            </div>\n            <Button onClick= {onclick} > Go Back </Button>\n            </Fragment>\n          }\n          \n\n        </Wrapper>\n      )}\n    </Measure>\n    \n    </Fragment>\n  );\n}\nexport default withRouter(Camera)","import { useState, useEffect } from \"react\";\n\nexport function useUserMedia(requestedMedia) {\n  const [mediaStream, setMediaStream] = useState(null);\n\n  useEffect(() => {\n    async function enableStream() {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia(requestedMedia);\n        setMediaStream(stream);\n      } catch(err) {\n        // Removed for brevity\n      }\n    }\n\n    if (!mediaStream) {\n      enableStream();\n    } else {\n      return function cleanup() {\n        mediaStream.getTracks().forEach(track => {\n          track.stop();\n        });\n      }\n    }\n  }, [mediaStream, requestedMedia]);\n\n  return mediaStream;\n}","import { useState, useCallback } from \"react\";\n\nexport function useCardRatio(initialRatio) {\n  const [aspectRatio, setAspectRatio] = useState(initialRatio);\n\n  const calculateRatio = useCallback((height, width) => {\n    if (height && width) {\n      const isLandscape = height <= width;\n      const ratio = isLandscape ? width / height : height / width;\n\n      setAspectRatio(ratio);\n    }\n  }, []);\n\n  return [aspectRatio, calculateRatio];\n}","import { useState, useEffect } from \"react\";\nimport { defineLocale } from \"moment\";\n\nexport  function useOffsets(vWidth, vHeight, cWidth, cHeight) {\n  const [offsets, setOffsets] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (vWidth && vHeight && cWidth && cHeight) {\n      const x = vWidth > cWidth\n        ? Math.round((vWidth - cWidth) / 2)\n        : 0;\n\n      const y = vHeight > cHeight\n        ? Math.round((vHeight - cHeight) / 2)\n        : 0;\n\n      setOffsets({ x, y });\n    }\n  }, [vWidth, vHeight, cWidth, cHeight]);\n\n  return offsets;\n}","import React, { useState, Component } from 'react';\nimport './App.css';\nimport { Badge,Layout, Avatar, Menu, Icon, Breadcrumb, Button } from 'antd';\nimport {Link, Route, withRouter, BrowserRouter,  Switch} from \"react-router-dom\"\nimport Home from \"../pages/home/Home\"\n// npm install --save-dev @iconify/react @iconify/icons-ant-design\nimport History from \"../pages/history/History\"\nimport Scan from \"../pages/scan/Scan\"\nimport Customer from \"../pages/customer/Customer\"\nimport Camera from \"../pages/scan/components/Camera\"\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      collapsed:\"true\", \n      count : 0\n    };\n  }\n  \n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n  \n  componentDidMount(){\n    if(localStorage.getItem(\"count_data\")){\n      this.setState({count: localStorage.getItem(\"count_data\")})\n    }\n  }\n  render(){\n\n  return (\n    <div className=\"App\">\n      \n      <Layout>\n       \n        <Layout>\n          <Sider trigger={null} collapsible collapsed={this.state.collapsed}>\n            <Menu\n            \n              mode=\"inline\"\n              theme = \"dark\"\n              \n            >\n              <Menu.Item key='/' >\n                <Link to = \"/\">\n                  <Icon type = \"home\"/>\n                  <span>Home </span>\n                </Link>\n                \n              </Menu.Item>\n              <Menu.Item key='/customer' >\n              <Link to = \"/customer\">\n                  <Icon type = \"user\"/>\n                  <span>Customer </span>\n                </Link>\n              </Menu.Item>\n              <Menu.Item key='/history' >\n              <Badge count = {this.state.count}  offset={[10, 10]} >\n              <Link to = \"/history\">\n              \n                  <Icon type = \"history\"/>\n                  <span>History </span>\n                </Link>\n                </Badge>\n              </Menu.Item>\n              <Menu.Item key='/scan' >\n                \n                <Link to = \"/scan\">\n                    <Icon type = \"scan\"/>\n                    <span>Scan </span>\n                </Link> \n                \n              </Menu.Item>\n             \n             \n            </Menu>\n          </Sider>\n          <Layout>\n          <Header style={{ paddingLeft:10, backgroundColor: \"white\" }}>\n            <Icon type={this.state.collapsed? \"right-circle\": \"left-circle\"} onClick = {this.toggle}  />\n            \n          </Header>\n            <Content style={{ padding: '0 50px', minHeight:400, backgroundColor: \"white\" }}>\n            <Switch>\n                <Route exact path = \"/\"  component = {Home}/>\n                <Route path = \"/customer\" component = {Customer}/>\n                <Route path = \"/history\" ><History count = {this.state.count} onCountChange = {this.onCountChange} setCountZero = {this.setCountZero}/></Route>\n                <Route path = \"/scan\" ><Scan count = {this.state.count} onCountChange = {this.onCountChange} setCountZero = {this.setCountZero}/></Route>\n                <Route path = \"/camera\" component = {Camera}/>\n                \n              </Switch>\n              \n            \n              \n            </Content>\n            <Footer style={{ textAlign: 'center' }}></Footer>\n          </Layout>\n        </Layout>\n      </Layout>\n      \n    </div>\n  );\n  }\n}\n\nexport default  App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter>\n<App/>\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}