{"ast":null,"code":"var _jsxFileName = \"/home/victor/COVID-19-Coding-Fest/src/pages/history/History.js\";\nimport React, { Component } from \"react\";\nimport data from \"../../data/Data\";\nimport moment from \"moment\";\nimport { Card, Avatar, Col } from \"antd\";\nconst Meta = Card.Meta;\n\nclass History extends Component {\n  sortData() {\n    let sortedData = data.sort(function (a, b) {\n      // Compare the 2 dates\n      if (moment(a.date).isBefore(b.date)) return -1;\n      if (moment(a.date).isAfter(b.date)) return 1;\n      return 0;\n    });\n    return sortedData;\n  }\n\n  listDate() {\n    let sortedData = this.sortData(); // console.log(sortedData)\n\n    let list_date = [];\n\n    for (let i = 0; i < sortedData.length; i++) {\n      if (i === 0) {\n        list_date.push(sortedData[i].date);\n      } else {\n        // console.log(i)\n        // console.log(sortedData[i].date)\n        if (!moment(sortedData[i].date).isSame(sortedData[i - 1].date)) {\n          list_date.push(sortedData[i].date);\n        }\n      }\n    }\n\n    return list_date;\n  }\n\n  render() {\n    let sortedData = this.sortData();\n    let listDate = this.listDate();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, listDate.map((item, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, moment(item).format(\"DD-MMMM-YYYY\"), \" \")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), sortedData.map((item1, index1) => {\n        if (moment(item1.date).isSame(item)) {\n          if (item1.status === \"ALERTED\") {\n            return React.createElement(Card, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 49\n              },\n              __self: this\n            }, React.createElement(Col, {\n              lg: 10,\n              md: 12,\n              sm: 24,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50\n              },\n              __self: this\n            }, React.createElement(Meta, {\n              avatar: React.createElement(Avatar, {\n                size: 20,\n                icon: \"alert\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 52\n                },\n                __self: this\n              }),\n              title: item1.name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51\n              },\n              __self: this\n            })), React.createElement(Col, {\n              lg: 10,\n              md: 12,\n              sm: 24,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55\n              },\n              __self: this\n            }, \" \", moment(item1.date).format(\"LT\")));\n          } else {\n            React.createElement(Card, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 59\n              },\n              __self: this\n            }, React.createElement(Col, {\n              lg: 10,\n              md: 12,\n              sm: 24,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }, React.createElement(Meta, {\n              avatar: React.createElement(Avatar, {\n                size: 20,\n                icon: \"check\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 62\n                },\n                __self: this\n              }),\n              title: item1.name,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            })), React.createElement(Col, {\n              lg: 10,\n              md: 12,\n              sm: 24,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65\n              },\n              __self: this\n            }, \" \", moment(item1.date).format(\"LT\")));\n          }\n        }\n      }));\n    }));\n  }\n\n}\n\nexport default History;","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/src/pages/history/History.js"],"names":["React","Component","data","moment","Card","Avatar","Col","Meta","History","sortData","sortedData","sort","a","b","date","isBefore","isAfter","listDate","list_date","i","length","push","isSame","render","map","item","index","format","item1","index1","status","name"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport data from \"../../data/Data\"\nimport moment from \"moment\"\nimport {Card, Avatar, Col } from \"antd\";\nconst {Meta} = Card\nclass History extends Component{\n    sortData(){\n        let sortedData = data.sort(function(a, b) {\n            \n            // Compare the 2 dates\n            if (moment(a.date).isBefore(b.date)) return -1;\n            if (moment(a.date).isAfter(b.date)) return 1;\n            return 0;\n        });\n          return sortedData\n    }\n    listDate(){\n        let sortedData = this.sortData();\n        // console.log(sortedData)\n        let list_date = []\n        for (let i =0 ; i < sortedData.length; i++){\n            if (i === 0){\n                list_date.push(sortedData[i].date)\n            }else{\n                // console.log(i)\n                // console.log(sortedData[i].date)\n                if (!moment(sortedData[i].date).isSame(sortedData[i-1].date)){\n                    list_date.push(sortedData[i].date)\n                }\n            }\n        }\n        return list_date\n    }\n    \n    render(){\n        let sortedData= this.sortData();\n        let listDate = this.listDate();\n        return(\n            <div>\n              {listDate.map((item, index) =>{\n                  return(\n                      <div>\n                      <h3><b>{moment(item).format((\"DD-MMMM-YYYY\"))} </b></h3>\n                      <hr></hr>\n                      {sortedData.map((item1, index1) =>{\n                          if(moment(item1.date).isSame(item) ){\n                              if(item1.status === \"ALERTED\"){\n                                return(\n                                    <Card >\n                                        <Col lg={10} md={12} sm={24}>\n                                        <Meta\n                                avatar={<Avatar size = {20} icon= \"alert\" />}\n                                title =  {item1.name}\n                            /></Col>\n                            <Col lg={10} md={12} sm={24}> {moment(item1.date).format(\"LT\")}</Col>\n                            </Card>\n                                )\n                            }else{\n                                <Card >\n                                        <Col lg={10} md={12} sm={24}>\n                                        <Meta\n                                avatar={<Avatar size = {20} icon= \"check\" />}\n                                title =  {item1.name}\n                            /></Col>\n                            <Col lg={10} md={12} sm={24}> {moment(item1.date).format(\"LT\")}</Col>\n                            </Card>\n                            }\n                          }\n                      })}\n                      </div>\n                      \n                  )\n              })}  \n            </div>\n        )\n    }\n}\nexport default History"]},"metadata":{},"sourceType":"module"}