{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _getLatitude = _interopRequireDefault(require(\"./getLatitude\"));\n\nvar _getLongitude = _interopRequireDefault(require(\"./getLongitude\"));\n\nvar _toRad = _interopRequireDefault(require(\"./toRad\"));\n\nvar _toDeg = _interopRequireDefault(require(\"./toDeg\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar getCenter = function getCenter(points) {\n  if (Array.isArray(points) === false || points.length === 0) {\n    return false;\n  }\n\n  var numberOfPoints = points.length;\n  var sum = points.reduce(function (acc, point) {\n    var pointLat = (0, _toRad.default)((0, _getLatitude.default)(point));\n    var pointLon = (0, _toRad.default)((0, _getLongitude.default)(point));\n    return {\n      X: acc.X + Math.cos(pointLat) * Math.cos(pointLon),\n      Y: acc.Y + Math.cos(pointLat) * Math.sin(pointLon),\n      Z: acc.Z + Math.sin(pointLat)\n    };\n  }, {\n    X: 0,\n    Y: 0,\n    Z: 0\n  });\n  var X = sum.X / numberOfPoints;\n  var Y = sum.Y / numberOfPoints;\n  var Z = sum.Z / numberOfPoints;\n  return {\n    longitude: (0, _toDeg.default)(Math.atan2(Y, X)),\n    latitude: (0, _toDeg.default)(Math.atan2(Z, Math.sqrt(X * X + Y * Y)))\n  };\n};\n\nvar _default = getCenter;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}