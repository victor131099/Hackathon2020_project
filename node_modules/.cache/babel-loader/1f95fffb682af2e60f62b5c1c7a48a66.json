{"ast":null,"code":"import _slicedToArray from \"/home/victor/COVID-19-Coding-Fest/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/victor/COVID-19-Coding-Fest/src/pages/scan/components/Camera.js\";\nimport React, { useState, useRef, useEffect, Fragment } from \"react\";\nimport Measure from \"react-measure\";\nimport { useUserMedia } from \"./useUserMedia\";\nimport { useCardRatio } from \"./userCardRatio\";\nimport { useOffsets } from \"./useOffSet\";\nimport { Video, Canvas, Wrapper, Container, Flash, Overlay, Button } from \"./styles\";\nimport model from \"../../../data/Data\";\nimport * as tf from '@tensorflow/tfjs';\nimport { withRouter } from \"react-router-dom\";\nimport { OmitProps } from \"antd/lib/transfer/renderListBody\";\nimport axios from \"axios\";\nconst CAPTURE_OPTIONS = {\n  audio: false,\n  video: {\n    facingMode: \"environment\"\n  }\n};\n\nfunction Camera(props) {\n  const canvasRef = useRef();\n  const videoRef = useRef();\n\n  const _useState = useState({\n    width: 0,\n    height: 0\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        container = _useState2[0],\n        setContainer = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isVideoPlaying = _useState4[0],\n        setIsVideoPlaying = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        isCanvasEmpty = _useState6[0],\n        setIsCanvasEmpty = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        isFlashing = _useState8[0],\n        setIsFlashing = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        linkBlob = _useState10[0],\n        setLinkBlob = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        emask_data = _useState12[0],\n        setEmaskData = _useState12[1];\n\n  const mediaStream = useUserMedia(CAPTURE_OPTIONS);\n\n  const _useCardRatio = useCardRatio(1.586),\n        _useCardRatio2 = _slicedToArray(_useCardRatio, 2),\n        aspectRatio = _useCardRatio2[0],\n        calculateRatio = _useCardRatio2[1];\n\n  const offsets = useOffsets(videoRef.current && videoRef.current.videoWidth, videoRef.current && videoRef.current.videoHeight, container.width, container.height);\n\n  if (mediaStream && videoRef.current && !videoRef.current.srcObject) {\n    videoRef.current.srcObject = mediaStream;\n  }\n\n  function handleResize(contentRect) {\n    setContainer({\n      width: contentRect.bounds.width,\n      height: Math.round(contentRect.bounds.width / aspectRatio)\n    });\n  }\n\n  function handleCanPlay() {\n    calculateRatio(videoRef.current.videoHeight, videoRef.current.videoWidth);\n    setIsVideoPlaying(true);\n    videoRef.current.play();\n  }\n\n  function handleCapture() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.drawImage(videoRef.current, offsets.x, offsets.y, container.width, container.height, 0, 0, container.width, container.height);\n    var link = document.createElement(\"a\");\n    link.download = \"image.png\";\n    canvasRef.current.toBlob(function (blob) {\n      {\n        link.href = URL.createObjectURL(blob);\n        console.log(blob);\n        setLinkBlob(link.href);\n        const emask = document.getElementById('emask');\n        model.execute(tf.browser.fromPixels(emask)); // console.log(link.href); // this line should be here\n      }\n    }, \"image/png\", 1);\n    setIsCanvasEmpty(false);\n    setIsFlashing(true);\n  }\n\n  function handleClear() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setIsCanvasEmpty(false); // onClear();\n  }\n\n  useEffect(() => {\n    // console.log(props.history.location.state)\n    setTimeout(() => {\n      if (isVideoPlaying) {\n        if (isCanvasEmpty) {\n          handleCapture();\n          handleClear(); // axios.post(\n          // \"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\",\n          // {\n          //   key5: `${props.history.location.state.date}`,\n          // key2: `${props.history.location.state.address}`,\n          // key3: `${props.history.location.state.email}`,\n          // key4: `${props.history.location.state.isMapOpen}`,\n          // key1: `${props.history.location.state.key}`,\n          // key6: `${props.history.location.state.name}`,\n          // key7: `${props.history.location.state.phone}`,\n          // key8: `${props.history.location.state.status}`,\n          // key9: `${props.history.location.state.type}`\n          // }).then(res =>{console.log(res)})\n        }\n      }\n    }, 2000);\n  });\n\n  function onclick() {\n    if (localStorage.getItem(\"count_data\")) {\n      const count = parseInt(localStorage.getItem(\"count_data\"));\n      localStorage.setItem(\"count_data\", count + 1);\n    } else {\n      localStorage.setItem(\"count_data\", 1);\n    }\n\n    console.log(props.history.location.state.status);\n    console.log(props.history.location.state.phone);\n\n    if (props.history.location.state.status === \"ALERTED\") {\n      axios.post(\"https://f0mrzhjnf1.execute-api.ap-southeast-2.amazonaws.com/stage\", {\n        message: \"U should wear the meask immediately\",\n        phoneNumber: \"\".concat(props.history.location.state.phone)\n      });\n    }\n\n    props.history.push(\"/\"); // window.location.reload(false);\n  }\n\n  if (!mediaStream) {\n    return null;\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Measure, {\n    bounds: true,\n    onResize: handleResize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, ({\n    measureRef\n  }) => React.createElement(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(Container, {\n    ref: measureRef,\n    maxHeight: videoRef.current && videoRef.current.videoHeight,\n    maxWidth: videoRef.current && videoRef.current.videoWidth,\n    style: {\n      height: \"\".concat(container.height, \"px\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Video, {\n    ref: videoRef,\n    hidden: !isVideoPlaying,\n    onCanPlay: handleCanPlay,\n    autoPlay: true,\n    playsInline: true,\n    muted: true,\n    style: {\n      top: \"-\".concat(offsets.y, \"px\"),\n      left: \"-\".concat(offsets.x, \"px\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }), React.createElement(Overlay, {\n    hidden: !isVideoPlaying,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), React.createElement(Canvas, {\n    ref: canvasRef,\n    width: container.width,\n    height: container.height,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), React.createElement(Flash, {\n    flash: isFlashing,\n    onAnimationEnd: () => setIsFlashing(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  })), !isCanvasEmpty && React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, \"Preview\"), React.createElement(\"img\", {\n    id: \"emask\",\n    src: linkBlob,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  })), React.createElement(Button, {\n    onClick: onclick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \" Go Back \")))));\n}\n\nexport default withRouter(Camera);","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/src/pages/scan/components/Camera.js"],"names":["React","useState","useRef","useEffect","Fragment","Measure","useUserMedia","useCardRatio","useOffsets","Video","Canvas","Wrapper","Container","Flash","Overlay","Button","model","tf","withRouter","OmitProps","axios","CAPTURE_OPTIONS","audio","video","facingMode","Camera","props","canvasRef","videoRef","width","height","container","setContainer","isVideoPlaying","setIsVideoPlaying","isCanvasEmpty","setIsCanvasEmpty","isFlashing","setIsFlashing","linkBlob","setLinkBlob","emask_data","setEmaskData","mediaStream","aspectRatio","calculateRatio","offsets","current","videoWidth","videoHeight","srcObject","handleResize","contentRect","bounds","Math","round","handleCanPlay","play","handleCapture","context","getContext","drawImage","x","y","link","document","createElement","download","toBlob","blob","href","URL","createObjectURL","console","log","emask","getElementById","execute","browser","fromPixels","handleClear","clearRect","setTimeout","onclick","localStorage","getItem","count","parseInt","setItem","history","location","state","status","phone","post","message","phoneNumber","push","measureRef","top","left","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, Fragment } from \"react\";\nimport Measure from \"react-measure\";\nimport { useUserMedia } from \"./useUserMedia\";\nimport { useCardRatio } from \"./userCardRatio\";\nimport { useOffsets } from \"./useOffSet\";\nimport {\n  Video,\n  Canvas,\n  Wrapper,\n  Container,\n  Flash,\n  Overlay,\n  Button\n} from \"./styles\";\nimport model from \"../../../data/Data\"\nimport * as tf from '@tensorflow/tfjs';\n\nimport { withRouter } from \"react-router-dom\";\nimport { OmitProps } from \"antd/lib/transfer/renderListBody\";\nimport axios from \"axios\"\nconst CAPTURE_OPTIONS = {\n  audio: false,\n  video: { facingMode: \"environment\" }\n};\n\nfunction Camera(props) {\n  const canvasRef = useRef();\n  const videoRef = useRef();\n\n  const [container, setContainer] = useState({ width: 0, height: 0 });\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const [isCanvasEmpty, setIsCanvasEmpty] = useState(true);\n  const [isFlashing, setIsFlashing] = useState(false);\n  const [linkBlob, setLinkBlob] = useState(\"\");\n  const [emask_data, setEmaskData] = useState([])\n  const mediaStream = useUserMedia(CAPTURE_OPTIONS);\n  const [aspectRatio, calculateRatio] = useCardRatio(1.586);\n  \n  const offsets = useOffsets(videoRef.current && videoRef.current.videoWidth,videoRef.current && videoRef.current.videoHeight,container.width,container.height);\n\n  if (mediaStream && videoRef.current && !videoRef.current.srcObject) {\n    videoRef.current.srcObject = mediaStream;\n  }\n \n\n  function handleResize(contentRect) {\n    setContainer({\n      width: contentRect.bounds.width,\n      height: Math.round(contentRect.bounds.width / aspectRatio)\n    });\n  }\n\n  function handleCanPlay() {\n    calculateRatio(videoRef.current.videoHeight, videoRef.current.videoWidth);\n    setIsVideoPlaying(true);\n    videoRef.current.play();\n  }\n\n  function handleCapture() {\n    const context = canvasRef.current.getContext(\"2d\");\n\n    context.drawImage(\n      videoRef.current,\n      offsets.x,\n      offsets.y,\n      container.width,\n      container.height,\n      0,\n      0,\n      container.width,\n      container.height\n    );\n    var link = document.createElement(\"a\");\n  link.download = \"image.png\";\n    canvasRef.current.toBlob(function(blob){{\n        link.href = URL.createObjectURL(blob);\n        console.log(blob);\n        setLinkBlob(link.href)\n        const emask = document.getElementById('emask');\n        model.execute(tf.browser.fromPixels(emask));\n        // console.log(link.href); // this line should be here\n      }}, \"image/png\", 1);\n    setIsCanvasEmpty(false);\n    setIsFlashing(true);\n  }\n\n  function handleClear() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setIsCanvasEmpty(false);\n    // onClear();\n  }\n  useEffect(() => { \n    // console.log(props.history.location.state)\n    \n\n    \n    \n    setTimeout(() => { if (isVideoPlaying){\n      if(isCanvasEmpty){\n        handleCapture();\n        handleClear();\n     \n        // axios.post(\n          // \"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\",\n          // {\n          //   key5: `${props.history.location.state.date}`,\n          // key2: `${props.history.location.state.address}`,\n          // key3: `${props.history.location.state.email}`,\n          // key4: `${props.history.location.state.isMapOpen}`,\n          // key1: `${props.history.location.state.key}`,\n          // key6: `${props.history.location.state.name}`,\n          // key7: `${props.history.location.state.phone}`,\n          // key8: `${props.history.location.state.status}`,\n          // key9: `${props.history.location.state.type}`\n          // }).then(res =>{console.log(res)})\n        \n      }\n      \n      \n      \n     \n    }}, 2000)\n      \n    }\n  );\n  function onclick(){\n    if (localStorage.getItem(\"count_data\")){\n      const count= parseInt( localStorage.getItem(\"count_data\"))\n      localStorage.setItem(\"count_data\", count+1)\n    }else{\n      localStorage.setItem(\"count_data\", 1)\n    }\n    console.log(props.history.location.state.status)\n    console.log(props.history.location.state.phone)\n    if (props.history.location.state.status === \"ALERTED\"){\n\n      axios.post(\"https://f0mrzhjnf1.execute-api.ap-southeast-2.amazonaws.com/stage\", {\n        message:\"U should wear the meask immediately\",\n        phoneNumber: `${props.history.location.state.phone}`\n      })\n    }\n    props.history.push(\"/\");\n    // window.location.reload(false);\n    \n  }\n\n\n\n  if (!mediaStream) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n    <Measure bounds onResize={handleResize}>\n      {({ measureRef }) => (\n        <Wrapper>\n          <Container\n            ref={measureRef}\n            maxHeight={videoRef.current && videoRef.current.videoHeight}\n            maxWidth={videoRef.current && videoRef.current.videoWidth}\n            style={{\n              height: `${container.height}px`\n            }}\n          >\n            <Video\n              ref={videoRef}\n              hidden={!isVideoPlaying}\n              onCanPlay={handleCanPlay}\n              autoPlay\n              playsInline\n              muted\n              style={{\n                top: `-${offsets.y}px`,\n                left: `-${offsets.x}px`\n              }}\n            />\n\n            <Overlay hidden={!isVideoPlaying} />\n\n            <Canvas\n              ref={canvasRef}\n              width={container.width}\n              height={container.height}\n            />\n\n            <Flash\n              flash={isFlashing}\n              onAnimationEnd={() => setIsFlashing(false)}\n            />\n          </Container>\n\n         \n          {!isCanvasEmpty && \n            <Fragment>\n            <div>\n            <h2 style= {{textAlign:\"center\"}}>Preview</h2>\n            <img id = \"emask\" src = {linkBlob}/>\n            </div>\n            <Button onClick= {onclick} > Go Back </Button>\n            </Fragment>\n          }\n          \n\n        </Wrapper>\n      )}\n    </Measure>\n    \n    </Fragment>\n  );\n}\nexport default withRouter(Camera)"]},"metadata":{},"sourceType":"module"}