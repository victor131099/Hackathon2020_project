{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class ReverseProgram {\n  constructor(xShape, axis) {\n    this.variableNames = ['x'];\n    const rank = xShape.length;\n\n    if (rank > 4) {\n      throw new Error(\"WebGL backend: Reverse of rank-\".concat(rank, \" tensor is not yet supported\"));\n    }\n\n    this.outputShape = xShape;\n\n    if (rank === 1) {\n      this.userCode = \"\\n        void main() {\\n          int coord = getOutputCoords();\\n          setOutput(getX(\".concat(xShape[0], \" - coord - 1));\\n        }\\n      \");\n      return;\n    }\n\n    const getInCoord = i => {\n      if (axis.indexOf(i) !== -1 && xShape[i] !== 1) {\n        return \"\".concat(xShape[i], \" - coords[\").concat(i, \"] - 1\");\n      }\n\n      return \"coords[\".concat(i, \"]\");\n    };\n\n    const inCoords = xShape.map((_, i) => getInCoord(i)).join(',');\n    const type = getCoordsDataType(rank);\n    this.userCode = \"\\n      void main() {\\n        \".concat(type, \" coords = getOutputCoords();\\n        setOutput(getX(\").concat(inCoords, \"));\\n      }\\n    \");\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}