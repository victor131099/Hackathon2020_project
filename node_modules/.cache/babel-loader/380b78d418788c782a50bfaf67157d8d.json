{"ast":null,"code":"import _slicedToArray from \"/home/victor/COVID-19-Coding-Fest/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport { defineLocale } from \"moment\";\nexport default function useOffsets(vWidth, vHeight, cWidth, cHeight) {\n  const _useState = useState({\n    x: 0,\n    y: 0\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        offsets = _useState2[0],\n        setOffsets = _useState2[1];\n\n  useEffect(() => {\n    if (vWidth && vHeight && cWidth && cHeight) {\n      const x = vWidth > cWidth ? Math.round((vWidth - cWidth) / 2) : 0;\n      const y = vHeight > cHeight ? Math.round((vHeight - cHeight) / 2) : 0;\n      setOffsets({\n        x,\n        y\n      });\n    }\n  }, [vWidth, vHeight, cWidth, cHeight]);\n  return offsets;\n}","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/src/pages/scan/components/useOffSet.js"],"names":["useState","useEffect","defineLocale","useOffsets","vWidth","vHeight","cWidth","cHeight","x","y","offsets","setOffsets","Math","round"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,QAA7B;AAEA,eAAe,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,OAA5B,EAAqCC,MAArC,EAA6CC,OAA7C,EAAsD;AAAA,oBACrCP,QAAQ,CAAC;AAAEQ,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAD,CAD6B;AAAA;AAAA,QAC5DC,OAD4D;AAAA,QACnDC,UADmD;;AAGnEV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,MAAM,IAAIC,OAAV,IAAqBC,MAArB,IAA+BC,OAAnC,EAA4C;AAC1C,YAAMC,CAAC,GAAGJ,MAAM,GAAGE,MAAT,GACNM,IAAI,CAACC,KAAL,CAAW,CAACT,MAAM,GAAGE,MAAV,IAAoB,CAA/B,CADM,GAEN,CAFJ;AAIA,YAAMG,CAAC,GAAGJ,OAAO,GAAGE,OAAV,GACNK,IAAI,CAACC,KAAL,CAAW,CAACR,OAAO,GAAGE,OAAX,IAAsB,CAAjC,CADM,GAEN,CAFJ;AAIAI,MAAAA,UAAU,CAAC;AAAEH,QAAAA,CAAF;AAAKC,QAAAA;AAAL,OAAD,CAAV;AACD;AACF,GAZQ,EAYN,CAACL,MAAD,EAASC,OAAT,EAAkBC,MAAlB,EAA0BC,OAA1B,CAZM,CAAT;AAcA,SAAOG,OAAP;AACD","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { defineLocale } from \"moment\";\n\nexport default function useOffsets(vWidth, vHeight, cWidth, cHeight) {\n  const [offsets, setOffsets] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    if (vWidth && vHeight && cWidth && cHeight) {\n      const x = vWidth > cWidth\n        ? Math.round((vWidth - cWidth) / 2)\n        : 0;\n\n      const y = vHeight > cHeight\n        ? Math.round((vHeight - cHeight) / 2)\n        : 0;\n\n      setOffsets({ x, y });\n    }\n  }, [vWidth, vHeight, cWidth, cHeight]);\n\n  return offsets;\n}"]},"metadata":{},"sourceType":"module"}