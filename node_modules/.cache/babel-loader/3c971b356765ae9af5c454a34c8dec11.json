{"ast":null,"code":"var _jsxFileName = \"/home/victor/COVID-19-Coding-Fest/src/pages/home/components/MapContainer.js\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport React, { Component } from \"react\";\nimport { compose, withProps, withStateHandlers } from \"recompose\";\nimport data from \"../../../data/Data\";\n\nclass PeopleMap extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    console.log();\n    Geocode.setApiKey(\"AIzaSyAOOgr6Eg-N_Pi3Ic5mNo1EybmjAH3w1D0\"); // set response language. Defaults to english.\n\n    Geocode.setLanguage(\"en\"); // set response region. Its optional.\n    // A Geocoding request with region=es (Spain) will return the Spanish city.\n\n    Geocode.setRegion(\"aus\");\n    Geocode.enableDebug(); // Get latidude & longitude from address.\n\n    const location_data = [];\n\n    for (var i = 0; i < data.length; i++) {\n      Geocode.fromAddress(data[i].address).then(response => {\n        const _response$results$0$g = response.results[0].geometry.location,\n              lat = _response$results$0$g.lat,\n              lng = _response$results$0$g.lng;\n        location_data.push({\n          lat,\n          lng\n        });\n        console.log(lat);\n      }, error => {\n        console.error(error);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(GoogleMap, {\n      defaultZoom: 8,\n      defaultCenter: {\n        lat: -34.397,\n        lng: 150.644\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      position: {\n        lat: -34.397,\n        lng: 150.644\n      },\n      onClick: this.props.onToggleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.props.isOpen && React.createElement(InfoWindow, {\n      onCloseClick: this.props.onToggleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst MapContainer = compose(withStateHandlers(() => ({\n  isOpen: false\n}), {\n  onToggleOpen: ({\n    isOpen\n  }) => () => ({\n    isOpen: !isOpen\n  })\n}), withScriptjs, withGoogleMap)(props => React.createElement(PeopleMap, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}));\nexport default MapContainer; //   <MapWithAMarker\n//     googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC4R6AN7SmujjPUIGKdyao2Kqitzr1kiRg&v=3.exp&libraries=geometry,drawing,places\"\n//     loadingElement={<div style={{ height: `100%` }} />}\n//     containerElement={<div style={{ height: `400px` }} />}\n//     mapElement={<div style={{ height: `100%` }} />}\n//   />","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/src/pages/home/components/MapContainer.js"],"names":["withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","Geocode","React","Component","compose","withProps","withStateHandlers","data","PeopleMap","constructor","props","componentDidMount","console","log","setApiKey","setLanguage","setRegion","enableDebug","location_data","i","length","fromAddress","address","then","response","results","geometry","location","lat","lng","push","error","render","onToggleOpen","isOpen","MapContainer"],"mappings":";AAAA,SACIA,YADJ,EAEIC,aAFJ,EAGIC,SAHJ,EAIIC,MAJJ,EAKIC,UALJ,QAMS,mBANT;AAOE,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,iBAA7B,QAAsD,WAAtD;AACF,OAAOC,IAAP,MAAiB,oBAAjB;;AAEE,MAAMC,SAAN,SAAwBL,SAAxB,CAAiC;AAC/BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AACDC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR;AACAZ,IAAAA,OAAO,CAACa,SAAR,CAAkB,yCAAlB,EAFiB,CAIjB;;AACAb,IAAAA,OAAO,CAACc,WAAR,CAAoB,IAApB,EALiB,CAOjB;AACA;;AACAd,IAAAA,OAAO,CAACe,SAAR,CAAkB,KAAlB;AACAf,IAAAA,OAAO,CAACgB,WAAR,GAViB,CAcjB;;AACA,UAAMC,aAAa,GAAE,EAArB;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAEZ,IAAI,CAACa,MAAtB,EAA8BD,CAAC,EAA/B,EAAkC;AAEhClB,MAAAA,OAAO,CAACoB,WAAR,CAAoBd,IAAI,CAACY,CAAD,CAAJ,CAAQG,OAA5B,EAAqCC,IAArC,CACEC,QAAQ,IAAI;AAAA,sCACWA,QAAQ,CAACC,OAAT,CAAiB,CAAjB,EAAoBC,QAApB,CAA6BC,QADxC;AAAA,cACFC,GADE,yBACFA,GADE;AAAA,cACGC,GADH,yBACGA,GADH;AAEVX,QAAAA,aAAa,CAACY,IAAd,CAAmB;AAACF,UAAAA,GAAD;AAAKC,UAAAA;AAAL,SAAnB;AACAjB,QAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AAED,OANH,EAOEG,KAAK,IAAI;AACPnB,QAAAA,OAAO,CAACmB,KAAR,CAAcA,KAAd;AACD,OATH;AAYD;AAKF;;AAEDC,EAAAA,MAAM,GAAE;AACN,WACE,oBAAC,SAAD;AACF,MAAA,WAAW,EAAE,CADX;AAEF,MAAA,aAAa,EAAE;AAAEJ,QAAAA,GAAG,EAAE,CAAC,MAAR;AAAgBC,QAAAA,GAAG,EAAE;AAArB,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIF,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE;AAAED,QAAAA,GAAG,EAAE,CAAC,MAAR;AAAgBC,QAAAA,GAAG,EAAE;AAArB,OADZ;AAEE,MAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWuB,YAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIG,KAAKvB,KAAL,CAAWwB,MAAX,IAAqB,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAE,KAAKxB,KAAL,CAAWuB,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJxB,CAJE,CADF;AAeD;;AAzD8B;;AA2DjC,MAAME,YAAY,GAAE/B,OAAO,CACzBE,iBAAiB,CAAC,OAAO;AACvB4B,EAAAA,MAAM,EAAE;AADe,CAAP,CAAD,EAEb;AACFD,EAAAA,YAAY,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB,OAAO;AACnCA,IAAAA,MAAM,EAAE,CAACA;AAD0B,GAAP;AAD5B,CAFa,CADQ,EAQzBtC,YARyB,EASzBC,aATyB,CAAP,CAUlBa,KAAK,IACL,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAXkB,CAApB;AAcA,eAAeyB,YAAf,C,CAEF;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    Marker,\n    InfoWindow\n  } from \"react-google-maps\";\n  import Geocode from \"react-geocode\";\n  import React, {Component} from \"react\"\n  import { compose, withProps, withStateHandlers } from \"recompose\"\nimport data from \"../../../data/Data\";\n\n  class PeopleMap extends Component{\n    constructor(props){\n      super(props)\n    }\n    componentDidMount(){\n      console.log()\n      Geocode.setApiKey(\"AIzaSyAOOgr6Eg-N_Pi3Ic5mNo1EybmjAH3w1D0\");\n \n      // set response language. Defaults to english.\n      Geocode.setLanguage(\"en\");\n      \n      // set response region. Its optional.\n      // A Geocoding request with region=es (Spain) will return the Spanish city.\n      Geocode.setRegion(\"aus\");\n      Geocode.enableDebug();\n      \n\n      \n      // Get latidude & longitude from address.\n      const location_data =[]\n      for (var i=0; i< data.length; i++){\n        \n        Geocode.fromAddress(data[i].address).then(\n          response => {\n            const { lat, lng } = response.results[0].geometry.location;\n            location_data.push({lat,lng})\n            console.log(lat)\n\n          },\n          error => {\n            console.error(error);\n          }\n        );\n        \n      }\n      \n      \n      \n \n    }\n    \n    render(){\n      return(\n        <GoogleMap\n      defaultZoom={8}\n      defaultCenter={{ lat: -34.397, lng: 150.644 }}\n    >\n      <Marker\n        position={{ lat: -34.397, lng: 150.644 }}\n        onClick={this.props.onToggleOpen}\n      >\n        {this.props.isOpen && <InfoWindow onCloseClick={this.props.onToggleOpen}>\n          \n        </InfoWindow>}\n      </Marker>\n    </GoogleMap>\n      )\n    }\n  }\n  const MapContainer =compose(\n    withStateHandlers(() => ({\n      isOpen: false,\n    }), {\n      onToggleOpen: ({ isOpen }) => () => ({\n        isOpen: !isOpen,\n      })\n    }),\n    withScriptjs,\n    withGoogleMap\n  )(props =>\n    <PeopleMap />\n  );\n  \n  export default MapContainer\n  \n//   <MapWithAMarker\n//     googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC4R6AN7SmujjPUIGKdyao2Kqitzr1kiRg&v=3.exp&libraries=geometry,drawing,places\"\n//     loadingElement={<div style={{ height: `100%` }} />}\n//     containerElement={<div style={{ height: `400px` }} />}\n//     mapElement={<div style={{ height: `100%` }} />}\n//   />"]},"metadata":{},"sourceType":"module"}