{"ast":null,"code":"var _jsxFileName = \"/home/victor/COVID-19-Coding-Fest/src/pages/scan/components/Camera.js\";\nimport React, { useState, useRef, useEffect, Fragment } from \"react\";\nimport Measure from \"react-measure\";\nimport { useUserMedia } from \"./useUserMedia\";\nimport { useCardRatio } from \"./userCardRatio\";\nimport { useOffsets } from \"./useOffSet\";\nimport { Video, Canvas, Wrapper, Container, Flash, Overlay, Button } from \"./styles\";\nimport ml5 from \"ml5\"; // import model from \"../../../data/Data\"\n\nimport * as tf from '@tensorflow/tfjs';\nimport * as mobilenet from \"@tensorflow-models/mobilenet\";\nimport { withRouter } from \"react-router-dom\"; // import { OmitProps } from \"antd/lib/transfer/renderListBody\";\n\nimport axios from \"axios\";\n\nrequire('@tensorflow/tfjs-backend-cpu');\n\nrequire('@tensorflow/tfjs-backend-webgl');\n\nconst cocoSsd = require('@tensorflow-models/coco-ssd');\n\nconst CAPTURE_OPTIONS = {\n  audio: false,\n  video: {\n    facingMode: \"environment\"\n  }\n};\n\nfunction Camera(props) {\n  const [model, setModel] = useState(null);\n  const [results, setResults] = useState([]);\n  const canvasRef = useRef();\n  const videoRef = useRef();\n  const [container, setContainer] = useState({\n    width: 0,\n    height: 0\n  });\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const [isCanvasEmpty, setIsCanvasEmpty] = useState(true);\n  const [isFlashing, setIsFlashing] = useState(false);\n  const [linkBlob, setLinkBlob] = useState(\"\");\n  const [emask_data, setEmaskData] = useState([]);\n  const mediaStream = useUserMedia(CAPTURE_OPTIONS);\n  const [aspectRatio, calculateRatio] = useCardRatio(1.586);\n  const offsets = useOffsets(videoRef.current && videoRef.current.videoWidth, videoRef.current && videoRef.current.videoHeight, container.width, container.height);\n\n  function modelLoaded() {\n    console.log('Model Loaded!');\n  }\n\n  function classify(url) {\n    const classifier = ml5.imageClassifier('MobileNet', modelLoaded); // When the model is loaded\n    // Make a prediction with a selected image\n\n    classifier.classify(url, (err, results) => {\n      console.log(results);\n    });\n  }\n\n  async function identify(url) {\n    console.log(\"world\");\n  }\n\n  if (mediaStream && videoRef.current && !videoRef.current.srcObject) {\n    videoRef.current.srcObject = mediaStream;\n  }\n\n  function handleResize(contentRect) {\n    setContainer({\n      width: contentRect.bounds.width,\n      height: Math.round(contentRect.bounds.width / aspectRatio)\n    });\n  }\n\n  function handleCanPlay() {\n    calculateRatio(videoRef.current.videoHeight, videoRef.current.videoWidth);\n    setIsVideoPlaying(true);\n    videoRef.current.play();\n  }\n\n  function handleCapture() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.drawImage(videoRef.current, offsets.x, offsets.y, container.width, container.height, 0, 0, container.width, container.height);\n    var link = document.createElement(\"a\");\n    link.download = \"image.png\";\n    classify(canvasRef.current);\n    canvasRef.current.toBlob(function (blob) {\n      {\n        link.href = URL.createObjectURL(blob);\n        console.log(blob);\n        setLinkBlob(link.href); // load(link.href);\n        // setInterval(identify(link.href), 3000)\n        // const emask = document.getElementById('emask');\n        // console.log(model)\n        // model.execute(tf.browser.fromPixels(emask));\n        // console.log(link.href); // this line should be here\n      }\n    }, \"image/png\", 1); // setIsCanvasEmpty(false);\n\n    setIsFlashing(true); // setIsVideoPlaying(false)\n  }\n\n  function handleClear() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setIsCanvasEmpty(false); // setIsFlashing(false)\n    // onClear();\n  }\n\n  useEffect(() => {\n    // console.log(props.history.location.state)\n    setTimeout(() => {\n      if (isVideoPlaying) {\n        if (isCanvasEmpty) {\n          handleCapture();\n          handleClear(); // load();\n          // axios.post(\n          // \"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\",\n          // {\n          //   key5: `${props.history.location.state.date}`,\n          // key2: `${props.history.location.state.address}`,\n          // key3: `${props.history.location.state.email}`,\n          // key4: `${props.history.location.state.isMapOpen}`,\n          // key1: `${props.history.location.state.key}`,\n          // key6: `${props.history.location.state.name}`,\n          // key7: `${props.history.location.state.phone}`,\n          // key8: `${props.history.location.state.status}`,\n          // key9: `${props.history.location.state.type}`\n          // }).then(res =>{console.log(res)})\n        }\n      }\n    }, 5000);\n  });\n\n  function onclick() {\n    if (localStorage.getItem(\"count_data\")) {\n      const count = parseInt(localStorage.getItem(\"count_data\"));\n      localStorage.setItem(\"count_data\", count + 1);\n    } else {\n      localStorage.setItem(\"count_data\", 1);\n    }\n\n    console.log(props.history.location.state.status);\n    console.log(props.history.location.state.phone);\n\n    if (props.history.location.state.status === \"ALERTED\") {\n      axios.post(\"https://f0mrzhjnf1.execute-api.ap-southeast-2.amazonaws.com/stage\", {\n        message: \"U should wear the meask immediately\",\n        phoneNumber: `${props.history.location.state.phone}`\n      });\n    }\n\n    props.history.push(\"/\"); // window.location.reload(false);\n  }\n\n  if (!mediaStream) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Measure, {\n    bounds: true,\n    onResize: handleResize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }\n  }, ({\n    measureRef\n  }) => /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    ref: measureRef,\n    maxHeight: videoRef.current && videoRef.current.videoHeight,\n    maxWidth: videoRef.current && videoRef.current.videoWidth,\n    style: {\n      height: `${container.height}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Video, {\n    ref: videoRef,\n    hidden: !isVideoPlaying,\n    onCanPlay: handleCanPlay,\n    autoPlay: true,\n    playsInline: true,\n    muted: true,\n    style: {\n      top: `-${offsets.y}px`,\n      left: `-${offsets.x}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Overlay, {\n    hidden: !isVideoPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Canvas, {\n    ref: canvasRef,\n    width: container.width,\n    height: container.height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Flash, {\n    flash: isFlashing,\n    onAnimationEnd: () => setIsFlashing(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  })), !isCanvasEmpty && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, \"Preview\"), /*#__PURE__*/React.createElement(\"img\", {\n    id: \"emask\",\n    src: linkBlob,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: onclick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, \" Go Back \")))));\n}\n\nexport default withRouter(Camera);","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/src/pages/scan/components/Camera.js"],"names":["React","useState","useRef","useEffect","Fragment","Measure","useUserMedia","useCardRatio","useOffsets","Video","Canvas","Wrapper","Container","Flash","Overlay","Button","ml5","tf","mobilenet","withRouter","axios","require","cocoSsd","CAPTURE_OPTIONS","audio","video","facingMode","Camera","props","model","setModel","results","setResults","canvasRef","videoRef","container","setContainer","width","height","isVideoPlaying","setIsVideoPlaying","isCanvasEmpty","setIsCanvasEmpty","isFlashing","setIsFlashing","linkBlob","setLinkBlob","emask_data","setEmaskData","mediaStream","aspectRatio","calculateRatio","offsets","current","videoWidth","videoHeight","modelLoaded","console","log","classify","url","classifier","imageClassifier","err","identify","srcObject","handleResize","contentRect","bounds","Math","round","handleCanPlay","play","handleCapture","context","getContext","drawImage","x","y","link","document","createElement","download","toBlob","blob","href","URL","createObjectURL","handleClear","clearRect","setTimeout","onclick","localStorage","getItem","count","parseInt","setItem","history","location","state","status","phone","post","message","phoneNumber","push","measureRef","top","left","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, Fragment } from \"react\";\nimport Measure from \"react-measure\";\nimport { useUserMedia } from \"./useUserMedia\";\nimport { useCardRatio } from \"./userCardRatio\";\nimport { useOffsets } from \"./useOffSet\";\nimport {\n  Video,\n  Canvas,\n  Wrapper,\n  Container,\n  Flash,\n  Overlay,\n  Button\n} from \"./styles\";\nimport ml5 from \"ml5\"\n// import model from \"../../../data/Data\"\nimport * as tf from '@tensorflow/tfjs';\nimport * as mobilenet from \"@tensorflow-models/mobilenet\";\nimport { withRouter } from \"react-router-dom\";\n// import { OmitProps } from \"antd/lib/transfer/renderListBody\";\nimport axios from \"axios\"\nrequire('@tensorflow/tfjs-backend-cpu');\nrequire('@tensorflow/tfjs-backend-webgl');\nconst cocoSsd = require('@tensorflow-models/coco-ssd');\nconst CAPTURE_OPTIONS = {\n  audio: false,\n  video: { facingMode: \"environment\" }\n};\n\nfunction Camera(props) {\n  const [model, setModel] = useState(null)\n  const [results, setResults] = useState([])\n  const canvasRef = useRef();\n  const videoRef = useRef();\n\n  const [container, setContainer] = useState({ width: 0, height: 0 });\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const [isCanvasEmpty, setIsCanvasEmpty] = useState(true);\n  const [isFlashing, setIsFlashing] = useState(false);\n  const [linkBlob, setLinkBlob] = useState(\"\");\n  const [emask_data, setEmaskData] = useState([])\n  const mediaStream = useUserMedia(CAPTURE_OPTIONS);\n  const [aspectRatio, calculateRatio] = useCardRatio(1.586);\n  \n  const offsets = useOffsets(videoRef.current && videoRef.current.videoWidth,videoRef.current && videoRef.current.videoHeight,container.width,container.height);\n  function modelLoaded() {\n    console.log('Model Loaded!');\n  }\n  function classify(url)   {\n    \n    const classifier = ml5.imageClassifier('MobileNet', modelLoaded);\n\n// When the model is loaded\n\n\n// Make a prediction with a selected image\nclassifier.classify(url, (err, results) => {\n  console.log(results);\n});\n  }\n  async function identify(url) {  \n    console.log(\"world\")\n    \n    \n   }\n   \n  \n   \n  if (mediaStream && videoRef.current && !videoRef.current.srcObject) {\n    videoRef.current.srcObject = mediaStream;\n  }\n \n  \n  function handleResize(contentRect) {\n    setContainer({\n      width: contentRect.bounds.width,\n      height: Math.round(contentRect.bounds.width / aspectRatio)\n    });\n  }\n\n  function handleCanPlay() {\n    calculateRatio(videoRef.current.videoHeight, videoRef.current.videoWidth);\n    setIsVideoPlaying(true);\n    videoRef.current.play();\n  }\n\n  function handleCapture() {\n    const context = canvasRef.current.getContext(\"2d\");\n   \n    context.drawImage(\n      videoRef.current,\n      offsets.x,\n      offsets.y,\n      container.width,\n      container.height,\n      0,\n      0,\n      container.width,\n      container.height\n    );\n    var link = document.createElement(\"a\");\n  link.download = \"image.png\";\n  classify(canvasRef.current)\n    canvasRef.current.toBlob(function(blob){{\n        link.href = URL.createObjectURL(blob);\n        console.log(blob);\n        setLinkBlob(link.href);\n        // load(link.href);\n        // setInterval(identify(link.href), 3000)\n        \n        \n        // const emask = document.getElementById('emask');\n        // console.log(model)\n        // model.execute(tf.browser.fromPixels(emask));\n        // console.log(link.href); // this line should be here\n      }}, \"image/png\", 1);\n    // setIsCanvasEmpty(false);\n    setIsFlashing(true);\n    // setIsVideoPlaying(false)\n  }\n\n  function handleClear() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setIsCanvasEmpty(false);\n    // setIsFlashing(false)\n    // onClear();\n  }\n  useEffect(() => { \n    // console.log(props.history.location.state)\n    \n\n    \n    \n    setTimeout(() => { if (isVideoPlaying){\n      if(isCanvasEmpty){\n        handleCapture();\n        handleClear();\n        // load();\n        \n        // axios.post(\n          // \"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\",\n          // {\n          //   key5: `${props.history.location.state.date}`,\n          // key2: `${props.history.location.state.address}`,\n          // key3: `${props.history.location.state.email}`,\n          // key4: `${props.history.location.state.isMapOpen}`,\n          // key1: `${props.history.location.state.key}`,\n          // key6: `${props.history.location.state.name}`,\n          // key7: `${props.history.location.state.phone}`,\n          // key8: `${props.history.location.state.status}`,\n          // key9: `${props.history.location.state.type}`\n          // }).then(res =>{console.log(res)})\n        \n      }\n      \n      \n      \n     \n    }}, 5000)\n      \n    }\n  );\n  function onclick(){\n    if (localStorage.getItem(\"count_data\")){\n      const count= parseInt( localStorage.getItem(\"count_data\"))\n      localStorage.setItem(\"count_data\", count+1)\n    }else{\n      localStorage.setItem(\"count_data\", 1)\n    }\n    console.log(props.history.location.state.status)\n    console.log(props.history.location.state.phone)\n    if (props.history.location.state.status === \"ALERTED\"){\n\n      axios.post(\"https://f0mrzhjnf1.execute-api.ap-southeast-2.amazonaws.com/stage\", {\n        message:\"U should wear the meask immediately\",\n        phoneNumber: `${props.history.location.state.phone}`\n      })\n    }\n    props.history.push(\"/\");\n    // window.location.reload(false);\n    \n  }\n\n\n\n  if (!mediaStream) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n    <Measure bounds onResize={handleResize}>\n      {({ measureRef }) => (\n        <Wrapper>\n          <Container\n            ref={measureRef}\n            maxHeight={videoRef.current && videoRef.current.videoHeight}\n            maxWidth={videoRef.current && videoRef.current.videoWidth}\n            style={{\n              height: `${container.height}px`\n            }}\n          >\n            <Video\n              ref={videoRef}\n              hidden={!isVideoPlaying}\n              onCanPlay={handleCanPlay}\n              autoPlay\n              playsInline\n              muted\n              style={{\n                top: `-${offsets.y}px`,\n                left: `-${offsets.x}px`\n              }}\n            />\n\n            <Overlay hidden={!isVideoPlaying} />\n\n            <Canvas\n              ref={canvasRef}\n              width={container.width}\n              height={container.height}\n            />\n\n            <Flash\n              flash={isFlashing}\n              onAnimationEnd={() => setIsFlashing(false)}\n            />\n          </Container>\n\n         \n          {!isCanvasEmpty && \n            <Fragment>\n            <div>\n            <h2 style= {{textAlign:\"center\"}}>Preview</h2>\n            <img id = \"emask\" src = {linkBlob}/>\n            </div>\n            <Button onClick= {onclick} > Go Back </Button>\n            </Fragment>\n          }\n          \n\n        </Wrapper>\n      )}\n    </Measure>\n    \n    </Fragment>\n  );\n}\nexport default withRouter(Camera)"]},"metadata":{},"sourceType":"module"}