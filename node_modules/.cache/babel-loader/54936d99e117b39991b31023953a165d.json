{"ast":null,"code":"var _jsxFileName = \"/home/victor/COVID-19-Coding-Fest/src/pages/scan/components/Camera.js\";\nimport React, { useState, useRef, useEffect, Fragment } from \"react\";\nimport Measure from \"react-measure\";\nimport { useUserMedia } from \"./useUserMedia\";\nimport { useCardRatio } from \"./userCardRatio\";\nimport { useOffsets } from \"./useOffSet\";\nimport { Spin } from \"antd\";\nimport { Video, Canvas, Wrapper, Container, Flash, Overlay, Button } from \"./styles\";\nimport ml5 from \"ml5\"; // import model from \"../../../data/Data\"\n// import * as tf from \"@tensorflow/tfjs\"\n\nimport { withRouter } from \"react-router-dom\"; // import { OmitProps } from \"antd/lib/transfer/renderListBody\";\n\nimport axios from \"axios\";\nimport json from \"./model.json\"; // const tfn = require(\"@tensorflow/tfjs-node-gpu\");\n// import * as cvstfjs from '@microsoft/customvision-tfjs';\n\nconst CAPTURE_OPTIONS = {\n  audio: false,\n  video: {\n    facingMode: \"environment\"\n  }\n};\n\nfunction Camera(props) {\n  const [model, setModel] = useState(null);\n  const [results, setResults] = useState([]);\n  const canvasRef = useRef();\n  const videoRef = useRef();\n  const [container, setContainer] = useState({\n    width: 0,\n    height: 0\n  });\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const [isCanvasEmpty, setIsCanvasEmpty] = useState(true);\n  const [isFlashing, setIsFlashing] = useState(false);\n  const [linkBlob, setLinkBlob] = useState(\"\");\n  const [emask_data, setEmaskData] = useState([]);\n  const mediaStream = useUserMedia(CAPTURE_OPTIONS);\n  const [aspectRatio, calculateRatio] = useCardRatio(1.586);\n  const [classifier, setClassifier] = useState(null);\n  const offsets = useOffsets(videoRef.current && videoRef.current.videoWidth, videoRef.current && videoRef.current.videoHeight, container.width, container.height);\n  const [loading, setLoading] = useState(true);\n\n  if (mediaStream && videoRef.current && !videoRef.current.srcObject) {\n    videoRef.current.srcObject = mediaStream;\n  }\n\n  function handleResize(contentRect) {\n    setContainer({\n      width: contentRect.bounds.width,\n      height: Math.round(contentRect.bounds.width / aspectRatio)\n    });\n  }\n\n  function handleCanPlay() {\n    calculateRatio(videoRef.current.videoHeight, videoRef.current.videoWidth);\n    setIsVideoPlaying(true);\n    videoRef.current.play();\n  }\n\n  function handleCapture() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.drawImage(videoRef.current, offsets.x, offsets.y, container.width, container.height, 0, 0, container.width, container.height);\n    var link = document.createElement(\"a\");\n    link.download = \"image.png\"; // predict(canvasRef.current\n    // console.log(canvasRef.current);\n\n    canvasRef.current.toBlob(function (blob) {\n      {\n        link.href = URL.createObjectURL(blob);\n        console.log(blob);\n        setLinkBlob(link.href); // console.log(link.href);\n        // load(link.href);\n        // setInterval(identify(link.href), 3000)\n        // const emask = document.getElementById('emask');\n        // console.log(model)\n        // model.execute(tf.browser.fromPixels(emask));\n        // console.log(link.href); // this line should be here\n      }\n    }, \"image/png\", 1); // setIsCanvasEmpty(false);\n\n    setIsFlashing(true); // setIsVideoPlaying(false)\n  }\n\n  function classifyImg() {\n    // Initialize the Image Classifier method with MobileNet\n    const classifier = ml5.imageClassifier('MobileNet', modelLoaded); // When the model is loaded\n\n    function modelLoaded() {\n      console.log('Model Loaded!');\n    } // Put the image to classify inside a variable\n    // Make a prediction with a selected image\n\n\n    const image = document.getElementById('image');\n    classifier.predict(image, 5, function (err, results) {\n      // Return the results\n      return results;\n    }).then(results => {\n      // Set the predictions in the state\n      // this.setPredictions(results)\n      console.log(results);\n    });\n    setLoading(true);\n  }\n\n  function handleClear() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setIsCanvasEmpty(false); // setIsFlashing(false)\n    // onClear();\n  }\n\n  useEffect(() => {\n    // console.log(props.history.location.state)\n    setTimeout(() => {\n      if (isVideoPlaying) {\n        if (isCanvasEmpty) {\n          handleCapture();\n          handleClear(); // const classifier= ml5.imageClassifier('MobileNet', modelLoaded);\n          // setClassifier(classifier)\n\n          classifyImg(); // load();\n          //   axios.post(\n          //     \"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\",\n          //     {\n          //       key5: `${props.history.location.state.date}`,\n          //     key2: `${props.history.location.state.address}`,\n          //     key3: `${props.history.location.state.email}`,\n          //     key4: `${props.history.location.state.isMapOpen}`,\n          //     key1: `${props.history.location.state.key}`,\n          //     key6: `${props.history.location.state.name}`,\n          //     key7: `${props.history.location.state.phone}`,\n          //     key8: `${props.history.location.state.status}`,\n          //     key9: `${props.history.location.state.type}`\n          //     }).then(res =>{console.log(res)})\n        }\n      }\n    }, 5000);\n  });\n\n  function onclick() {// classifier_image(canvasRef.current)\n    // predict(canvasRef.current)\n    // if (localStorage.getItem(\"count_data\")){\n    //   const count= parseInt( localStorage.getItem(\"count_data\"))\n    //   localStorage.setItem(\"count_data\", count+1)\n    // }else{\n    //   localStorage.setItem(\"count_data\", 1)\n    // }\n    // console.log(props.history.location.state.status)\n    // console.log(props.history.location.state.phone)\n    // if (props.history.location.state.status === \"ALERTED\"){\n    //   console.log(props.history.location.state.phone)\n    //   axios.post(\"https://f0mrzhjnf1.execute-api.ap-southeast-2.amazonaws.com/stage\", {\n    //     message:\"U should wear the meask immediately\",\n    //     phoneNumber: `${props.history.location.state.phone}`\n    //   })\n    // }\n    // props.history.push(\"/\");\n    // window.location.reload(false);\n  }\n\n  if (!mediaStream) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Measure, {\n    bounds: true,\n    onResize: handleResize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }\n  }, ({\n    measureRef\n  }) => /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    ref: measureRef,\n    maxHeight: videoRef.current && videoRef.current.videoHeight,\n    maxWidth: videoRef.current && videoRef.current.videoWidth,\n    style: {\n      height: `${container.height}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Video, {\n    ref: videoRef,\n    hidden: !isVideoPlaying,\n    onCanPlay: handleCanPlay,\n    autoPlay: true,\n    playsInline: true,\n    muted: true,\n    style: {\n      top: `-${offsets.y}px`,\n      left: `-${offsets.x}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Overlay, {\n    hidden: !isVideoPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Canvas, {\n    ref: canvasRef,\n    width: container.width,\n    height: container.height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Flash, {\n    flash: isFlashing,\n    onAnimationEnd: () => setIsFlashing(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  })), loading === false ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 15\n    }\n  }, \"Preview\"), /*#__PURE__*/React.createElement(\"img\", {\n    id: \"emask\",\n    src: linkBlob,\n    id: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: onclick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, \" Go Back \")) : /*#__PURE__*/React.createElement(Spin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }))));\n}\n\nexport default withRouter(Camera);","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/src/pages/scan/components/Camera.js"],"names":["React","useState","useRef","useEffect","Fragment","Measure","useUserMedia","useCardRatio","useOffsets","Spin","Video","Canvas","Wrapper","Container","Flash","Overlay","Button","ml5","withRouter","axios","json","CAPTURE_OPTIONS","audio","video","facingMode","Camera","props","model","setModel","results","setResults","canvasRef","videoRef","container","setContainer","width","height","isVideoPlaying","setIsVideoPlaying","isCanvasEmpty","setIsCanvasEmpty","isFlashing","setIsFlashing","linkBlob","setLinkBlob","emask_data","setEmaskData","mediaStream","aspectRatio","calculateRatio","classifier","setClassifier","offsets","current","videoWidth","videoHeight","loading","setLoading","srcObject","handleResize","contentRect","bounds","Math","round","handleCanPlay","play","handleCapture","context","getContext","drawImage","x","y","link","document","createElement","download","toBlob","blob","href","URL","createObjectURL","console","log","classifyImg","imageClassifier","modelLoaded","image","getElementById","predict","err","then","handleClear","clearRect","setTimeout","onclick","measureRef","top","left","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, Fragment } from \"react\";\nimport Measure from \"react-measure\";\nimport { useUserMedia } from \"./useUserMedia\";\nimport { useCardRatio } from \"./userCardRatio\";\nimport { useOffsets } from \"./useOffSet\";\nimport {Spin} from \"antd\"\nimport {\n  Video,\n  Canvas,\n  Wrapper,\n  Container,\n  Flash,\n  Overlay,\n  Button\n} from \"./styles\";\nimport ml5 from \"ml5\"\n// import model from \"../../../data/Data\"\n// import * as tf from \"@tensorflow/tfjs\"\nimport { withRouter } from \"react-router-dom\";\n// import { OmitProps } from \"antd/lib/transfer/renderListBody\";\nimport axios from \"axios\"\nimport json from \"./model.json\"\n// const tfn = require(\"@tensorflow/tfjs-node-gpu\");\n// import * as cvstfjs from '@microsoft/customvision-tfjs';\nconst CAPTURE_OPTIONS = {\n  audio: false,\n  video: { facingMode: \"environment\" }\n};\n\n\nfunction Camera(props) {\n  const [model, setModel] = useState(null)\n  const [results, setResults] = useState([])\n  const canvasRef = useRef();\n  const videoRef = useRef();\n\n  const [container, setContainer] = useState({ width: 0, height: 0 });\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const [isCanvasEmpty, setIsCanvasEmpty] = useState(true);\n  const [isFlashing, setIsFlashing] = useState(false);\n  const [linkBlob, setLinkBlob] = useState(\"\");\n  const [emask_data, setEmaskData] = useState([])\n  const mediaStream = useUserMedia(CAPTURE_OPTIONS);\n  const [aspectRatio, calculateRatio] = useCardRatio(1.586);\n  const [classifier, setClassifier] = useState(null);\n  const offsets = useOffsets(videoRef.current && videoRef.current.videoWidth,videoRef.current && videoRef.current.videoHeight,container.width,container.height);\n  const [loading, setLoading] = useState(true);\n \n\n   \n  \n   \n  if (mediaStream && videoRef.current && !videoRef.current.srcObject) {\n    videoRef.current.srcObject = mediaStream;\n  }\n \n  \n  function handleResize(contentRect) {\n    setContainer({\n      width: contentRect.bounds.width,\n      height: Math.round(contentRect.bounds.width / aspectRatio)\n    });\n  }\n\n  function handleCanPlay() {\n    calculateRatio(videoRef.current.videoHeight, videoRef.current.videoWidth);\n    setIsVideoPlaying(true);\n    videoRef.current.play();\n  }\n\n  function handleCapture() {\n    const context = canvasRef.current.getContext(\"2d\");\n   \n    context.drawImage(\n      videoRef.current,\n      offsets.x,\n      offsets.y,\n      container.width,\n      container.height,\n      0,\n      0,\n      container.width,\n      container.height\n    );\n    var link = document.createElement(\"a\");\n  link.download = \"image.png\";\n  // predict(canvasRef.current\n  // console.log(canvasRef.current);\n    canvasRef.current.toBlob(function(blob){{\n        link.href = URL.createObjectURL(blob);\n        console.log(blob);\n        setLinkBlob(link.href);\n        // console.log(link.href);\n        // load(link.href);\n        // setInterval(identify(link.href), 3000)\n        \n        \n        // const emask = document.getElementById('emask');\n        // console.log(model)\n        // model.execute(tf.browser.fromPixels(emask));\n        // console.log(link.href); // this line should be here\n      }}, \"image/png\", 1);\n    // setIsCanvasEmpty(false);\n    setIsFlashing(true);\n    // setIsVideoPlaying(false)\n  }\n  function classifyImg () {\n    // Initialize the Image Classifier method with MobileNet\n    const classifier = ml5.imageClassifier('MobileNet', modelLoaded);\n    // When the model is loaded\n    function modelLoaded() {\n      console.log('Model Loaded!');\n    }\n    // Put the image to classify inside a variable\n  \n    // Make a prediction with a selected image\n    const image = document.getElementById('image');\n    classifier.predict(image, 5, function(err, results) {\n    // Return the results\n      return results;\n    })\n      .then((results) => {\n        // Set the predictions in the state\n        // this.setPredictions(results)\n        console.log(results);\n      })\n      setLoading(true);\n  }\n\n  function handleClear() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setIsCanvasEmpty(false);\n    // setIsFlashing(false)\n    // onClear();\n  }\n  useEffect(() => { \n    // console.log(props.history.location.state)\n    \n\n    \n    \n    setTimeout(() => { if (isVideoPlaying){\n      if(isCanvasEmpty){\n        handleCapture();\n        handleClear();\n        // const classifier= ml5.imageClassifier('MobileNet', modelLoaded);\n        // setClassifier(classifier)\n        classifyImg();\n        // load();\n        \n      //   axios.post(\n      //     \"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\",\n      //     {\n      //       key5: `${props.history.location.state.date}`,\n      //     key2: `${props.history.location.state.address}`,\n      //     key3: `${props.history.location.state.email}`,\n      //     key4: `${props.history.location.state.isMapOpen}`,\n      //     key1: `${props.history.location.state.key}`,\n      //     key6: `${props.history.location.state.name}`,\n      //     key7: `${props.history.location.state.phone}`,\n      //     key8: `${props.history.location.state.status}`,\n      //     key9: `${props.history.location.state.type}`\n      //     }).then(res =>{console.log(res)})\n        \n      }\n      \n      \n      \n     \n    }}, 5000)\n      \n    }\n  );\n  function onclick(){\n    // classifier_image(canvasRef.current)\n    // predict(canvasRef.current)\n    // if (localStorage.getItem(\"count_data\")){\n    //   const count= parseInt( localStorage.getItem(\"count_data\"))\n    //   localStorage.setItem(\"count_data\", count+1)\n    // }else{\n    //   localStorage.setItem(\"count_data\", 1)\n    // }\n    // console.log(props.history.location.state.status)\n    // console.log(props.history.location.state.phone)\n    // if (props.history.location.state.status === \"ALERTED\"){\n    //   console.log(props.history.location.state.phone)\n    //   axios.post(\"https://f0mrzhjnf1.execute-api.ap-southeast-2.amazonaws.com/stage\", {\n    //     message:\"U should wear the meask immediately\",\n    //     phoneNumber: `${props.history.location.state.phone}`\n    //   })\n    // }\n    // props.history.push(\"/\");\n    // window.location.reload(false);\n    \n  }\n\n\n\n  if (!mediaStream) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n    <Measure bounds onResize={handleResize}>\n      {({ measureRef }) => (\n        <Wrapper>\n          <Container\n            ref={measureRef}\n            maxHeight={videoRef.current && videoRef.current.videoHeight}\n            maxWidth={videoRef.current && videoRef.current.videoWidth}\n            style={{\n              height: `${container.height}px`\n            }}\n          >\n            <Video\n              ref={videoRef}\n              hidden={!isVideoPlaying}\n              onCanPlay={handleCanPlay}\n              autoPlay\n              playsInline\n              muted\n              style={{\n                top: `-${offsets.y}px`,\n                left: `-${offsets.x}px`\n              }}\n            />\n\n            <Overlay hidden={!isVideoPlaying} />\n\n            <Canvas\n              ref={canvasRef}\n              width={container.width}\n              height={container.height}\n            />\n\n            <Flash\n              flash={isFlashing}\n              onAnimationEnd={() => setIsFlashing(false)}\n            />\n          </Container>\n\n         \n          \n              {loading === false ? \n              <Fragment>\n              <div>\n              <h2 style= {{textAlign:\"center\"}}>Preview</h2>\n              <img id = \"emask\" src = {linkBlob} id = \"image\"/>\n              </div>\n              <Button onClick= {onclick} > Go Back </Button>\n              </Fragment>\n              :\n              <Spin />\n              }\n          \n        \n          \n\n        </Wrapper>\n      )}\n    </Measure>\n    \n    </Fragment>\n  );\n}\nexport default withRouter(Camera)"]},"metadata":{},"sourceType":"module"}