{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\"); // TODO(nsthorat, dsmilkov): Remove dependency on tensors, use dataId.\n\n\nexports.nonMaxSuppressionV5Config = {\n  kernelName: 'NonMaxSuppressionV5',\n  backendName: 'tensorflow',\n  kernelFunc: function (_a) {\n    var inputs = _a.inputs,\n        backend = _a.backend,\n        attrs = _a.attrs;\n    var _b = inputs,\n        boxes = _b.boxes,\n        scores = _b.scores;\n    var _c = attrs,\n        maxOutputSize = _c.maxOutputSize,\n        iouThreshold = _c.iouThreshold,\n        scoreThreshold = _c.scoreThreshold,\n        softNmsSigma = _c.softNmsSigma;\n    var maxOutputSizeTensor = tfjs_1.scalar(maxOutputSize, 'int32');\n    var iouThresholdTensor = tfjs_1.scalar(iouThreshold);\n    var scoreThresholdTensor = tfjs_1.scalar(scoreThreshold);\n    var softNmsSigmaTensor = tfjs_1.scalar(softNmsSigma);\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', boxes.dtype)];\n    var nodeBackend = backend;\n\n    var _d = nodeBackend.executeMultipleOutputs('NonMaxSuppressionV5', opAttrs, [boxes, scores, maxOutputSizeTensor, iouThresholdTensor, scoreThresholdTensor, softNmsSigmaTensor], 3),\n        selectedIndices = _d[0],\n        selectedScores = _d[1],\n        validOutputs = _d[2];\n\n    maxOutputSizeTensor.dispose();\n    iouThresholdTensor.dispose();\n    scoreThresholdTensor.dispose();\n    softNmsSigmaTensor.dispose();\n    validOutputs.dispose();\n    return [selectedIndices, selectedScores];\n  }\n};","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/node_modules/@tensorflow/tfjs-node/dist/kernels/NonMaxSuppressionV5.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","nonMaxSuppressionV5Config","kernelName","backendName","kernelFunc","_a","inputs","backend","attrs","_b","boxes","scores","_c","maxOutputSize","iouThreshold","scoreThreshold","softNmsSigma","maxOutputSizeTensor","scalar","iouThresholdTensor","scoreThresholdTensor","softNmsSigmaTensor","opAttrs","createTensorsTypeOpAttr","dtype","nodeBackend","_d","executeMultipleOutputs","selectedIndices","selectedScores","validOutputs","dispose"],"mappings":"AAAA;AACA;;;;;;;;;;;;;;;;;AAgBAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC,C,CACA;;;AACAH,OAAO,CAACK,yBAAR,GAAoC;AAChCC,EAAAA,UAAU,EAAE,qBADoB;AAEhCC,EAAAA,WAAW,EAAE,YAFmB;AAGhCC,EAAAA,UAAU,EAAE,UAAUC,EAAV,EAAc;AACtB,QAAIC,MAAM,GAAGD,EAAE,CAACC,MAAhB;AAAA,QAAwBC,OAAO,GAAGF,EAAE,CAACE,OAArC;AAAA,QAA8CC,KAAK,GAAGH,EAAE,CAACG,KAAzD;AACA,QAAIC,EAAE,GAAGH,MAAT;AAAA,QAAiBI,KAAK,GAAGD,EAAE,CAACC,KAA5B;AAAA,QAAmCC,MAAM,GAAGF,EAAE,CAACE,MAA/C;AACA,QAAIC,EAAE,GAAGJ,KAAT;AAAA,QAAgBK,aAAa,GAAGD,EAAE,CAACC,aAAnC;AAAA,QAAkDC,YAAY,GAAGF,EAAE,CAACE,YAApE;AAAA,QAAkFC,cAAc,GAAGH,EAAE,CAACG,cAAtG;AAAA,QAAsHC,YAAY,GAAGJ,EAAE,CAACI,YAAxI;AACA,QAAIC,mBAAmB,GAAGnB,MAAM,CAACoB,MAAP,CAAcL,aAAd,EAA6B,OAA7B,CAA1B;AACA,QAAIM,kBAAkB,GAAGrB,MAAM,CAACoB,MAAP,CAAcJ,YAAd,CAAzB;AACA,QAAIM,oBAAoB,GAAGtB,MAAM,CAACoB,MAAP,CAAcH,cAAd,CAA3B;AACA,QAAIM,kBAAkB,GAAGvB,MAAM,CAACoB,MAAP,CAAcF,YAAd,CAAzB;AACA,QAAIM,OAAO,GAAG,CAACtB,uBAAuB,CAACuB,uBAAxB,CAAgD,GAAhD,EAAqDb,KAAK,CAACc,KAA3D,CAAD,CAAd;AACA,QAAIC,WAAW,GAAGlB,OAAlB;;AACA,QAAImB,EAAE,GAAGD,WAAW,CAACE,sBAAZ,CAAmC,qBAAnC,EAA0DL,OAA1D,EAAmE,CACxEZ,KADwE,EACjEC,MADiE,EACzDM,mBADyD,EAExEE,kBAFwE,EAEpDC,oBAFoD,EAE9BC,kBAF8B,CAAnE,EAGN,CAHM,CAAT;AAAA,QAGOO,eAAe,GAAGF,EAAE,CAAC,CAAD,CAH3B;AAAA,QAGgCG,cAAc,GAAGH,EAAE,CAAC,CAAD,CAHnD;AAAA,QAGwDI,YAAY,GAAGJ,EAAE,CAAC,CAAD,CAHzE;;AAIAT,IAAAA,mBAAmB,CAACc,OAApB;AACAZ,IAAAA,kBAAkB,CAACY,OAAnB;AACAX,IAAAA,oBAAoB,CAACW,OAArB;AACAV,IAAAA,kBAAkB,CAACU,OAAnB;AACAD,IAAAA,YAAY,CAACC,OAAb;AACA,WAAO,CAACH,eAAD,EAAkBC,cAAlB,CAAP;AACH;AAvB+B,CAApC","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n// TODO(nsthorat, dsmilkov): Remove dependency on tensors, use dataId.\nexports.nonMaxSuppressionV5Config = {\n    kernelName: 'NonMaxSuppressionV5',\n    backendName: 'tensorflow',\n    kernelFunc: function (_a) {\n        var inputs = _a.inputs, backend = _a.backend, attrs = _a.attrs;\n        var _b = inputs, boxes = _b.boxes, scores = _b.scores;\n        var _c = attrs, maxOutputSize = _c.maxOutputSize, iouThreshold = _c.iouThreshold, scoreThreshold = _c.scoreThreshold, softNmsSigma = _c.softNmsSigma;\n        var maxOutputSizeTensor = tfjs_1.scalar(maxOutputSize, 'int32');\n        var iouThresholdTensor = tfjs_1.scalar(iouThreshold);\n        var scoreThresholdTensor = tfjs_1.scalar(scoreThreshold);\n        var softNmsSigmaTensor = tfjs_1.scalar(softNmsSigma);\n        var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', boxes.dtype)];\n        var nodeBackend = backend;\n        var _d = nodeBackend.executeMultipleOutputs('NonMaxSuppressionV5', opAttrs, [\n            boxes, scores, maxOutputSizeTensor,\n            iouThresholdTensor, scoreThresholdTensor, softNmsSigmaTensor\n        ], 3), selectedIndices = _d[0], selectedScores = _d[1], validOutputs = _d[2];\n        maxOutputSizeTensor.dispose();\n        iouThresholdTensor.dispose();\n        scoreThresholdTensor.dispose();\n        softNmsSigmaTensor.dispose();\n        validOutputs.dispose();\n        return [selectedIndices, selectedScores];\n    }\n};\n"]},"metadata":{},"sourceType":"script"}