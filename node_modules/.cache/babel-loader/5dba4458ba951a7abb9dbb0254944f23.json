{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, kernel_impls, NonMaxSuppressionV4 } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV4Impl = kernel_impls.nonMaxSuppressionV4Impl;\nexport const nonMaxSuppressionV4Config = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'webgl',\n  kernelFunc: ({\n    inputs,\n    backend,\n    attrs\n  }) => {\n    backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' + 'Call tf.nonMaxSuppressionAsync() instead');\n    const boxes = inputs.boxes,\n          scores = inputs.scores;\n    const maxOutputSize = attrs.maxOutputSize,\n          iouThreshold = attrs.iouThreshold,\n          scoreThreshold = attrs.scoreThreshold,\n          padToMaxOutputSize = attrs.padToMaxOutputSize;\n    const gpuBackend = backend;\n    const boxesVals = gpuBackend.readSync(boxes.dataId);\n    const scoresVals = gpuBackend.readSync(scores.dataId);\n\n    const _nonMaxSuppressionV4I = nonMaxSuppressionV4Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize),\n          selectedIndices = _nonMaxSuppressionV4I.selectedIndices,\n          validOutputs = _nonMaxSuppressionV4I.validOutputs;\n\n    return [selectedIndices, validOutputs];\n  }\n};","map":null,"metadata":{},"sourceType":"module"}