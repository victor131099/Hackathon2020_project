{"ast":null,"code":"var _jsxFileName = \"/home/victor/COVID-19-Coding-Fest/src/pages/customer/components/MaskChart.js\";\nimport { Layout, Row, Col, Card } from \"antd\";\nimport React, { Component } from 'react';\nimport moment, { months } from \"moment\";\nimport { Chart, Geom, Axis, Tooltip, Legend } from \"bizcharts\";\nconst {\n  Content\n} = Layout;\n\nclass MaskChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emask_data: [],\n      month_data: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\").then(response => response.json()).then(data => this.setState({\n      emask_data: data\n    }));\n  }\n\n  extract_month() {\n    var months_data = [{\n      month: \"Jan\",\n      count: 0\n    }, {\n      month: \"Feb\",\n      count: 0\n    }, {\n      month: \"Mar\",\n      count: 0\n    }, {\n      month: \"Apr\",\n      count: 0\n    }, {\n      month: \"May\",\n      count: 0\n    }, {\n      month: \"Jun\",\n      count: 0\n    }, {\n      month: \"Jul\",\n      count: 0\n    }, {\n      month: \"Aug\",\n      count: 0\n    }, {\n      month: \"Sep\",\n      count: 0\n    }, {\n      month: \"Oct\",\n      count: 0\n    }, {\n      month: \"Nov\",\n      count: 0\n    }, {\n      month: \"Dec\",\n      count: 0\n    }];\n\n    for (var i = 0; i < this.state.emask_data.length; i++) {\n      for (var j = 0; j < months_data.length; j++) {\n        var mon = j + 1;\n\n        if (this.state.emask_data[i].status === \"ALERTED\") {\n          if (parseInt(moment(this.state.emask_data[i].date).format(\"MM\")) == mon) {\n            months_data[j].count = months_data[j].count + 1;\n            break;\n          }\n        }\n      }\n    }\n\n    return months_data;\n  }\n\n  render() {\n    var month_data = this.extract_month();\n\n    const getTooltipData = (month, count) => {\n      return {\n        name: \"the number of alerted\",\n        value: count\n      };\n    };\n\n    return /*#__PURE__*/React.createElement(Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \" The number of non-weared mask cases by month \"), /*#__PURE__*/React.createElement(Chart, {\n      data: month_data,\n      height: 200,\n      forceFit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Legend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Axis, {\n      name: \"month\",\n      label: {\n        textStyle: {\n          fill: 'red',\n          // colour\n          textBaseline: 'top' // Align the baseline\n\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Axis, {\n      name: \"count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      crosshairs: {\n        type: \"y\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Geom, {\n      type: \"interval\",\n      position: \"month*count\",\n      style: {\n        cursor: 'pointer'\n      } // When the mouse hover goes up, it shows the little hand, free to send\n      ,\n      active: [true, {\n        style: {\n          fill: 'black',\n          // pillar color, continue to mourn\n          shadowColor: 'red',\n          // overall shadow color, including edges\n          shadowBlur: 1,\n          // shadow transparency\n          opacity: 0 // pillar color transparency\n\n        }\n      }],\n      tooltip: [\"month*count\", getTooltipData],\n      adjust: [{\n        type: 'dodge',\n        marginRatio: 1 / 32\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}\n\nexport default MaskChart;","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/src/pages/customer/components/MaskChart.js"],"names":["Layout","Row","Col","Card","React","Component","moment","months","Chart","Geom","Axis","Tooltip","Legend","Content","MaskChart","constructor","props","state","emask_data","month_data","componentDidMount","fetch","then","response","json","data","setState","extract_month","months_data","month","count","i","length","j","mon","status","parseInt","date","format","render","getTooltipData","name","value","textAlign","textStyle","fill","textBaseline","type","cursor","style","shadowColor","shadowBlur","opacity","marginRatio"],"mappings":"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","sourcesContent":["import {Layout, Row, Col,Card } from \"antd\"\nimport React, {Component} from 'react'\nimport moment, { months } from \"moment\"\nimport { Chart,\n    Geom,\n    Axis,\n    Tooltip, Legend} from \"bizcharts\";\n  \n const {Content} = Layout \nclass MaskChart extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            emask_data:[],\n            month_data:[]\n        }\n    }\n    componentDidMount () {\n        \n          fetch(\"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\")\n        .then(response => response.json())\n        .then(data => this.setState({emask_data:data}))\n       \n      };\n      extract_month(){\n          var months_data = [\n            {\n                month: \"Jan\",\n                count:0,\n                \n            },\n            {\n                month: \"Feb\",\n                count:0,\n                \n            },\n            {\n                month: \"Mar\",\n                count:0,\n                \n            },\n            {\n                month: \"Apr\",\n                count:0,\n                \n            }, \n            {\n                month: \"May\",\n                count:0,\n               \n            },\n            {\n                month: \"Jun\",\n                count:0,\n                \n            },\n            {\n                month: \"Jul\",\n                count:0,\n               \n            },\n            {\n                month: \"Aug\",\n                count:0,\n               \n            },\n            {\n                month: \"Sep\",\n                count:0,\n                \n            },\n            {\n                month: \"Oct\",\n                count:0,\n                \n            }, \n            {\n                month: \"Nov\",\n                count:0,\n                \n            }, \n            {\n                month: \"Dec\",\n                count:0,\n                \n            }\n        ];\n          \n          for(var i =0; i < this.state.emask_data.length; i++){\n            for(var j=0; j < months_data.length; j++){\n                var mon= j+1;\n                if(this.state.emask_data[i].status ===\"ALERTED\"){\n                    if(parseInt(moment(this.state.emask_data[i].date).format(\"MM\")) == mon ){\n                    \n                        months_data[j].count = months_data[j].count+1\n                        break;\n                    }\n                }\n            }\n          }\n          return months_data;\n\n      }\n    \n    render(){\n        var month_data = this.extract_month()\n        \n        const getTooltipData = (month, count) => {\n            return {\n                name: \"the number of alerted\",\n                value: count\n               \n            };\n        }\n        \n        return(\n            <Content>\n                <Card>\n                    <h2 style= {{textAlign:\"center\"}}> The number of non-weared mask cases by month </h2>\n                <Chart data={month_data} height={200} forceFit={true}>\n        <Legend />\n        <Axis name='month'         label={{\n            textStyle: {\n                fill: 'red',  // colour\n                textBaseline: 'top'  // Align the baseline\n            },\n            \n        }}/>\n        <Axis name='count' />\n        <Tooltip         crosshairs={{\n            type: \"y\" \n        }} />\n        <Geom type='interval' position='month*count'                style={{ cursor: 'pointer' }} // When the mouse hover goes up, it shows the little hand, free to send\n        active={[\n            true,\n            {\n                style: {\n                    fill: 'black',  // pillar color, continue to mourn\n                    shadowColor: 'red',  // overall shadow color, including edges\n                    shadowBlur: 1,  // shadow transparency\n                    opacity: 0 // pillar color transparency\n                }\n            }\n        ]}        tooltip={[\"month*count\", getTooltipData]} adjust={[{ type: 'dodge', marginRatio: 1 / 32 }]} />\n      </Chart>\n                </Card>\n            </Content>\n        )\n    }\n}\nexport default MaskChart;"]},"metadata":{},"sourceType":"module"}