{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\n\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\n\nvar Dilation2D_1 = require(\"./kernels/Dilation2D\");\n\nvar Dilation2DBackpropFilter_1 = require(\"./kernels/Dilation2DBackpropFilter\");\n\nvar Dilation2DBackpropInput_1 = require(\"./kernels/Dilation2DBackpropInput\");\n\nvar NonMaxSuppressionV4_1 = require(\"./kernels/NonMaxSuppressionV4\");\n\nvar NonMaxSuppressionV5_1 = require(\"./kernels/NonMaxSuppressionV5\");\n\nvar Softmax_1 = require(\"./kernels/Softmax\");\n\nvar SquaredDifference_1 = require(\"./kernels/SquaredDifference\"); // List all kernel configs here\n\n\nvar kernelConfigs = [Dilation2D_1.dilation2dConfig, Dilation2DBackpropInput_1.dilation2dBackpropInputConfig, Dilation2DBackpropFilter_1.dilation2dBackpropFilterConfig, NonMaxSuppressionV4_1.nonMaxSuppressionV4Config, NonMaxSuppressionV5_1.nonMaxSuppressionV5Config, Softmax_1.softmaxConfig, SquaredDifference_1.squaredDifferenceConfig];\n\nfor (var _i = 0, kernelConfigs_1 = kernelConfigs; _i < kernelConfigs_1.length; _i++) {\n  var kernelConfig = kernelConfigs_1[_i];\n  tfjs_core_1.registerKernel(kernelConfig);\n}","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/node_modules/@tensorflow/tfjs-node/dist/register_all_kernels.js"],"names":["Object","defineProperty","exports","value","tfjs_core_1","require","Dilation2D_1","Dilation2DBackpropFilter_1","Dilation2DBackpropInput_1","NonMaxSuppressionV4_1","NonMaxSuppressionV5_1","Softmax_1","SquaredDifference_1","kernelConfigs","dilation2dConfig","dilation2dBackpropInputConfig","dilation2dBackpropFilterConfig","nonMaxSuppressionV4Config","nonMaxSuppressionV5Config","softmaxConfig","squaredDifferenceConfig","_i","kernelConfigs_1","length","kernelConfig","registerKernel"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;;;;;;;;;;;;;;;AAgBA;AACA;AACA;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,uBAAD,CAAzB;;AACA,IAAIC,YAAY,GAAGD,OAAO,CAAC,sBAAD,CAA1B;;AACA,IAAIE,0BAA0B,GAAGF,OAAO,CAAC,oCAAD,CAAxC;;AACA,IAAIG,yBAAyB,GAAGH,OAAO,CAAC,mCAAD,CAAvC;;AACA,IAAII,qBAAqB,GAAGJ,OAAO,CAAC,+BAAD,CAAnC;;AACA,IAAIK,qBAAqB,GAAGL,OAAO,CAAC,+BAAD,CAAnC;;AACA,IAAIM,SAAS,GAAGN,OAAO,CAAC,mBAAD,CAAvB;;AACA,IAAIO,mBAAmB,GAAGP,OAAO,CAAC,6BAAD,CAAjC,C,CACA;;;AACA,IAAIQ,aAAa,GAAG,CAChBP,YAAY,CAACQ,gBADG,EACeN,yBAAyB,CAACO,6BADzC,EAEhBR,0BAA0B,CAACS,8BAFX,EAE2CP,qBAAqB,CAACQ,yBAFjE,EAGhBP,qBAAqB,CAACQ,yBAHN,EAGiCP,SAAS,CAACQ,aAH3C,EAG0DP,mBAAmB,CAACQ,uBAH9E,CAApB;;AAKA,KAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,eAAe,GAAGT,aAAnC,EAAkDQ,EAAE,GAAGC,eAAe,CAACC,MAAvE,EAA+EF,EAAE,EAAjF,EAAqF;AACjF,MAAIG,YAAY,GAAGF,eAAe,CAACD,EAAD,CAAlC;AACAjB,EAAAA,WAAW,CAACqB,cAAZ,CAA2BD,YAA3B;AACH","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// We explicitly import the modular kernels so they get registered in the\n// global registry when we compile the library. A modular build would replace\n// the contents of this file and import only the kernels that are needed.\nvar tfjs_core_1 = require(\"@tensorflow/tfjs-core\");\nvar Dilation2D_1 = require(\"./kernels/Dilation2D\");\nvar Dilation2DBackpropFilter_1 = require(\"./kernels/Dilation2DBackpropFilter\");\nvar Dilation2DBackpropInput_1 = require(\"./kernels/Dilation2DBackpropInput\");\nvar NonMaxSuppressionV4_1 = require(\"./kernels/NonMaxSuppressionV4\");\nvar NonMaxSuppressionV5_1 = require(\"./kernels/NonMaxSuppressionV5\");\nvar Softmax_1 = require(\"./kernels/Softmax\");\nvar SquaredDifference_1 = require(\"./kernels/SquaredDifference\");\n// List all kernel configs here\nvar kernelConfigs = [\n    Dilation2D_1.dilation2dConfig, Dilation2DBackpropInput_1.dilation2dBackpropInputConfig,\n    Dilation2DBackpropFilter_1.dilation2dBackpropFilterConfig, NonMaxSuppressionV4_1.nonMaxSuppressionV4Config,\n    NonMaxSuppressionV5_1.nonMaxSuppressionV5Config, Softmax_1.softmaxConfig, SquaredDifference_1.squaredDifferenceConfig\n];\nfor (var _i = 0, kernelConfigs_1 = kernelConfigs; _i < kernelConfigs_1.length; _i++) {\n    var kernelConfig = kernelConfigs_1[_i];\n    tfjs_core_1.registerKernel(kernelConfig);\n}\n"]},"metadata":{},"sourceType":"script"}