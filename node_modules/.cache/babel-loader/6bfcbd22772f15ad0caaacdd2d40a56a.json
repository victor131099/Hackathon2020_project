{"ast":null,"code":"var _jsxFileName = \"/home/victor/COVID-19-Coding-Fest/src/pages/scan/components/Camera.js\";\nimport React, { useState, useRef, useEffect, Fragment } from \"react\";\nimport Measure from \"react-measure\";\nimport { useUserMedia } from \"./useUserMedia\";\nimport { useCardRatio } from \"./userCardRatio\";\nimport { useOffsets } from \"./useOffSet\";\nimport { Video, Canvas, Wrapper, Container, Flash, Overlay, Button } from \"./styles\";\nimport { Spin } from \"antd\";\nimport ml5 from \"ml5\"; // import model from \"../../../data/Data\"\n// import * as tf from \"@tensorflow/tfjs\"\n\nimport { withRouter } from \"react-router-dom\"; // import { OmitProps } from \"antd/lib/transfer/renderListBody\";\n\nimport axios from \"axios\"; // import json from \"./model.json\"\n// const tfn = require(\"@tensorflow/tfjs-node-gpu\");\n// import * as cvstfjs from '@microsoft/customvision-tfjs';\n\nconst CAPTURE_OPTIONS = {\n  audio: false,\n  video: {\n    facingMode: \"environment\"\n  }\n};\n\nfunction Camera(props) {\n  const [model, setModel] = useState(null);\n  const [results, setResults] = useState([]);\n  const canvasRef = useRef();\n  const videoRef = useRef();\n  const [weared_mask, setMask] = useState(false);\n  const [container, setContainer] = useState({\n    width: 0,\n    height: 0\n  });\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const [isCanvasEmpty, setIsCanvasEmpty] = useState(true);\n  const [isFlashing, setIsFlashing] = useState(false);\n  const [linkBlob, setLinkBlob] = useState(\"\");\n  const [emask_data, setEmaskData] = useState([]);\n  const mediaStream = useUserMedia(CAPTURE_OPTIONS);\n  const [aspectRatio, calculateRatio] = useCardRatio(1.586);\n  const [classifier, setClassifier] = useState(null);\n  const offsets = useOffsets(videoRef.current && videoRef.current.videoWidth, videoRef.current && videoRef.current.videoHeight, container.width, container.height);\n  const [loading, setLoading] = useState(true);\n\n  if (mediaStream && videoRef.current && !videoRef.current.srcObject) {\n    videoRef.current.srcObject = mediaStream;\n  }\n\n  function handleResize(contentRect) {\n    setContainer({\n      width: contentRect.bounds.width,\n      height: Math.round(contentRect.bounds.width / aspectRatio)\n    });\n  }\n\n  function handleCanPlay() {\n    calculateRatio(videoRef.current.videoHeight, videoRef.current.videoWidth);\n    setIsVideoPlaying(true);\n    videoRef.current.play();\n  }\n\n  function handleCapture() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.drawImage(videoRef.current, 0, 0, 500, 500); // var link = document.createElement(\"a\");\n    // link.download = \"image.png\";\n    // predict(canvasRef.current\n    // console.log(canvasRef.current);\n    // canvasRef.current.toBlob(function(blob){{\n    //     link.href = URL.createObjectURL(blob);\n    //     console.log(blob);\n    //     setLinkBlob(link.href);\n    //     // console.log(link.href);\n    //     // load(link.href);\n    //     // setInterval(identify(link.href), 3000)\n    //     // const emask = document.getElementById('emask');\n    //     // console.log(model)\n    //     // model.execute(tf.browser.fromPixels(emask));\n    //     // console.log(link.href); // this line should be here\n    //   }}, \"image/png\", 1);\n\n    classifyImg();\n    setIsCanvasEmpty(false);\n    setIsFlashing(true); // setIsVideoPlaying(false)\n  }\n\n  function classifyImg() {\n    // Initialize the Image Classifier method with MobileNet\n    const classifier = ml5.imageClassifier('MobileNet', modelLoaded); // When the model is loaded\n\n    function modelLoaded() {\n      console.log('Model Loaded!');\n    } // Put the image to classify inside a variable\n    // Make a prediction with a selected image\n    // const canvas = document.getElementById('canvas');\n\n\n    console.log(canvasRef.current); // console.log(document.getElementById(\"canvas\"))\n\n    classifier.predict(canvasRef.current, 5, function (err, results) {\n      // Return the results\n      return results;\n    }).then(results => {\n      // Set the predictions in the state\n      // this.setPredictions(results)\n      var found = false;\n\n      for (var i = 0; i < results.length; i++) {\n        if (results[i].label.includes(\"mask\")) {\n          // console.log(results)\n          setMask(true);\n          setLoading(false);\n          found = true;\n          break;\n        }\n      } // console.log(\"world\")\n      // if(props.hisotry.location.state.register === false){\n      //   axios.post(\n      //   \"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\",\n      //   {\n      //     key5: `${props.history.location.state.item.date}`,\n      //   key2: `${props.history.location.state.item.address}`,\n      //   key3: `${props.history.location.state.item.email}`,\n      //   key4: `${props.history.location.state.item.isMapOpen}`,\n      //   key1: `${props.history.location.state.item.key}`,\n      //   key6: `${props.history.location.state.item.name}`,\n      //   key7: `${props.history.location.state.item.phone}`,\n      //   key8: `${found?\"CONFIRMED\":\"ALERTED\"}`,\n      //   key9: `${props.history.location.state.item.type}`,\n      //   key10: `${props.history.location.state.item.count_visited}`,\n      //   key11: `${found?\"0\":\"1\"}`\n      //   }).then(res =>{console.log(res)});\n      // // }else{\n      // axios.post(  \n      //   \"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\",\n      //   {\n      //   }).then(res =>{console.log(res)});\n      // }\n      //         if (localStorage.getItem(\"count_data\")){\n      //   const count= parseInt( localStorage.getItem(\"count_data\"))\n      //   localStorage.setItem(\"count_data\", count+1)\n      // }else{\n      //   localStorage.setItem(\"count_data\", 1)\n      // }\n      // console.log(props.history.location.state.status)\n      // console.log(props.history.location.state.phone)\n      // if (found === false){\n      //   // console.log(props.history.location.state.?phone)\n      //   axios.post(\"https://f0mrzhjnf1.execute-api.ap-southeast-2.amazonaws.com/stage\", {\n      //     message:\"U should wear the meask before entering the buidling\",\n      //     phoneNumber: `${props.history.location.state.item.phone}`\n      //   })\n      // }\n      // props.history.push(\"/\");\n      // window.location.reload(false); \n\n\n      setLoading(false);\n      console.log(results);\n    });\n  }\n\n  function handleClear() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setIsCanvasEmpty(false); // setIsFlashing(false)\n    // onClear();\n  }\n\n  useEffect(() => {\n    // console.log(props.history.location.state)\n    var i = 0;\n    const timer = setInterval(() => {\n      if (isVideoPlaying) {\n        if (isCanvasEmpty) {\n          console.log(isCanvasEmpty);\n          handleCapture();\n          handleClear(); // const classifier= ml5.imageClassifier('MobileNet', modelLoaded);\n          // setClassifier(classifier)\n          // load();\n\n          if (i >= 0) {\n            console.log(i);\n            clearInterval(timer);\n          }\n\n          i++; // axios.post(\n          //   \"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\",\n          //   {\n          //     key5: `${props.history.location.state.date}`,\n          //   key2: `${props.history.location.state.address}`,\n          //   key3: `${props.history.location.state.email}`,\n          //   key4: `${props.history.location.state.isMapOpen}`,\n          //   key1: `${props.history.location.state.key}`,\n          //   key6: `${props.history.location.state.name}`,\n          //   key7: `${props.history.location.state.phone}`,\n          //   key8: `${props.history.location.state.status}`,\n          //   key9: `${props.history.location.state.type}`\n          //   }).then(res =>{console.log(res)})\n        }\n      }\n    }, 200);\n  });\n\n  function onclick() {// classifier_image(canvasRef.current)\n    // predict(canvasRef.current)\n    // if (localStorage.getItem(\"count_data\")){\n    //   const count= parseInt( localStorage.getItem(\"count_data\"))\n    //   localStorage.setItem(\"count_data\", count+1)\n    // }else{\n    //   localStorage.setItem(\"count_data\", 1)\n    // }\n    // console.log(props.history.location.state.status)\n    // console.log(props.history.location.state.phone)\n    // if (props.history.location.state.status === \"ALERTED\"){\n    //   console.log(props.history.location.state.phone)\n    //   axios.post(\"https://f0mrzhjnf1.execute-api.ap-southeast-2.amazonaws.com/stage\", {\n    //     message:\"U should wear the meask immediately\",\n    //     phoneNumber: `${props.history.location.state.phone}`\n    //   })\n    // }\n    // props.history.push(\"/\");\n    // window.location.reload(false);\n  }\n\n  if (!mediaStream) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Measure, {\n    bounds: true,\n    onResize: handleResize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }\n  }, ({\n    measureRef\n  }) => /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    ref: measureRef,\n    maxHeight: videoRef.current && videoRef.current.videoHeight,\n    maxWidth: videoRef.current && videoRef.current.videoWidth,\n    style: {\n      height: `${container.height}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Video, {\n    ref: videoRef,\n    hidden: !isVideoPlaying,\n    onCanPlay: handleCanPlay,\n    autoPlay: true,\n    playsInline: true,\n    muted: true,\n    style: {\n      top: `-${offsets.y}px`,\n      left: `-${offsets.x}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Overlay, {\n    hidden: !isVideoPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Canvas, {\n    id: \"canvas\",\n    ref: canvasRef,\n    width: 400,\n    height: 400,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  })), !isCanvasEmpty && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 15\n    }\n  }, \"Preview\")), loading ? /*#__PURE__*/React.createElement(Spin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 21\n    }\n  }, \" Prediction: \", weared_mask ? \"The visitor wears mask\" : \"The visitor doesn't wear mask\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: onclick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 11\n    }\n  }, \" Go Back \"))));\n}\n\nexport default withRouter(Camera);","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/src/pages/scan/components/Camera.js"],"names":["React","useState","useRef","useEffect","Fragment","Measure","useUserMedia","useCardRatio","useOffsets","Video","Canvas","Wrapper","Container","Flash","Overlay","Button","Spin","ml5","withRouter","axios","CAPTURE_OPTIONS","audio","video","facingMode","Camera","props","model","setModel","results","setResults","canvasRef","videoRef","weared_mask","setMask","container","setContainer","width","height","isVideoPlaying","setIsVideoPlaying","isCanvasEmpty","setIsCanvasEmpty","isFlashing","setIsFlashing","linkBlob","setLinkBlob","emask_data","setEmaskData","mediaStream","aspectRatio","calculateRatio","classifier","setClassifier","offsets","current","videoWidth","videoHeight","loading","setLoading","srcObject","handleResize","contentRect","bounds","Math","round","handleCanPlay","play","handleCapture","context","getContext","drawImage","classifyImg","imageClassifier","modelLoaded","console","log","predict","err","then","found","i","length","label","includes","handleClear","clearRect","timer","setInterval","clearInterval","onclick","measureRef","top","y","left","x","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, Fragment } from \"react\";\nimport Measure from \"react-measure\";\nimport { useUserMedia } from \"./useUserMedia\";\nimport { useCardRatio } from \"./userCardRatio\";\nimport { useOffsets } from \"./useOffSet\";\nimport {\n  Video,\n  Canvas,\n  Wrapper,\n  Container,\n  Flash,\n  Overlay,\n  Button\n} from \"./styles\";\nimport {Spin} from \"antd\"\nimport ml5 from \"ml5\"\n// import model from \"../../../data/Data\"\n// import * as tf from \"@tensorflow/tfjs\"\nimport { withRouter } from \"react-router-dom\";\n// import { OmitProps } from \"antd/lib/transfer/renderListBody\";\nimport axios from \"axios\"\n// import json from \"./model.json\"\n// const tfn = require(\"@tensorflow/tfjs-node-gpu\");\n// import * as cvstfjs from '@microsoft/customvision-tfjs';\nconst CAPTURE_OPTIONS = {\n  audio: false,\n  video: { facingMode: \"environment\" }\n};\n\n\nfunction Camera(props) {\n  const [model, setModel] = useState(null)\n  const [results, setResults] = useState([])\n  const canvasRef = useRef();\n  const videoRef = useRef();\n  const [weared_mask, setMask] = useState(false);\n  const [container, setContainer] = useState({ width: 0, height: 0 });\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const [isCanvasEmpty, setIsCanvasEmpty] = useState(true);\n  const [isFlashing, setIsFlashing] = useState(false);\n  const [linkBlob, setLinkBlob] = useState(\"\");\n  const [emask_data, setEmaskData] = useState([])\n  const mediaStream = useUserMedia(CAPTURE_OPTIONS);\n  const [aspectRatio, calculateRatio] = useCardRatio(1.586);\n  const [classifier, setClassifier] = useState(null);\n  const offsets = useOffsets(videoRef.current && videoRef.current.videoWidth,videoRef.current && videoRef.current.videoHeight,container.width,container.height);\n  const [loading, setLoading] = useState(true);\n \n\n   \n  \n   \n  if (mediaStream && videoRef.current && !videoRef.current.srcObject) {\n    videoRef.current.srcObject = mediaStream;\n  }\n \n  \n  function handleResize(contentRect) {\n    setContainer({\n      width: contentRect.bounds.width,\n      height: Math.round(contentRect.bounds.width / aspectRatio)\n    });\n  }\n\n  function handleCanPlay() {\n    calculateRatio(videoRef.current.videoHeight, videoRef.current.videoWidth);\n    setIsVideoPlaying(true);\n    videoRef.current.play();\n  }\n\n  function handleCapture() {\n    const context = canvasRef.current.getContext(\"2d\");\n    \n    context.drawImage(\n      videoRef.current,\n      \n      0,\n      0,\n      500,\n      500\n    );\n    // var link = document.createElement(\"a\");\n  // link.download = \"image.png\";\n  // predict(canvasRef.current\n  // console.log(canvasRef.current);\n    // canvasRef.current.toBlob(function(blob){{\n    //     link.href = URL.createObjectURL(blob);\n    //     console.log(blob);\n    //     setLinkBlob(link.href);\n    //     // console.log(link.href);\n    //     // load(link.href);\n    //     // setInterval(identify(link.href), 3000)\n        \n        \n    //     // const emask = document.getElementById('emask');\n    //     // console.log(model)\n    //     // model.execute(tf.browser.fromPixels(emask));\n    //     // console.log(link.href); // this line should be here\n    //   }}, \"image/png\", 1);\n    classifyImg();\n    setIsCanvasEmpty(false);\n    setIsFlashing(true);\n    // setIsVideoPlaying(false)\n  }\n  function classifyImg () {\n    // Initialize the Image Classifier method with MobileNet\n    const classifier = ml5.imageClassifier('MobileNet', modelLoaded);\n    // When the model is loaded\n    function modelLoaded() {\n      console.log('Model Loaded!');\n    }\n    // Put the image to classify inside a variable\n  \n    // Make a prediction with a selected image\n    // const canvas = document.getElementById('canvas');\n    console.log(canvasRef.current)\n    // console.log(document.getElementById(\"canvas\"))\n    classifier.predict(canvasRef.current, 5, function(err, results) {\n    // Return the results\n     \n      \n      return results;\n    })\n      .then((results) => {\n        // Set the predictions in the state\n        // this.setPredictions(results)\n        var found = false\n        for(var i =0 ; i< results.length; i++){\n          if(results[i].label.includes(\"mask\")){\n            // console.log(results)\n            setMask(true);\n            setLoading(false);\n            found = true\n            break;\n          }\n        }\n        // console.log(\"world\")\n          // if(props.hisotry.location.state.register === false){\n          //   axios.post(\n          //   \"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\",\n          //   {\n          //     key5: `${props.history.location.state.item.date}`,\n          //   key2: `${props.history.location.state.item.address}`,\n          //   key3: `${props.history.location.state.item.email}`,\n          //   key4: `${props.history.location.state.item.isMapOpen}`,\n          //   key1: `${props.history.location.state.item.key}`,\n          //   key6: `${props.history.location.state.item.name}`,\n          //   key7: `${props.history.location.state.item.phone}`,\n          //   key8: `${found?\"CONFIRMED\":\"ALERTED\"}`,\n          //   key9: `${props.history.location.state.item.type}`,\n          //   key10: `${props.history.location.state.item.count_visited}`,\n          //   key11: `${found?\"0\":\"1\"}`\n          //   }).then(res =>{console.log(res)});\n          // // }else{\n            // axios.post(  \n            //   \"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\",\n            //   {\n              \n              \n            //   }).then(res =>{console.log(res)});\n          // }\n    //         if (localStorage.getItem(\"count_data\")){\n    //   const count= parseInt( localStorage.getItem(\"count_data\"))\n    //   localStorage.setItem(\"count_data\", count+1)\n    // }else{\n    //   localStorage.setItem(\"count_data\", 1)\n    // }\n    // console.log(props.history.location.state.status)\n    // console.log(props.history.location.state.phone)\n    // if (found === false){\n    //   // console.log(props.history.location.state.?phone)\n    //   axios.post(\"https://f0mrzhjnf1.execute-api.ap-southeast-2.amazonaws.com/stage\", {\n    //     message:\"U should wear the meask before entering the buidling\",\n    //     phoneNumber: `${props.history.location.state.item.phone}`\n    //   })\n    // }\n    // props.history.push(\"/\");\n    // window.location.reload(false); \n        setLoading(false);\n       \n        console.log(results);\n      })\n     \n  }\n\n  function handleClear() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setIsCanvasEmpty(false);\n    // setIsFlashing(false)\n    // onClear();\n  }\n  useEffect(() => { \n    // console.log(props.history.location.state)\n    \n\n    var i =0\n    \n    const timer = setInterval(() => { if (isVideoPlaying){\n      if(isCanvasEmpty){\n        console.log(isCanvasEmpty)\n        handleCapture();\n        handleClear();\n        // const classifier= ml5.imageClassifier('MobileNet', modelLoaded);\n        // setClassifier(classifier)\n        \n        // load();\n        if(i>=0){\n          console.log(i);\n          clearInterval(timer)\n        }\n        i++\n        // axios.post(\n        //   \"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\",\n        //   {\n        //     key5: `${props.history.location.state.date}`,\n        //   key2: `${props.history.location.state.address}`,\n        //   key3: `${props.history.location.state.email}`,\n        //   key4: `${props.history.location.state.isMapOpen}`,\n        //   key1: `${props.history.location.state.key}`,\n        //   key6: `${props.history.location.state.name}`,\n        //   key7: `${props.history.location.state.phone}`,\n        //   key8: `${props.history.location.state.status}`,\n        //   key9: `${props.history.location.state.type}`\n        //   }).then(res =>{console.log(res)})\n        \n      }\n      \n      \n      \n     \n    }}, 200)\n      \n    }\n  );\n  function onclick(){\n    // classifier_image(canvasRef.current)\n    // predict(canvasRef.current)\n    // if (localStorage.getItem(\"count_data\")){\n    //   const count= parseInt( localStorage.getItem(\"count_data\"))\n    //   localStorage.setItem(\"count_data\", count+1)\n    // }else{\n    //   localStorage.setItem(\"count_data\", 1)\n    // }\n    // console.log(props.history.location.state.status)\n    // console.log(props.history.location.state.phone)\n    // if (props.history.location.state.status === \"ALERTED\"){\n    //   console.log(props.history.location.state.phone)\n    //   axios.post(\"https://f0mrzhjnf1.execute-api.ap-southeast-2.amazonaws.com/stage\", {\n    //     message:\"U should wear the meask immediately\",\n    //     phoneNumber: `${props.history.location.state.phone}`\n    //   })\n    // }\n    // props.history.push(\"/\");\n    // window.location.reload(false);\n    \n  }\n\n\n\n  if (!mediaStream) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n    <Measure bounds onResize={handleResize}>\n      {({ measureRef }) => (\n        <Wrapper>\n          <Container\n            ref={measureRef}\n            maxHeight={videoRef.current && videoRef.current.videoHeight}\n            maxWidth={videoRef.current && videoRef.current.videoWidth}\n            style={{\n              height: `${container.height}px`\n            }}\n          >\n            <Video\n              ref={videoRef}\n              hidden={!isVideoPlaying}\n              onCanPlay={handleCanPlay}\n              autoPlay\n              playsInline\n              muted\n              style={{\n                top: `-${offsets.y}px`,\n                left: `-${offsets.x}px`\n              }}\n            />\n\n            <Overlay hidden={!isVideoPlaying} />\n\n            <Canvas\n              id = \"canvas\"\n              ref={canvasRef}\n              width={400}\n              height={400}\n            />\n\n            {/* <Flash\n              flash={isFlashing}\n              onAnimationEnd={() => setIsFlashing(false)}\n            /> */}\n          </Container>\n\n         \n          {!isCanvasEmpty && \n              \n              <Fragment>\n              <div>\n              <h2 style= {{textAlign:\"center\"}}>Preview</h2>\n              {/* <img id = \"emask\" src = {linkBlob} id = \"image\"/> */}\n              </div>\n                {\n            loading  ?\n          <Spin/> : <div> Prediction: {weared_mask ? \"The visitor wears mask\" :\"The visitor doesn't wear mask\"}</div>\n          }\n              </Fragment>\n              \n              \n          }\n          <Button onClick= {onclick} > Go Back </Button>\n            \n\n        \n          \n\n        </Wrapper>\n      )}\n    </Measure>\n    \n    </Fragment>\n  );\n}\nexport default withRouter(Camera)"]},"metadata":{},"sourceType":"module"}