{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nimport { kernel_impls } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV5Impl = kernel_impls.nonMaxSuppressionV5Impl;\nimport { assertNotComplex } from '../cpu_util';\nexport const nonMaxSuppressionV5Config = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'cpu',\n  kernelFunc: ({\n    inputs,\n    backend,\n    attrs\n  }) => {\n    const boxes = inputs.boxes,\n          scores = inputs.scores;\n    const maxOutputSize = attrs.maxOutputSize,\n          iouThreshold = attrs.iouThreshold,\n          scoreThreshold = attrs.scoreThreshold,\n          softNmsSigma = attrs.softNmsSigma;\n    const cpuBackend = backend;\n    assertNotComplex(boxes, 'NonMaxSuppressionWithScore');\n    const boxesVals = cpuBackend.data.get(boxes.dataId).values;\n    const scoresVals = cpuBackend.data.get(scores.dataId).values;\n    const maxOutputSizeVal = maxOutputSize;\n    const iouThresholdVal = iouThreshold;\n    const scoreThresholdVal = scoreThreshold;\n    const softNmsSigmaVal = softNmsSigma;\n\n    const _nonMaxSuppressionV5I = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal),\n          selectedIndices = _nonMaxSuppressionV5I.selectedIndices,\n          selectedScores = _nonMaxSuppressionV5I.selectedScores;\n\n    return [selectedIndices, selectedScores];\n  }\n};","map":null,"metadata":{},"sourceType":"module"}