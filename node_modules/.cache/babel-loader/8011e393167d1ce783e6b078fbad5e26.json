{"ast":null,"code":"import _classCallCheck from\"/home/victor/COVID-19-Coding-Fest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/victor/COVID-19-Coding-Fest/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/victor/COVID-19-Coding-Fest/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/victor/COVID-19-Coding-Fest/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/victor/COVID-19-Coding-Fest/node_modules/@babel/runtime/helpers/esm/inherits\";import{Layout,Row,Col,Card}from\"antd\";import React,{Component}from'react';import moment,{months}from\"moment\";import{Chart,Geom,Axis,Tooltip,Legend}from\"bizcharts\";var Content=Layout.Content;var MaskChart=/*#__PURE__*/function(_Component){_inherits(MaskChart,_Component);function MaskChart(props){var _this;_classCallCheck(this,MaskChart);_this=_possibleConstructorReturn(this,_getPrototypeOf(MaskChart).call(this,props));_this.state={emask_data:[],month_data:[]};return _this;}_createClass(MaskChart,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch(\"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\").then(function(response){return response.json();}).then(function(data){return _this2.setState({emask_data:data});});}},{key:\"extract_month\",value:function extract_month(){var months_data=[{month:\"Jan\",count:0},{month:\"Feb\",count:0},{month:\"Mar\",count:0},{month:\"Apr\",count:0},{month:\"May\",count:0},{month:\"Jun\",count:0},{month:\"jul\",count:0},{month:\"Aug\",count:0},{month:\"Sep\",count:0},{month:\"Oct\",count:0},{month:\"Nov\",count:0},{month:\"Dec\",count:0}];for(var i=0;i<this.state.emask_data.length;i++){for(var j=0;j<months_data.length;j++){var mon=j+1;if(this.state.emask_data[i].status===\"ALERTED\"){if(parseInt(moment(this.state.emask_data[i].date).format(\"MM\"))==mon){months_data[j].count=months_data[j].count+1;break;}}}}return months_data;}},{key:\"render\",value:function render(){var month_data=this.extract_month();var getTooltipData=function getTooltipData(month,count){return{name:\"the number of alerted\",value:count};};return React.createElement(Content,null,React.createElement(Card,null,React.createElement(\"h2\",{style:{textAlign:\"center\"}},\" The number of unweared masks by month \"),React.createElement(Chart,{data:month_data,height:200,forceFit:true},React.createElement(Legend,null),React.createElement(Axis,{name:\"month\",label:{textStyle:{fill:'red',// colour\ntextBaseline:'top'// Align the baseline\n}}}),React.createElement(Axis,{name:\"count\"}),React.createElement(Tooltip,{crosshairs:{type:\"y\"}}),React.createElement(Geom,{type:\"interval\",position:\"month*count\",style:{cursor:'pointer'}// When the mouse hover goes up, it shows the little hand, free to send\n,active:[true,{style:{fill:'black',// pillar color, continue to mourn\nshadowColor:'red',// overall shadow color, including edges\nshadowBlur:1,// shadow transparency\nopacity:0// pillar color transparency\n}}],tooltip:[\"month*count\",getTooltipData],adjust:[{type:'dodge',marginRatio:1/32}]}))));}}]);return MaskChart;}(Component);export default MaskChart;","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/src/pages/customer/components/MaskChart.js"],"names":["Layout","Row","Col","Card","React","Component","moment","months","Chart","Geom","Axis","Tooltip","Legend","Content","MaskChart","props","state","emask_data","month_data","fetch","then","response","json","data","setState","months_data","month","count","i","length","j","mon","status","parseInt","date","format","extract_month","getTooltipData","name","value","textAlign","textStyle","fill","textBaseline","type","cursor","style","shadowColor","shadowBlur","opacity","marginRatio"],"mappings":"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","sourcesContent":["import {Layout, Row, Col,Card } from \"antd\"\nimport React, {Component} from 'react'\nimport moment, { months } from \"moment\"\nimport { Chart,\n    Geom,\n    Axis,\n    Tooltip, Legend} from \"bizcharts\";\n  \n const {Content} = Layout \nclass MaskChart extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            emask_data:[],\n            month_data:[]\n        }\n    }\n    componentDidMount () {\n        \n          fetch(\"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\")\n        .then(response => response.json())\n        .then(data => this.setState({emask_data:data}))\n       \n      };\n      extract_month(){\n          var months_data = [\n            {\n                month: \"Jan\",\n                count:0,\n                \n            },\n            {\n                month: \"Feb\",\n                count:0,\n                \n            },\n            {\n                month: \"Mar\",\n                count:0,\n                \n            },\n            {\n                month: \"Apr\",\n                count:0,\n                \n            }, \n            {\n                month: \"May\",\n                count:0,\n               \n            },\n            {\n                month: \"Jun\",\n                count:0,\n                \n            },\n            {\n                month: \"jul\",\n                count:0,\n               \n            },\n            {\n                month: \"Aug\",\n                count:0,\n               \n            },\n            {\n                month: \"Sep\",\n                count:0,\n                \n            },\n            {\n                month: \"Oct\",\n                count:0,\n                \n            }, \n            {\n                month: \"Nov\",\n                count:0,\n                \n            }, \n            {\n                month: \"Dec\",\n                count:0,\n                \n            }\n        ];\n          \n          for(var i =0; i < this.state.emask_data.length; i++){\n            for(var j=0; j < months_data.length; j++){\n                var mon= j+1;\n                if(this.state.emask_data[i].status ===\"ALERTED\"){\n                    if(parseInt(moment(this.state.emask_data[i].date).format(\"MM\")) == mon ){\n                    \n                        months_data[j].count = months_data[j].count+1\n                        break;\n                    }\n                }\n            }\n          }\n          return months_data;\n\n      }\n    \n    render(){\n        var month_data = this.extract_month()\n        \n        const getTooltipData = (month, count) => {\n            return {\n                name: \"the number of alerted\",\n                value: count\n               \n            };\n        }\n        \n        return(\n            <Content>\n                <Card>\n                    <h2 style= {{textAlign:\"center\"}}> The number of unweared masks by month </h2>\n                <Chart data={month_data} height={200} forceFit={true}>\n        <Legend />\n        <Axis name='month'         label={{\n            textStyle: {\n                fill: 'red',  // colour\n                textBaseline: 'top'  // Align the baseline\n            },\n            \n        }}/>\n        <Axis name='count' />\n        <Tooltip         crosshairs={{\n            type: \"y\" \n        }} />\n        <Geom type='interval' position='month*count'                style={{ cursor: 'pointer' }} // When the mouse hover goes up, it shows the little hand, free to send\n        active={[\n            true,\n            {\n                style: {\n                    fill: 'black',  // pillar color, continue to mourn\n                    shadowColor: 'red',  // overall shadow color, including edges\n                    shadowBlur: 1,  // shadow transparency\n                    opacity: 0 // pillar color transparency\n                }\n            }\n        ]}        tooltip={[\"month*count\", getTooltipData]} adjust={[{ type: 'dodge', marginRatio: 1 / 32 }]} />\n      </Chart>\n                </Card>\n            </Content>\n        )\n    }\n}\nexport default MaskChart;"]},"metadata":{},"sourceType":"module"}