{"ast":null,"code":"var _jsxFileName = \"/home/victor/COVID-19-Coding-Fest/src/pages/history/History.js\";\nimport React, { Component } from \"react\";\nimport data from \"../../data/Data\";\nimport moment from \"moment\";\nimport { Card, Avatar, Col, Icon } from \"antd\";\nconst Meta = Card.Meta;\n\nclass History extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emask_data: [],\n      count_: 0\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\").then(response => response.json()).then(data => this.setState({\n      emask_data: data\n    }));\n  }\n\n  sortData() {\n    let sortedData = this.state.emask_data.sort(function (a, b) {\n      // Compare the 2 dates\n      if (moment(a.date).isBefore(b.date)) return 1;\n      if (moment(a.date).isAfter(b.date)) return -1;\n      return 0;\n    });\n    return sortedData;\n  }\n\n  listDate() {\n    let sortedData = this.sortData(); // console.log(sortedData)\n\n    let list_date = [];\n\n    for (let i = 0; i < sortedData.length; i++) {\n      console.log(moment(sortedData[i].date).date);\n\n      if (i === 0) {\n        list_date.push(sortedData[i].day);\n      } else {\n        // console.log(i)\n        // console.log(sortedData[i].date)\n        if (!moment(sortedData[i].date).isSame(sortedData[i - 1].date)) {\n          list_date.push(sortedData[i].date);\n        }\n      }\n    }\n\n    return list_date;\n  }\n\n  render() {\n    let sortedData = this.sortData();\n    let listDate = this.listDate();\n    console.log(\"list date\");\n    console.log(listDate);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, listDate.map((item, index) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, moment(item).format(\"DD-MMMM-YYYY\"), \" \")), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), sortedData.map((item1, index1) => {\n        if (moment(item1.date).isSame(item)) {\n          return React.createElement(Card, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, React.createElement(Col, {\n            lg: 10,\n            md: 12,\n            sm: 24,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, React.createElement(Meta, {\n            avatar: React.createElement(Avatar, {\n              size: 20,\n              icon: item1.status === \"ALERTED\" ? \"alert\" : \"check\",\n              style: {\n                backgroundColor: \"green\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69\n              },\n              __self: this\n            }),\n            title: item1.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          })), React.createElement(Col, {\n            lg: 10,\n            md: 12,\n            sm: 24,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, \" \", moment(item1.date).format(\"LT\")));\n        }\n      }));\n    }));\n  }\n\n}\n\nexport default History;","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/src/pages/history/History.js"],"names":["React","Component","data","moment","Card","Avatar","Col","Icon","Meta","History","constructor","props","state","emask_data","count_","componentDidMount","fetch","then","response","json","setState","sortData","sortedData","sort","a","b","date","isBefore","isAfter","listDate","list_date","i","length","console","log","push","day","isSame","render","map","item","index","format","item1","index1","status","backgroundColor","name"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport data from \"../../data/Data\"\nimport moment from \"moment\"\nimport {Card, Avatar, Col, Icon } from \"antd\";\nconst {Meta} = Card\nclass History extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            emask_data: [], \n            count_: 0\n        }\n    }\n    componentDidMount(){\n        \n        fetch(\"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\")\n        .then(response => response.json())\n        .then(data => this.setState({emask_data:data}))\n    }\n    sortData(){\n        let sortedData = this.state.emask_data.sort(function(a, b) {\n            \n            // Compare the 2 dates\n            if (moment(a.date).isBefore(b.date)) return 1;\n            if (moment(a.date).isAfter(b.date)) return -1;\n            return 0;\n        });\n          return sortedData\n    }\n    listDate(){\n        let sortedData = this.sortData();\n        // console.log(sortedData)\n        let list_date = []\n        for (let i =0 ; i < sortedData.length; i++){\n            console.log(moment(sortedData[i].date).date)\n            if (i === 0){\n                list_date.push(sortedData[i].day)\n            }else{\n                // console.log(i)\n                // console.log(sortedData[i].date)\n                if (!moment(sortedData[i].date).isSame(sortedData[i-1].date)){\n                    list_date.push(sortedData[i].date)\n                }\n            }\n        }\n        return list_date\n    }\n    \n    render(){\n        let sortedData= this.sortData();\n        let listDate = this.listDate();\n        console.log(\"list date\")\n        console.log(listDate)\n\n        return(\n            <div>\n              {listDate.map((item, index) =>{\n                  return(\n                      <div>\n                      <h3><b>{moment(item).format((\"DD-MMMM-YYYY\"))} </b></h3>\n                      <hr></hr>\n                      {sortedData.map((item1, index1) =>{\n                          if(moment(item1.date).isSame(item) ){\n                                return(\n                                    <Card >\n                                        <Col lg={10} md={12} sm={24}>\n                                           \n                                        <Meta\n                                avatar={<Avatar size = {20} icon= {item1.status === \"ALERTED\"? \"alert\": \"check\"}  style= {{backgroundColor: \"green\" }} />}\n                                title =  {item1.name}\n                            /></Col>\n                            <Col lg={10} md={12} sm={24}> {moment(item1.date).format(\"LT\")}</Col>\n                            </Card>\n                                )\n                          }\n                      })}\n                      </div>\n                      \n                  )\n              })}  \n            </div>\n        )\n    }\n}\nexport default History"]},"metadata":{},"sourceType":"module"}