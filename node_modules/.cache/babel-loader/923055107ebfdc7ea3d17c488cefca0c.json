{"ast":null,"code":"var _jsxFileName = \"/home/victor/COVID-19-Coding-Fest/src/pages/customer/components/SupervisedTable.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Layout, Tabs, Menu, Dropdown, Table, Tag, DatePicker } from \"antd\";\nimport { withRouter } from \"react-router-dom\";\nimport moment from \"moment\";\nimport \"../style/supervisedTable.css\"; // import data from  \"../../../data/Data\"\n\nconst Content = Layout.Content;\nconst TabPane = Tabs.TabPane;\nconst column = [{\n  title: \"Name\",\n  dataIndex: \"name\",\n  key: \"name\",\n  sorted: (a, b) => a.name.length - b.name.length,\n  sortDirections: [\"descend\", \"ascend\"]\n}, {\n  title: \"Email\",\n  dataIndex: \"email\",\n  key: \"email\",\n  sorted: (a, b) => a.email.length - b.email.length,\n  sortDirections: [\"descend\", \"ascend\"]\n}, {\n  title: \"Phone\",\n  dataIndex: \"phone\",\n  key: \"phone\",\n  sorted: (a, b) => a.phone - b.phone,\n  sortDirections: [\"descend\", \"ascend\"]\n}, {\n  title: \"Status\",\n  dataIndex: \"status\",\n  key: \"status\",\n  render: status => {\n    let color = \"red\";\n\n    if (status === \"CONFIRMED\") {\n      color = \"green\";\n    } else if (status === \"ALERTED\") {\n      color = \"red\";\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Tag, {\n      color: color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, status));\n  }\n}, {\n  title: \"Date\",\n  dataIndex: \"date\",\n  key: \"date\",\n  sorted: (a, b) => moment(a.date).isAfter(b.date),\n  sortDirections: [\"descend\", \"ascend\"]\n}];\n\nclass SupervisedTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedOption: \"1\",\n      pickeddate: moment('2020/06/09', 'YYYY/MM/DD'),\n      emask_data: []\n    };\n  }\n\n  componentDidMount() {\n    localStorage.setItem('route', this.props.location.pathname);\n    fetch(\"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\").then(response => response.json()).then(data => this.setState({\n      emask_data: data\n    }));\n  }\n\n  render() {\n    const dateFormat = 'YYYY/MM/DD';\n    const employees = this.state.emask_data.filter(e => {\n      console.log(this.state.pickeddate);\n\n      if (this.state.selectedOption == '1') {\n        console.log(moment(e.date, \"YYYY/MM/DD\"));\n        return e.type === \"Employee\" && moment(e.date, \"YYYY/MM/DD\").isSame(this.state.pickeddate);\n      } else if (this.state.selectedOption === '3') {\n        return e.type === \"Employee\" && moment(e.date, \"YYYY/MM/DD\").month() === this.state.pickeddate.month() && moment(e.date, \"YYYY/MM/DD\").year() === this.state.pickeddate.year();\n      } else if (this.state.selectedOption === '2') {\n        return e.type === \"Employee\" && moment(e.date, \"YYYY/MM/DD\").month() === this.state.pickeddate.month() && moment(e.date, \"YYYY/MM/DD\").year() === this.state.pickeddate.year() && moment(e.date, \"YYYY/MM/DD\").isoWeek() === this.state.pickeddate.isoWeek();\n      }\n    });\n    const non_employees = this.state.emask_data.filter(e => {\n      return e.type === \"Non-Employee\";\n    });\n    const menu = React.createElement(Menu, {\n      mode: \"horizontal\",\n      defaultSelectedKeys: ['1'],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"1\",\n      onClick: () => {\n        this.setState({\n          selectedOption: '1'\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"All day\"), React.createElement(Menu.Item, {\n      key: \"2\",\n      onClick: () => {\n        this.setState({\n          selectedOption: '2'\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"All week\"), React.createElement(Menu.Item, {\n      key: \"3\",\n      onClick: () => {\n        this.setState({\n          selectedOption: '3'\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"All month\"));\n    return React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      key: \"1\",\n      tab: \"Employees\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"datepicker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      defaultValue: moment('2020/06/09', dateFormat),\n      format: dateFormat,\n      onChange: date => {\n        this.setState({\n          pickeddate: date\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"dateoption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, menu), React.createElement(Table, {\n      dataSource: employees,\n      columns: column,\n      scroll: {\n        x: 'calc(700px + 50%)',\n        y: 240\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(TabPane, {\n      key: \"2\",\n      tab: \"Non-Enployees\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"datepicker\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      defaultValue: moment('2020/06/09', dateFormat),\n      format: dateFormat,\n      onChange: date => {\n        this.setState({\n          pickeddate: date\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"dateoption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, menu), React.createElement(Table, {\n      dataSource: non_employees,\n      columns: column,\n      scroll: {\n        x: 'calc(700px + 50%)',\n        y: 240\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withRouter(SupervisedTable);","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/src/pages/customer/components/SupervisedTable.js"],"names":["React","Component","useState","useEffect","Layout","Tabs","Menu","Dropdown","Table","Tag","DatePicker","withRouter","moment","Content","TabPane","column","title","dataIndex","key","sorted","a","b","name","length","sortDirections","email","phone","render","status","color","date","isAfter","SupervisedTable","state","selectedOption","pickeddate","emask_data","componentDidMount","localStorage","setItem","props","location","pathname","fetch","then","response","json","data","setState","dateFormat","employees","filter","e","console","log","type","isSame","month","year","isoWeek","non_employees","menu","x","y"],"mappings":"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","sourcesContent":["import React, {Component, useState, useEffect} from 'react'\nimport { Layout, Tabs, Menu,Dropdown, Table, Tag, DatePicker} from \"antd\"\nimport {withRouter} from \"react-router-dom\"\nimport moment from \"moment\"\nimport \"../style/supervisedTable.css\"\n// import data from  \"../../../data/Data\"\nconst {Content} = Layout;\n\nconst {\n    TabPane \n  } = Tabs;\n  \n  const column = [\n      {\n        title : \"Name\", \n        dataIndex: \"name\",\n        key : \"name\", \n        \n        sorted: (a,b) => a.name.length -b.name.length,\n        sortDirections: [\"descend\", \"ascend\"]\n\n      }, \n      {\n        title : \"Email\", \n        dataIndex: \"email\",\n        key : \"email\",\n        sorted: (a,b) => a.email.length- b.email.length,\n        sortDirections: [\"descend\", \"ascend\"]\n\n      },\n      {\n        title : \"Phone\", \n        dataIndex: \"phone\",\n        key : \"phone\",\n        sorted: (a,b) => a.phone- b.phone,\n        sortDirections: [\"descend\", \"ascend\"]\n\n      },\n      {\n        title : \"Status\", \n        dataIndex: \"status\",\n        key : \"status\", \n        render: status =>{\n            let color = \"red\";\n            if (status=== \"CONFIRMED\"){\n                color = \"green\"\n            }else if (status ===\"ALERTED\"){\n                color= \"red\"\n            }\n            return (\n                <div>\n                    <Tag color = {color} >\n                        {status}\n                    </Tag>\n                </div>\n            )\n        }\n      },\n      {\n        title : \"Date\", \n        dataIndex: \"date\",\n        key : \"date\",\n        sorted: (a,b) => moment(a.date).isAfter(b.date), \n        sortDirections: [\"descend\", \"ascend\"]\n\n      },\n      \n      \n\n  ];\n  \n\nclass SupervisedTable extends Component{\n    \n   state= {\n     selectedOption: \"1\", \n     pickeddate : moment('2020/06/09', 'YYYY/MM/DD'), \n     emask_data:[]\n   }\n   \n    componentDidMount () {\n        \n        localStorage.setItem('route', this.props.location.pathname);\n        fetch(\"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\")\n        .then(response => response.json())\n        .then(data => this.setState({emask_data:data}))\n       \n      };\n    render(){\n      const dateFormat = 'YYYY/MM/DD';\n        const employees = this.state.emask_data.filter(e =>{\n          console.log(this.state.pickeddate)\n          if(this.state.selectedOption == '1'){\n            console.log(moment(e.date, \"YYYY/MM/DD\"))\n            return e.type === \"Employee\" && moment(e.date, \"YYYY/MM/DD\").isSame(this.state.pickeddate)\n          }else if (this.state.selectedOption === '3'){\n            return e.type === \"Employee\" && moment(e.date, \"YYYY/MM/DD\").month() === this.state.pickeddate.month() && moment(e.date, \"YYYY/MM/DD\").year() === this.state.pickeddate.year()\n    \n          }else if(this.state.selectedOption === '2'){\n            return e.type === \"Employee\" && moment(e.date, \"YYYY/MM/DD\").month() === this.state.pickeddate.month() && moment(e.date, \"YYYY/MM/DD\").year() === this.state.pickeddate.year() && moment(e.date, \"YYYY/MM/DD\").isoWeek() === this.state.pickeddate.isoWeek()\n    \n          }\n             \n        }\n        );\n        const non_employees = this.state.emask_data.filter(e =>{\n            return e.type === \"Non-Employee\"\n        }\n        );\n        const menu = (\n          <Menu mode = \"horizontal\" defaultSelectedKeys = {['1']}>\n            <Menu.Item key=\"1\" onClick = {() => {this.setState({selectedOption:'1'})}}>\n              All day\n            </Menu.Item>\n            <Menu.Item key=\"2\" onClick = {() => {this.setState({selectedOption:'2'})}}>\n              All week  \n            </Menu.Item>\n            \n            <Menu.Item key=\"3\"onClick = {() => {this.setState({selectedOption:'3'})}} >\n              All month\n            </Menu.Item>\n          </Menu>\n        );\n        return(\n            <Content>\n                 <Tabs defaultActiveKey = \"1\">\n                   \n                    <TabPane key = \"1\" tab = \"Employees\">\n                    <div id = \"datepicker\">\n                      <DatePicker defaultValue={moment('2020/06/09', dateFormat)} format={dateFormat} onChange={date => {this.setState({pickeddate : date})}}/>\n                    </div>\n                    <div id = \"dateoption\">\n                      \n                       {menu}\n                    \n                    </div>\n                    \n                        <Table dataSource = {employees}  columns = {column} scroll={{ x: 'calc(700px + 50%)', y: 240 }} />\n                    </TabPane>\n                    <TabPane key = \"2\" tab = \"Non-Enployees\">\n                    <div id = \"datepicker\">\n                      <DatePicker defaultValue={moment('2020/06/09', dateFormat)} format={dateFormat} onChange={date => {this.setState({pickeddate : date})}}/>\n                    </div>\n                    <div id = \"dateoption\">\n                      \n                       {menu}\n                    \n                    </div>\n                        <Table dataSource = {non_employees}  columns = {column} scroll={{ x: 'calc(700px + 50%)', y: 240 }}/>\n                    </TabPane>\n                </Tabs>\n            </Content>\n        )\n    }\n}\nexport default withRouter(SupervisedTable);"]},"metadata":{},"sourceType":"module"}