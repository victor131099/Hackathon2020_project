{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\n\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\"); // TODO(nsthorat, dsmilkov): Remove dependency on tensors, use dataId.\n\n\nexports.nonMaxSuppressionV4Config = {\n  kernelName: tfjs_1.NonMaxSuppressionV4,\n  backendName: 'tensorflow',\n  kernelFunc: function (_a) {\n    var inputs = _a.inputs,\n        backend = _a.backend,\n        attrs = _a.attrs;\n    var _b = inputs,\n        boxes = _b.boxes,\n        scores = _b.scores;\n    var _c = attrs,\n        maxOutputSize = _c.maxOutputSize,\n        iouThreshold = _c.iouThreshold,\n        scoreThreshold = _c.scoreThreshold,\n        padToMaxOutputSize = _c.padToMaxOutputSize;\n    var maxOutputSizeTensor = tfjs_1.scalar(maxOutputSize, 'int32');\n    var iouThresholdTensor = tfjs_1.scalar(iouThreshold, 'float32');\n    var scoreThresholdTensor = tfjs_1.scalar(scoreThreshold, 'float32');\n    var nodeBackend = backend;\n    var opAttrs = [nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', boxes.dtype), nodejs_kernel_backend_1.createTensorsTypeOpAttr('T_threshold', 'float32'), {\n      name: 'pad_to_max_output_size',\n      type: nodeBackend.binding.TF_ATTR_BOOL,\n      value: padToMaxOutputSize\n    }];\n\n    var _d = nodeBackend.executeMultipleOutputs('NonMaxSuppressionV4', opAttrs, [boxes, scores, maxOutputSizeTensor, iouThresholdTensor, scoreThresholdTensor], 2),\n        selectedIndices = _d[0],\n        validOutputs = _d[1];\n\n    maxOutputSizeTensor.dispose();\n    iouThresholdTensor.dispose();\n    scoreThresholdTensor.dispose();\n    return [selectedIndices, validOutputs];\n  }\n};","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/node_modules/@tensorflow/tfjs-node/dist/kernels/NonMaxSuppressionV4.js"],"names":["Object","defineProperty","exports","value","tfjs_1","require","nodejs_kernel_backend_1","nonMaxSuppressionV4Config","kernelName","NonMaxSuppressionV4","backendName","kernelFunc","_a","inputs","backend","attrs","_b","boxes","scores","_c","maxOutputSize","iouThreshold","scoreThreshold","padToMaxOutputSize","maxOutputSizeTensor","scalar","iouThresholdTensor","scoreThresholdTensor","nodeBackend","opAttrs","createTensorsTypeOpAttr","dtype","name","type","binding","TF_ATTR_BOOL","_d","executeMultipleOutputs","selectedIndices","validOutputs","dispose"],"mappings":"AAAA;AACA;;;;;;;;;;;;;;;;;AAgBAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,kBAAD,CAApB;;AACA,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,0BAAD,CAArC,C,CACA;;;AACAH,OAAO,CAACK,yBAAR,GAAoC;AAChCC,EAAAA,UAAU,EAAEJ,MAAM,CAACK,mBADa;AAEhCC,EAAAA,WAAW,EAAE,YAFmB;AAGhCC,EAAAA,UAAU,EAAE,UAAUC,EAAV,EAAc;AACtB,QAAIC,MAAM,GAAGD,EAAE,CAACC,MAAhB;AAAA,QAAwBC,OAAO,GAAGF,EAAE,CAACE,OAArC;AAAA,QAA8CC,KAAK,GAAGH,EAAE,CAACG,KAAzD;AACA,QAAIC,EAAE,GAAGH,MAAT;AAAA,QAAiBI,KAAK,GAAGD,EAAE,CAACC,KAA5B;AAAA,QAAmCC,MAAM,GAAGF,EAAE,CAACE,MAA/C;AACA,QAAIC,EAAE,GAAGJ,KAAT;AAAA,QAAgBK,aAAa,GAAGD,EAAE,CAACC,aAAnC;AAAA,QAAkDC,YAAY,GAAGF,EAAE,CAACE,YAApE;AAAA,QAAkFC,cAAc,GAAGH,EAAE,CAACG,cAAtG;AAAA,QAAsHC,kBAAkB,GAAGJ,EAAE,CAACI,kBAA9I;AACA,QAAIC,mBAAmB,GAAGpB,MAAM,CAACqB,MAAP,CAAcL,aAAd,EAA6B,OAA7B,CAA1B;AACA,QAAIM,kBAAkB,GAAGtB,MAAM,CAACqB,MAAP,CAAcJ,YAAd,EAA4B,SAA5B,CAAzB;AACA,QAAIM,oBAAoB,GAAGvB,MAAM,CAACqB,MAAP,CAAcH,cAAd,EAA8B,SAA9B,CAA3B;AACA,QAAIM,WAAW,GAAGd,OAAlB;AACA,QAAIe,OAAO,GAAG,CACVvB,uBAAuB,CAACwB,uBAAxB,CAAgD,GAAhD,EAAqDb,KAAK,CAACc,KAA3D,CADU,EAEVzB,uBAAuB,CAACwB,uBAAxB,CAAgD,aAAhD,EAA+D,SAA/D,CAFU,EAEiE;AACvEE,MAAAA,IAAI,EAAE,wBADiE;AAEvEC,MAAAA,IAAI,EAAEL,WAAW,CAACM,OAAZ,CAAoBC,YAF6C;AAGvEhC,MAAAA,KAAK,EAAEoB;AAHgE,KAFjE,CAAd;;AAQA,QAAIa,EAAE,GAAGR,WAAW,CAACS,sBAAZ,CAAmC,qBAAnC,EAA0DR,OAA1D,EAAmE,CACxEZ,KADwE,EACjEC,MADiE,EACzDM,mBADyD,EAExEE,kBAFwE,EAEpDC,oBAFoD,CAAnE,EAGN,CAHM,CAAT;AAAA,QAGOW,eAAe,GAAGF,EAAE,CAAC,CAAD,CAH3B;AAAA,QAGgCG,YAAY,GAAGH,EAAE,CAAC,CAAD,CAHjD;;AAIAZ,IAAAA,mBAAmB,CAACgB,OAApB;AACAd,IAAAA,kBAAkB,CAACc,OAAnB;AACAb,IAAAA,oBAAoB,CAACa,OAArB;AACA,WAAO,CAACF,eAAD,EAAkBC,YAAlB,CAAP;AACH;AA3B+B,CAApC","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tfjs_1 = require(\"@tensorflow/tfjs\");\nvar nodejs_kernel_backend_1 = require(\"../nodejs_kernel_backend\");\n// TODO(nsthorat, dsmilkov): Remove dependency on tensors, use dataId.\nexports.nonMaxSuppressionV4Config = {\n    kernelName: tfjs_1.NonMaxSuppressionV4,\n    backendName: 'tensorflow',\n    kernelFunc: function (_a) {\n        var inputs = _a.inputs, backend = _a.backend, attrs = _a.attrs;\n        var _b = inputs, boxes = _b.boxes, scores = _b.scores;\n        var _c = attrs, maxOutputSize = _c.maxOutputSize, iouThreshold = _c.iouThreshold, scoreThreshold = _c.scoreThreshold, padToMaxOutputSize = _c.padToMaxOutputSize;\n        var maxOutputSizeTensor = tfjs_1.scalar(maxOutputSize, 'int32');\n        var iouThresholdTensor = tfjs_1.scalar(iouThreshold, 'float32');\n        var scoreThresholdTensor = tfjs_1.scalar(scoreThreshold, 'float32');\n        var nodeBackend = backend;\n        var opAttrs = [\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T', boxes.dtype),\n            nodejs_kernel_backend_1.createTensorsTypeOpAttr('T_threshold', 'float32'), {\n                name: 'pad_to_max_output_size',\n                type: nodeBackend.binding.TF_ATTR_BOOL,\n                value: padToMaxOutputSize\n            }\n        ];\n        var _d = nodeBackend.executeMultipleOutputs('NonMaxSuppressionV4', opAttrs, [\n            boxes, scores, maxOutputSizeTensor,\n            iouThresholdTensor, scoreThresholdTensor\n        ], 2), selectedIndices = _d[0], validOutputs = _d[1];\n        maxOutputSizeTensor.dispose();\n        iouThresholdTensor.dispose();\n        scoreThresholdTensor.dispose();\n        return [selectedIndices, validOutputs];\n    }\n};\n"]},"metadata":{},"sourceType":"script"}