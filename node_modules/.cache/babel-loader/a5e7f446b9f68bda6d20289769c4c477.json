{"ast":null,"code":"var _jsxFileName = \"/home/victor/COVID-19-Coding-Fest/src/pages/scan/components/Camera.js\";\nimport React, { useState, useRef, useEffect, Fragment } from \"react\";\nimport Measure from \"react-measure\";\nimport { useUserMedia } from \"./useUserMedia\";\nimport { useCardRatio } from \"./userCardRatio\";\nimport { useOffsets } from \"./useOffSet\";\nimport { Video, Canvas, Wrapper, Container, Flash, Overlay, Button } from \"./styles\"; // import ml5 from \"ml5\"\n// import model from \"../../../data/Data\"\n\nimport { withRouter } from \"react-router-dom\"; // import { OmitProps } from \"antd/lib/transfer/renderListBody\";\n\nimport axios from \"axios\";\nimport * as cvstfjs from '@microsoft/customvision-tfjs';\nconst CAPTURE_OPTIONS = {\n  audio: false,\n  video: {\n    facingMode: \"environment\"\n  }\n};\n\nfunction Camera(props) {\n  const [model, setModel] = useState(null);\n  const [results, setResults] = useState([]);\n  const canvasRef = useRef();\n  const videoRef = useRef();\n  const [container, setContainer] = useState({\n    width: 0,\n    height: 0\n  });\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const [isCanvasEmpty, setIsCanvasEmpty] = useState(true);\n  const [isFlashing, setIsFlashing] = useState(false);\n  const [linkBlob, setLinkBlob] = useState(\"\");\n  const [emask_data, setEmaskData] = useState([]);\n  const mediaStream = useUserMedia(CAPTURE_OPTIONS);\n  const [aspectRatio, calculateRatio] = useCardRatio(1.586);\n  const [classifier, setClassifier] = useState(null);\n  const offsets = useOffsets(videoRef.current && videoRef.current.videoWidth, videoRef.current && videoRef.current.videoHeight, container.width, container.height);\n\n  function modelLoaded() {\n    console.log('Model Loaded!'); // classifier.predict(canvasRef.current, gotResult)\n  }\n\n  async function predict(url) {\n    let model = new cvstfjs.ObjectDetectionModel();\n    await model.loadModelAsync('model/model.json');\n    const result = await model.executeAsync(url);\n  }\n\n  function classify(url) {// const classifier= ml5.imageClassifier('MobileNet', modelLoaded);\n    // classifier.predict(url, (err, results) => {\n    //   if(err){\n    //     console.log(err)\n    //   }else{\n    //     console.log(results)\n    //   }\n    // });\n  }\n\n  function gotResult(error, result) {\n    if (error) {\n      console.log(error);\n    } else {\n      console.log(result);\n    }\n  }\n\n  if (mediaStream && videoRef.current && !videoRef.current.srcObject) {\n    videoRef.current.srcObject = mediaStream;\n  }\n\n  function handleResize(contentRect) {\n    setContainer({\n      width: contentRect.bounds.width,\n      height: Math.round(contentRect.bounds.width / aspectRatio)\n    });\n  }\n\n  function handleCanPlay() {\n    calculateRatio(videoRef.current.videoHeight, videoRef.current.videoWidth);\n    setIsVideoPlaying(true);\n    videoRef.current.play();\n  }\n\n  function handleCapture() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.drawImage(videoRef.current, offsets.x, offsets.y, container.width, container.height, 0, 0, container.width, container.height);\n    var link = document.createElement(\"a\");\n    link.download = \"image.png\"; // predict(canvasRef.current)\n\n    canvasRef.current.toBlob(function (blob) {\n      {\n        link.href = URL.createObjectURL(blob);\n        console.log(blob);\n        setLinkBlob(link.href); // load(link.href);\n        // setInterval(identify(link.href), 3000)\n        // const emask = document.getElementById('emask');\n        // console.log(model)\n        // model.execute(tf.browser.fromPixels(emask));\n        // console.log(link.href); // this line should be here\n      }\n    }, \"image/png\", 1); // setIsCanvasEmpty(false);\n\n    setIsFlashing(true); // setIsVideoPlaying(false)\n  }\n\n  function handleClear() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setIsCanvasEmpty(false); // setIsFlashing(false)\n    // onClear();\n  }\n\n  useEffect(() => {\n    // console.log(props.history.location.state)\n    setTimeout(() => {\n      if (isVideoPlaying) {\n        if (isCanvasEmpty) {\n          handleCapture();\n          handleClear(); // load();\n          // axios.post(\n          // \"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\",\n          // {\n          //   key5: `${props.history.location.state.date}`,\n          // key2: `${props.history.location.state.address}`,\n          // key3: `${props.history.location.state.email}`,\n          // key4: `${props.history.location.state.isMapOpen}`,\n          // key1: `${props.history.location.state.key}`,\n          // key6: `${props.history.location.state.name}`,\n          // key7: `${props.history.location.state.phone}`,\n          // key8: `${props.history.location.state.status}`,\n          // key9: `${props.history.location.state.type}`\n          // }).then(res =>{console.log(res)})\n        }\n      }\n    }, 5000);\n  });\n\n  function onclick() {\n    if (localStorage.getItem(\"count_data\")) {\n      const count = parseInt(localStorage.getItem(\"count_data\"));\n      localStorage.setItem(\"count_data\", count + 1);\n    } else {\n      localStorage.setItem(\"count_data\", 1);\n    }\n\n    console.log(props.history.location.state.status);\n    console.log(props.history.location.state.phone);\n\n    if (props.history.location.state.status === \"ALERTED\") {\n      axios.post(\"https://f0mrzhjnf1.execute-api.ap-southeast-2.amazonaws.com/stage\", {\n        message: \"U should wear the meask immediately\",\n        phoneNumber: `${props.history.location.state.phone}`\n      });\n    }\n\n    props.history.push(\"/\"); // window.location.reload(false);\n  }\n\n  if (!mediaStream) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Measure, {\n    bounds: true,\n    onResize: handleResize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 5\n    }\n  }, ({\n    measureRef\n  }) => /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    ref: measureRef,\n    maxHeight: videoRef.current && videoRef.current.videoHeight,\n    maxWidth: videoRef.current && videoRef.current.videoWidth,\n    style: {\n      height: `${container.height}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Video, {\n    ref: videoRef,\n    hidden: !isVideoPlaying,\n    onCanPlay: handleCanPlay,\n    autoPlay: true,\n    playsInline: true,\n    muted: true,\n    style: {\n      top: `-${offsets.y}px`,\n      left: `-${offsets.x}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Overlay, {\n    hidden: !isVideoPlaying,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Canvas, {\n    ref: canvasRef,\n    width: container.width,\n    height: container.height,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Flash, {\n    flash: isFlashing,\n    onAnimationEnd: () => setIsFlashing(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 13\n    }\n  })), !isCanvasEmpty && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, \"Preview\"), /*#__PURE__*/React.createElement(\"img\", {\n    id: \"emask\",\n    src: linkBlob,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: onclick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, \" Go Back \")))));\n}\n\nexport default withRouter(Camera);","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/src/pages/scan/components/Camera.js"],"names":["React","useState","useRef","useEffect","Fragment","Measure","useUserMedia","useCardRatio","useOffsets","Video","Canvas","Wrapper","Container","Flash","Overlay","Button","withRouter","axios","cvstfjs","CAPTURE_OPTIONS","audio","video","facingMode","Camera","props","model","setModel","results","setResults","canvasRef","videoRef","container","setContainer","width","height","isVideoPlaying","setIsVideoPlaying","isCanvasEmpty","setIsCanvasEmpty","isFlashing","setIsFlashing","linkBlob","setLinkBlob","emask_data","setEmaskData","mediaStream","aspectRatio","calculateRatio","classifier","setClassifier","offsets","current","videoWidth","videoHeight","modelLoaded","console","log","predict","url","ObjectDetectionModel","loadModelAsync","result","executeAsync","classify","gotResult","error","srcObject","handleResize","contentRect","bounds","Math","round","handleCanPlay","play","handleCapture","context","getContext","drawImage","x","y","link","document","createElement","download","toBlob","blob","href","URL","createObjectURL","handleClear","clearRect","setTimeout","onclick","localStorage","getItem","count","parseInt","setItem","history","location","state","status","phone","post","message","phoneNumber","push","measureRef","top","left","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect, Fragment } from \"react\";\nimport Measure from \"react-measure\";\nimport { useUserMedia } from \"./useUserMedia\";\nimport { useCardRatio } from \"./userCardRatio\";\nimport { useOffsets } from \"./useOffSet\";\nimport {\n  Video,\n  Canvas,\n  Wrapper,\n  Container,\n  Flash,\n  Overlay,\n  Button\n} from \"./styles\";\n// import ml5 from \"ml5\"\n// import model from \"../../../data/Data\"\n\nimport { withRouter } from \"react-router-dom\";\n// import { OmitProps } from \"antd/lib/transfer/renderListBody\";\nimport axios from \"axios\"\nimport * as cvstfjs from '@microsoft/customvision-tfjs';\nconst CAPTURE_OPTIONS = {\n  audio: false,\n  video: { facingMode: \"environment\" }\n};\n\nfunction Camera(props) {\n  const [model, setModel] = useState(null)\n  const [results, setResults] = useState([])\n  const canvasRef = useRef();\n  const videoRef = useRef();\n\n  const [container, setContainer] = useState({ width: 0, height: 0 });\n  const [isVideoPlaying, setIsVideoPlaying] = useState(false);\n  const [isCanvasEmpty, setIsCanvasEmpty] = useState(true);\n  const [isFlashing, setIsFlashing] = useState(false);\n  const [linkBlob, setLinkBlob] = useState(\"\");\n  const [emask_data, setEmaskData] = useState([])\n  const mediaStream = useUserMedia(CAPTURE_OPTIONS);\n  const [aspectRatio, calculateRatio] = useCardRatio(1.586);\n  const [classifier, setClassifier] = useState(null);\n  const offsets = useOffsets(videoRef.current && videoRef.current.videoWidth,videoRef.current && videoRef.current.videoHeight,container.width,container.height);\n  function modelLoaded() {\n    console.log('Model Loaded!');\n    // classifier.predict(canvasRef.current, gotResult)\n  }\n  async function predict(url){\n\nlet model = new cvstfjs.ObjectDetectionModel();\nawait model.loadModelAsync('model/model.json');\n\nconst result = await model.executeAsync(url);\n  }\n  function classify(url)   {\n    // const classifier= ml5.imageClassifier('MobileNet', modelLoaded);\n    // classifier.predict(url, (err, results) => {\n    //   if(err){\n    //     console.log(err)\n    //   }else{\n    //     console.log(results)\n    //   }\n    // });\n  }\n  function gotResult(error, result){\n    if(error){\n      console.log(error)\n    }else{\n      console.log(result)\n    }\n  }\n\n   \n  \n   \n  if (mediaStream && videoRef.current && !videoRef.current.srcObject) {\n    videoRef.current.srcObject = mediaStream;\n  }\n \n  \n  function handleResize(contentRect) {\n    setContainer({\n      width: contentRect.bounds.width,\n      height: Math.round(contentRect.bounds.width / aspectRatio)\n    });\n  }\n\n  function handleCanPlay() {\n    calculateRatio(videoRef.current.videoHeight, videoRef.current.videoWidth);\n    setIsVideoPlaying(true);\n    videoRef.current.play();\n  }\n\n  function handleCapture() {\n    const context = canvasRef.current.getContext(\"2d\");\n   \n    context.drawImage(\n      videoRef.current,\n      offsets.x,\n      offsets.y,\n      container.width,\n      container.height,\n      0,\n      0,\n      container.width,\n      container.height\n    );\n    var link = document.createElement(\"a\");\n  link.download = \"image.png\";\n  // predict(canvasRef.current)\n    canvasRef.current.toBlob(function(blob){{\n        link.href = URL.createObjectURL(blob);\n        console.log(blob);\n        setLinkBlob(link.href);\n        // load(link.href);\n        // setInterval(identify(link.href), 3000)\n        \n        \n        // const emask = document.getElementById('emask');\n        // console.log(model)\n        // model.execute(tf.browser.fromPixels(emask));\n        // console.log(link.href); // this line should be here\n      }}, \"image/png\", 1);\n    // setIsCanvasEmpty(false);\n    setIsFlashing(true);\n    // setIsVideoPlaying(false)\n  }\n\n  function handleClear() {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n    setIsCanvasEmpty(false);\n    // setIsFlashing(false)\n    // onClear();\n  }\n  useEffect(() => { \n    // console.log(props.history.location.state)\n    \n\n    \n    \n    setTimeout(() => { if (isVideoPlaying){\n      if(isCanvasEmpty){\n        handleCapture();\n        handleClear();\n        // load();\n        \n        // axios.post(\n          // \"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\",\n          // {\n          //   key5: `${props.history.location.state.date}`,\n          // key2: `${props.history.location.state.address}`,\n          // key3: `${props.history.location.state.email}`,\n          // key4: `${props.history.location.state.isMapOpen}`,\n          // key1: `${props.history.location.state.key}`,\n          // key6: `${props.history.location.state.name}`,\n          // key7: `${props.history.location.state.phone}`,\n          // key8: `${props.history.location.state.status}`,\n          // key9: `${props.history.location.state.type}`\n          // }).then(res =>{console.log(res)})\n        \n      }\n      \n      \n      \n     \n    }}, 5000)\n      \n    }\n  );\n  function onclick(){\n    if (localStorage.getItem(\"count_data\")){\n      const count= parseInt( localStorage.getItem(\"count_data\"))\n      localStorage.setItem(\"count_data\", count+1)\n    }else{\n      localStorage.setItem(\"count_data\", 1)\n    }\n    console.log(props.history.location.state.status)\n    console.log(props.history.location.state.phone)\n    if (props.history.location.state.status === \"ALERTED\"){\n\n      axios.post(\"https://f0mrzhjnf1.execute-api.ap-southeast-2.amazonaws.com/stage\", {\n        message:\"U should wear the meask immediately\",\n        phoneNumber: `${props.history.location.state.phone}`\n      })\n    }\n    props.history.push(\"/\");\n    // window.location.reload(false);\n    \n  }\n\n\n\n  if (!mediaStream) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n    <Measure bounds onResize={handleResize}>\n      {({ measureRef }) => (\n        <Wrapper>\n          <Container\n            ref={measureRef}\n            maxHeight={videoRef.current && videoRef.current.videoHeight}\n            maxWidth={videoRef.current && videoRef.current.videoWidth}\n            style={{\n              height: `${container.height}px`\n            }}\n          >\n            <Video\n              ref={videoRef}\n              hidden={!isVideoPlaying}\n              onCanPlay={handleCanPlay}\n              autoPlay\n              playsInline\n              muted\n              style={{\n                top: `-${offsets.y}px`,\n                left: `-${offsets.x}px`\n              }}\n            />\n\n            <Overlay hidden={!isVideoPlaying} />\n\n            <Canvas\n              ref={canvasRef}\n              width={container.width}\n              height={container.height}\n            />\n\n            <Flash\n              flash={isFlashing}\n              onAnimationEnd={() => setIsFlashing(false)}\n            />\n          </Container>\n\n         \n          {!isCanvasEmpty && \n            <Fragment>\n            <div>\n            <h2 style= {{textAlign:\"center\"}}>Preview</h2>\n            <img id = \"emask\" src = {linkBlob}/>\n            </div>\n            <Button onClick= {onclick} > Go Back </Button>\n            </Fragment>\n          }\n          \n\n        </Wrapper>\n      )}\n    </Measure>\n    \n    </Fragment>\n  );\n}\nexport default withRouter(Camera)"]},"metadata":{},"sourceType":"module"}