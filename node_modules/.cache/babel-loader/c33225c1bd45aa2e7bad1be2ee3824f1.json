{"ast":null,"code":"import { getCoordsDataType } from './shader_compiler';\nexport class CumSumProgram {\n  constructor(shape, exclusive, reverse) {\n    this.variableNames = ['x'];\n    this.outputShape = shape;\n    const rank = shape.length;\n    const val = exclusive ? '0.0' : \"getX(\".concat(getCoords(rank, 'coords'), \")\");\n    const length = shape[shape.length - 1];\n    let condition = '';\n    let idxString = ''; // When exclusive is set, the cumsum op becomes roll op that copies the\n    // value from the previous index based on the direction specified by the\n    // reverse flag.\n\n    if (exclusive) {\n      condition = reverse ? \"end != \".concat(length - 1) : 'end != 0';\n      idxString = reverse ? 'end + 1' : 'end - 1';\n    } else {\n      condition = reverse ? \"end + pow2 < \".concat(length) : 'end >= pow2';\n      idxString = reverse ? 'end + pow2' : 'end - pow2';\n    }\n\n    this.userCode = \"\\n      uniform float index;\\n      void main() {\\n        \".concat(getCoordsDataType(rank), \" coords = getOutputCoords();\\n        int end = \").concat(getFinalCoord(rank, 'coords'), \";\\n        float val = \").concat(val, \";\\n        int pow2 = int(pow(2.0, index));\\n        if (\").concat(condition, \") {\\n          int idx = \").concat(idxString, \";\\n          \").concat(getFinalCoord(rank, 'coords'), \" = idx;\\n          val += getX(\").concat(getCoords(rank, 'coords'), \");\\n        }\\n        setOutput(val);\\n      }\\n    \");\n  }\n\n  getCustomSetupFunc(index) {\n    return (gpgpu, webGLProgram) => {\n      if (this.index == null) {\n        this.index = gpgpu.getUniformLocation(webGLProgram, 'index');\n      }\n\n      gpgpu.gl.uniform1f(this.index, index);\n    };\n  }\n\n}\n\nfunction getCoords(rank, name) {\n  if (rank === 1) {\n    return \"\".concat(name);\n  } else if (rank === 2) {\n    return \"\".concat(name, \".x, \").concat(name, \".y\");\n  } else if (rank === 3) {\n    return \"\".concat(name, \".x, \").concat(name, \".y, \").concat(name, \".z\");\n  } else if (rank === 4) {\n    return \"\".concat(name, \".x, \").concat(name, \".y, \").concat(name, \".z, \").concat(name, \".w\");\n  } else {\n    throw Error(\"Cumulative sum for rank \".concat(rank, \" is not yet supported\"));\n  }\n}\n\nfunction getFinalCoord(rank, name) {\n  if (rank === 1) {\n    return \"\".concat(name);\n  } else if (rank === 2) {\n    return \"\".concat(name, \".y\");\n  } else if (rank === 3) {\n    return \"\".concat(name, \".z\");\n  } else if (rank === 4) {\n    return \"\".concat(name, \".w\");\n  } else {\n    throw Error(\"Cumulative sum for rank \".concat(rank, \" is not yet supported\"));\n  }\n}","map":null,"metadata":{},"sourceType":"module"}