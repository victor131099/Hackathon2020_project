{"ast":null,"code":"var _jsxFileName = \"/home/victor/COVID-19-Coding-Fest/src/pages/home/components/AutoComplete.js\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Icon, Input, Button } from \"antd\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Autocomplete extends Component {\n  render() {\n    // const {\n    //   onChange,\n    //   onClick,\n    //   onKeyDown,\n    // //   state: {\n    // //     activeSuggestion,\n    // //     filteredSuggestions,\n    // //     showSuggestions,\n    // //     userInput\n    // //   }\n    // } = this;\n    let suggestionsListComponent;\n\n    if (this.props.showSuggestions == true && this.props.userInput != \"\") {\n      if (this.props.filteredSuggestions.length) {\n        suggestionsListComponent = //   <ul class=\"suggestions\">\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, this.props.filteredSuggestions.map((suggestion, index) => {\n          let className; // Flag the active suggestion with a class\n\n          if (index === this.props.activeSuggestion) {\n            className = \"suggestion-active\";\n          }\n\n          return React.createElement(\"div\", {\n            className: className,\n            key: suggestion.name,\n            onClick: this.props.onClick,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, React.createElement(Icon, {\n            type: \"search\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }), \" \" + suggestion.name + \"-\" + suggestion.type);\n        }));\n      } else {\n        suggestionsListComponent = React.createElement(\"div\", {\n          className: \"no-suggestions\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Not Found\"));\n      }\n    }\n\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Search person\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), suggestionsListComponent);\n  }\n\n}\n\nexport default withRouter(Autocomplete);","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/src/pages/home/components/AutoComplete.js"],"names":["React","Component","Fragment","PropTypes","Icon","Input","Button","withRouter","Autocomplete","render","suggestionsListComponent","props","showSuggestions","userInput","filteredSuggestions","length","map","suggestion","index","className","activeSuggestion","name","onClick","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AACA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AAGnCQ,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAIC,wBAAJ;;AAEA,QAAI,KAAKC,KAAL,CAAWC,eAAX,IAA6B,IAA7B,IAAqC,KAAKD,KAAL,CAAWE,SAAX,IAAwB,EAAjE,EAAqE;AACnE,UAAI,KAAKF,KAAL,CAAWG,mBAAX,CAA+BC,MAAnC,EAA2C;AACzCL,QAAAA,wBAAwB,GACxB;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,KAAKC,KAAL,CAAWG,mBAAX,CAA+BE,GAA/B,CAAmC,CAACC,UAAD,EAAaC,KAAb,KAAuB;AACzD,cAAIC,SAAJ,CADyD,CAGzD;;AACA,cAAID,KAAK,KAAK,KAAKP,KAAL,CAAWS,gBAAzB,EAA2C;AACzCD,YAAAA,SAAS,GAAG,mBAAZ;AACD;;AAED,iBAEE;AAAK,YAAA,SAAS,EAAEA,SAAhB;AACA,YAAA,GAAG,EAAIF,UAAU,CAACI,IADlB;AAGA,YAAA,OAAO,EAAE,KAAKV,KAAL,CAAWW,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIA,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAG,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA,EAMC,MAAKL,UAAU,CAACI,IAAhB,GAAsB,GAAtB,GAA2BJ,UAAU,CAACM,IANvC,CAFF;AAcD,SAtBA,CADL,CAFA;AA4BD,OA7BD,MA6BO;AACLb,QAAAA,wBAAwB,GACtB;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF;AAKD;AACF;;AAED,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,MADP;AAIE,MAAA,WAAW,EAAE,eAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWGA,wBAXH,CADF;AAgBD;;AAzEkC;;AA4ErC,eAAeH,UAAU,CAACC,YAAD,CAAzB","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Icon, Input, Button} from \"antd\"\nimport {withRouter} from \"react-router-dom\"\nclass Autocomplete extends Component {\n  \n\n  render() {\n    // const {\n    //   onChange,\n    //   onClick,\n    //   onKeyDown,\n    // //   state: {\n    // //     activeSuggestion,\n    // //     filteredSuggestions,\n    // //     showSuggestions,\n    // //     userInput\n    // //   }\n    // } = this;\n\n    let suggestionsListComponent;\n\n    if (this.props.showSuggestions== true && this.props.userInput != \"\") {\n      if (this.props.filteredSuggestions.length) {\n        suggestionsListComponent = (\n        //   <ul class=\"suggestions\">\n        <div>\n            {this.props.filteredSuggestions.map((suggestion, index) => {\n              let className;\n\n              // Flag the active suggestion with a class\n              if (index === this.props.activeSuggestion) {\n                className = \"suggestion-active\";\n              }\n\n              return (\n                \n                <div className={className}\n                key = {suggestion.name}\n           \n                onClick={this.props.onClick}>\n                <Icon type = \"search\"/>\n                \n                {\" \"+ suggestion.name +\"-\" +suggestion.type}\n                </div>\n                \n                  \n                \n              );\n            })}\n        </div>\n        );\n      } else {\n        suggestionsListComponent = (\n          <div className=\"no-suggestions\">\n            <em>Not Found</em>\n          </div>\n        );\n      }\n    }\n\n    return (\n      <Fragment>\n       \n        <Input\n          type=\"text\"\n          \n          \n          placeholder= \"Search person\"\n        />\n        \n       \n       \n        {suggestionsListComponent}\n        \n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(Autocomplete);\n"]},"metadata":{},"sourceType":"module"}