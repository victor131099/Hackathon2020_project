{"ast":null,"code":"import _toConsumableArray from\"/home/victor/COVID-19-Coding-Fest/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/home/victor/COVID-19-Coding-Fest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/victor/COVID-19-Coding-Fest/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/victor/COVID-19-Coding-Fest/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/victor/COVID-19-Coding-Fest/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/victor/COVID-19-Coding-Fest/node_modules/@babel/runtime/helpers/esm/inherits\";import{withScriptjs,withGoogleMap,GoogleMap,Marker,InfoWindow,Circle}from\"react-google-maps\";import Geocode from\"react-geocode\";import React,{Component,Fragment}from\"react\";import{compose,withProps,withStateHandlers}from\"recompose\";import{getDistance}from'geolib';import data from\"../../../data/Data\";var PeopleMap=/*#__PURE__*/function(_Component){_inherits(PeopleMap,_Component);function PeopleMap(props){var _this;_classCallCheck(this,PeopleMap);_this=_possibleConstructorReturn(this,_getPrototypeOf(PeopleMap).call(this,props));_this.state={userInput:\"\",location_data:[],openToogleList:Array(data.length).fill(true),defaultMapSize:{lat:-33.797,lng:151.1},windowSize:10};return _this;}_createClass(PeopleMap,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;Geocode.setApiKey(\"AIzaSyAOOgr6Eg-N_Pi3Ic5mNo1EybmjAH3w1D0\");// set response language. Defaults to english.\nGeocode.setLanguage(\"en\");// set response region. Its optional.\n// A Geocoding request with region=es (Spain) will return the Spanish city.\nGeocode.setRegion(\"aus\");Geocode.enableDebug();// Get latidude & longitude from address.\nfor(var i=0;i<data.length;i++){Geocode.fromAddress(data[i].address).then(function(response){var _response$results$0$g=response.results[0].geometry.location,lat=_response$results$0$g.lat,lng=_response$results$0$g.lng;_this2.setState({location_data:[].concat(_toConsumableArray(_this2.state.location_data),[{lat:lat,lng:lng}])});console.log(lat);console.log(lng);},function(error){console.error(error);});}// if (this.props.clickable ===true){\n//   console.log(\"hello\")\n//   for (var i =0; i < this.state.location_data.length; i++){\n//     if(data[i].name === this.props.clickedInput.replace(/\\s/g, '')){\n//       console.log('world')\n//       // let item =this.state.location_data[i]\n//       // let copyDefaultMapSize= {...this.state.defaultMapSize};\n//       // copyDefaultMapSize.lat= parseFloat(item.lat);\n//       // copyDefaultMapSize.lng = parseFloat(item.lng) ;\n//       this.setState({\n//         // defaultMapSize: copyDefaultMapSize,\n//         windowSize:20\n//       })\n//       break;\n//     }\n//   // }\n//   }\n// }\n}// componentDidUpdate(previousProps, previousState){\n//   // if (this.state.defaultCenter !== previousState.defaultCenter && this.state.windowSize !== previousState.windowSize){\n//     if (this.props.clickable ===true){\n//       console.log(\"hello\")\n//       for (var i =0; i < this.state.location_data.length; i++){\n//         if(data[i].name === this.props.clickedInput.replace(/\\s/g, '')){\n//           console.log('world')\n//           // let item =this.state.location_data[i]\n//           // let copyDefaultMapSize= {...this.state.defaultMapSize};\n//           // copyDefaultMapSize.lat= parseFloat(item.lat);\n//           // copyDefaultMapSize.lng = parseFloat(item.lng) ;\n//           this.setState({\n//             // defaultMapSize: copyDefaultMapSize,\n//             windowSize:20\n//           })\n//           break;\n//         }\n//       // }\n//     }\n//   }\n// }\n// changeMapSize(item){\n// }\n},{key:\"onOpen\",value:function onOpen(index){var newToogleList=_toConsumableArray(this.state.openToogleList);newToogleList[index]=!newToogleList[index];this.setState({openToogleList:newToogleList});}},{key:\"getIndexPerson\",value:function getIndexPerson(){for(var i=0;i<data.length;i++){if(data[i].name===this.props.clickedInput.replace(/\\s/g,'')){// console.log(this.state.clickedInput)\nreturn i;}}}},{key:\"getLocation\",value:function getLocation(item){var list_location=[];for(var i=0;i<this.state.location_data.length;i++){if(getDistance(this.state.location_data[i],item)<1000&&item!==this.state.location_data[i]){var coord=this.state.location_data[i];coord.name=data[i].name;coord.address=data[i].address;console.log(data[i].name);// console.log(getDistance(this.state.location_data[i],item))\nlist_location.push(coord);}}return list_location;}},{key:\"centerChange\",value:function centerChange(){if(this.props.clickable===true){var index=this.getIndexPerson();this.setState({defaultMapSize:this.state.location_data[index]});}}},{key:\"render\",value:function render(){var _this3=this;return React.createElement(GoogleMap,{zoom:this.props.windowSize,onCenterChanged:function onCenterChanged(){_this3.centerChange();},onZoomChanged:function onZoomChanged(){_this3.zoomChange();},center:this.state.defaultMapSize},this.state.location_data.map(function(item,index){if(_this3.props.clickable===true){if(data[index].name==_this3.props.clickedInput.replace(/\\s/g,'')){var list_location=_this3.getLocation(item);return React.createElement(\"div\",null,list_location.map(function(item1,index1){// console.log(data[index1].address)\nreturn React.createElement(Marker,{position:{lat:parseFloat(item1.lat),lng:parseFloat(item1.lng)},key:index1,onClick:function onClick(){return _this3.onOpen(index1);}},_this3.state.openToogleList[index1]&&React.createElement(Fragment,null,React.createElement(InfoWindow,{onCloseClick:function onCloseClick(){return _this3.onOpen(index1);}},React.createElement(\"div\",null,React.createElement(\"h3\",null,\"Name: \",item1.name),React.createElement(\"h3\",null,\"Address: \",item1.address)))));}),React.createElement(Marker,{position:{lat:parseFloat(item.lat),lng:parseFloat(item.lng)},key:index,onClick:function onClick(){return _this3.onOpen(index);}},_this3.state.openToogleList[index]&&React.createElement(Fragment,null,React.createElement(InfoWindow,{onCloseClick:function onCloseClick(){return _this3.onOpen(index);}},React.createElement(\"div\",null,React.createElement(\"h3\",{style:{color:\"red\"}},React.createElement(\"b\",null,\" Name: \",data[index].name)),React.createElement(\"h3\",{style:{color:\"red\"}},React.createElement(\"b\",null,\" Address: \",data[index].address)))),React.createElement(Circle,{radius:1000,center:{lat:parseFloat(item.lat),lng:parseFloat(item.lng)}}))));}}}));}}]);return PeopleMap;}(Component);var MapContainer=compose(withScriptjs,withGoogleMap)(PeopleMap);export default MapContainer;//   <MapWithAMarker\n//     googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC4R6AN7SmujjPUIGKdyao2Kqitzr1kiRg&v=3.exp&libraries=geometry,drawing,places\"\n//     loadingElement={<div style={{ height: `100%` }} />}\n//     containerElement={<div style={{ height: `400px` }} />}\n//     mapElement={<div style={{ height: `100%` }} />}\n//   />","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/src/pages/home/components/MapContainer.js"],"names":["withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","Circle","Geocode","React","Component","Fragment","compose","withProps","withStateHandlers","getDistance","data","PeopleMap","props","state","userInput","location_data","openToogleList","Array","length","fill","defaultMapSize","lat","lng","windowSize","setApiKey","setLanguage","setRegion","enableDebug","i","fromAddress","address","then","response","results","geometry","location","setState","console","log","error","index","newToogleList","name","clickedInput","replace","item","list_location","coord","push","clickable","getIndexPerson","centerChange","zoomChange","map","getLocation","item1","index1","parseFloat","onOpen","color","MapContainer"],"mappings":"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","sourcesContent":["import {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    Marker,\n    InfoWindow, \n    Circle\n  } from \"react-google-maps\";\nimport Geocode from \"react-geocode\";\nimport React, {Component, Fragment} from \"react\"\nimport { compose, withProps, withStateHandlers } from \"recompose\"\nimport { getDistance } from 'geolib';\nimport data from \"../../../data/Data\";\n\n  class PeopleMap extends Component{\n    constructor(props){\n      super(props);\n      this.state = {\n        userInput: \"\",\n        location_data: [],\n        openToogleList: Array(data.length).fill(true), \n        defaultMapSize: { lat: -33.797, lng: 151.1 }, \n        windowSize:10\n        \n      }\n    }\n    componentDidMount(){\n     \n      \n      Geocode.setApiKey(\"AIzaSyAOOgr6Eg-N_Pi3Ic5mNo1EybmjAH3w1D0\");\n \n      // set response language. Defaults to english.\n      Geocode.setLanguage(\"en\");\n      \n      // set response region. Its optional.\n      // A Geocoding request with region=es (Spain) will return the Spanish city.\n      Geocode.setRegion(\"aus\");\n      Geocode.enableDebug();\n      \n      \n      \n      // Get latidude & longitude from address.\n      \n      for (var i=0; i< data.length; i++){\n        \n        Geocode.fromAddress(data[i].address).then(\n          response => {\n            const { lat, lng } = response.results[0].geometry.location;\n            this.setState({\n              location_data: [...this.state.location_data, { lat,lng}]\n            })\n            console.log(lat)\n            console.log(lng)\n            \n\n          },\n          error => {\n            console.error(error);\n          }\n        );\n        \n      }\n            \n      // if (this.props.clickable ===true){\n      //   console.log(\"hello\")\n      //   for (var i =0; i < this.state.location_data.length; i++){\n      //     if(data[i].name === this.props.clickedInput.replace(/\\s/g, '')){\n      //       console.log('world')\n      //       // let item =this.state.location_data[i]\n      //       // let copyDefaultMapSize= {...this.state.defaultMapSize};\n      //       // copyDefaultMapSize.lat= parseFloat(item.lat);\n      //       // copyDefaultMapSize.lng = parseFloat(item.lng) ;\n      //       this.setState({\n      //         // defaultMapSize: copyDefaultMapSize,\n      //         windowSize:20\n      //       })\n      //       break;\n      //     }\n      //   // }\n        \n      //   }\n      // }\n      \n     \n    }\n    // componentDidUpdate(previousProps, previousState){\n    //   // if (this.state.defaultCenter !== previousState.defaultCenter && this.state.windowSize !== previousState.windowSize){\n    //     if (this.props.clickable ===true){\n    //       console.log(\"hello\")\n    //       for (var i =0; i < this.state.location_data.length; i++){\n    //         if(data[i].name === this.props.clickedInput.replace(/\\s/g, '')){\n    //           console.log('world')\n    //           // let item =this.state.location_data[i]\n    //           // let copyDefaultMapSize= {...this.state.defaultMapSize};\n    //           // copyDefaultMapSize.lat= parseFloat(item.lat);\n    //           // copyDefaultMapSize.lng = parseFloat(item.lng) ;\n    //           this.setState({\n    //             // defaultMapSize: copyDefaultMapSize,\n    //             windowSize:20\n    //           })\n    //           break;\n    //         }\n    //       // }\n          \n    //     }\n    //   }\n    // }\n    // changeMapSize(item){\n      \n      \n    // }\n    \n    onOpen(index){\n      let newToogleList = [...this.state.openToogleList];\n      newToogleList[index] = ! newToogleList[index];\n\n      this.setState({\n        openToogleList: newToogleList\n      }\n      )\n    }\n    getIndexPerson(){\n      \n      for(var i =0; i< data.length; i++){\n        if(data[i].name===this.props.clickedInput.replace(/\\s/g, '')){\n\n          // console.log(this.state.clickedInput)\n          return i;\n        }\n      }\n    }\n    getLocation(item){\n      var list_location= []\n      for (var i = 0 ; i < this.state.location_data.length; i++){\n        if(getDistance(this.state.location_data[i], item)< 1000 && item !== this.state.location_data[i]   ){\n          var coord = this.state.location_data[i];\n          coord.name= data[i].name\n          coord.address= data[i].address\n          console.log(data[i].name)\n\n          // console.log(getDistance(this.state.location_data[i],item))\n          list_location.push(coord)\n          \n          \n        }\n      }\n      return list_location\n    }\n    centerChange(){\n      \n      if(this.props.clickable === true){\n        \n        var index = this.getIndexPerson()\n        this.setState({defaultMapSize:this.state.location_data[index]});\n      }\n    }\n    \n    \n    render(){\n   \n      return(\n        <GoogleMap\n    zoom={this.props.windowSize}\n      onCenterChanged = {() =>{this.centerChange()}}\n      onZoomChanged= {()=> {this.zoomChange()}}\n      center={this.state.defaultMapSize}\n    >\n      \n      {this.state.location_data.map((item, index)=>{\n        if (this.props.clickable === true){\n          \n          if (data[index].name == this.props.clickedInput.replace(/\\s/g, '')){\n            var list_location= this.getLocation(item)\n            \n            return(\n              <div>\n              {list_location.map((item1,index1) =>{\n                // console.log(data[index1].address)\n                return(\n                <Marker\n            position={{lat : parseFloat(item1.lat), lng: parseFloat(item1.lng) }}\n            key = {index1}\n            onClick={() => this.onOpen(index1) }\n              >\n            {this.state.openToogleList[index1] &&\n              <Fragment>\n              <InfoWindow onCloseClick={()=> this.onOpen(index1)}>\n                <div>\n                <h3>Name: {item1.name}</h3>\n                <h3>Address: {item1.address}</h3>\n                </div>\n                {/* <Person name = {item1.name} /> */}\n              </InfoWindow>\n              \n            </Fragment> \n          \n            }\n            \n              </Marker>\n\n              )})}\n              <Marker\n            position={{lat : parseFloat(item.lat), lng: parseFloat(item.lng) }}\n            key = {index}\n            onClick={() => this.onOpen(index) }\n              >\n            {this.state.openToogleList[index] &&\n              <Fragment>\n              <InfoWindow onCloseClick={()=> this.onOpen(index)}>\n                <div>\n                <h3 style= {{color: \"red\"}}><b> Name: {data[index].name}</b></h3>\n                {/* <h3>{this.props.clickedInput}</h3> */}\n                <h3 style= {{color: \"red\"}}><b> Address: {data[index].address}</b></h3>\n                </div>\n              </InfoWindow>\n              <Circle\n              radius= {1000}\n              center= {{lat : parseFloat(item.lat), lng: parseFloat(item.lng) }}\n              />\n              \n            </Fragment> \n          \n            }\n            \n              </Marker>\n            </div>\n           \n            \n      \n      \n              \n          )\n    }}})}\n      \n    </GoogleMap>\n      )\n    }\n  }\n  const MapContainer =compose(\n    withScriptjs,\n    withGoogleMap\n  )(PeopleMap);\n  \n  export default MapContainer\n  \n//   <MapWithAMarker\n//     googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyC4R6AN7SmujjPUIGKdyao2Kqitzr1kiRg&v=3.exp&libraries=geometry,drawing,places\"\n//     loadingElement={<div style={{ height: `100%` }} />}\n//     containerElement={<div style={{ height: `400px` }} />}\n//     mapElement={<div style={{ height: `100%` }} />}\n//   />"]},"metadata":{},"sourceType":"module"}