{"ast":null,"code":"var _jsxFileName = \"/home/victor/COVID-19-Coding-Fest/src/pages/scan/components/Camera.js\";\n// \nimport tiger from \"../../../../image/mask_image1.jpg\"; // Importing ml5.js as ml5\n\nimport * as ml5 from \"ml5\";\nimport React, { Component } from \"react\";\n\nclass Camera extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      predictions: [] // Set the empty array predictions state\n\n    };\n\n    this.setPredictions = pred => {\n      // Set the prediction state with the model predictions\n      this.setState({\n        predictions: pred\n      });\n    };\n\n    this.classifyImg = () => {\n      // Initialize the Image Classifier method with MobileNet\n      const classifier = ml5.imageClassifier('MobileNet', modelLoaded); // When the model is loaded\n\n      function modelLoaded() {\n        console.log('Model Loaded!');\n      } // Put the image to classify inside a variable\n\n\n      const image = document.getElementById('image'); // Make a prediction with a selected image\n\n      classifier.predict(image, 5, function (err, results) {\n        // Return the results\n        return results;\n      }).then(results => {\n        // Set the predictions in the state\n        this.setPredictions(results);\n      });\n    };\n  }\n\n  componentDidMount() {\n    // once the component has mount, start the classification\n    this.classifyImg();\n  }\n\n  render() {\n    // First set the predictions to a default value while loading\n    let predictions = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 24\n      }\n    }); // Map over the predictions and return each prediction with probability\n\n    if (this.state.predictions.length > 0) {\n      predictions = this.state.predictions.map((pred, i) => {\n        let {\n          className,\n          probability\n        } = pred; // round the probability with 2 decimal\n\n        probability = Math.floor(probability * 10000) / 100 + \"%\";\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: i + \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }\n        }, i + 1, \". Prediction: \", className, \" at \", probability, \" \");\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, \"Image classification with ML5.js\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: tiger,\n      id: \"image\",\n      width: \"400\",\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }), predictions);\n  }\n\n}\n\nexport default Camera;","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/src/pages/scan/components/Camera.js"],"names":["tiger","ml5","React","Component","Camera","state","predictions","setPredictions","pred","setState","classifyImg","classifier","imageClassifier","modelLoaded","console","log","image","document","getElementById","predict","err","results","then","componentDidMount","render","length","map","i","className","probability","Math","floor"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,mCAAlB,C,CACA;;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BE,KAD6B,GACrB;AACNC,MAAAA,WAAW,EAAE,EADP,CACW;;AADX,KADqB;;AAAA,SAK7BC,cAL6B,GAKXC,IAAD,IAAU;AACzB;AACA,WAAKC,QAAL,CAAc;AACZH,QAAAA,WAAW,EAAEE;AADD,OAAd;AAGD,KAV4B;;AAAA,SAY7BE,WAZ6B,GAYf,MAAM;AAClB;AACA,YAAMC,UAAU,GAAGV,GAAG,CAACW,eAAJ,CAAoB,WAApB,EAAiCC,WAAjC,CAAnB,CAFkB,CAGlB;;AACA,eAASA,WAAT,GAAuB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,OANiB,CAOlB;;;AACA,YAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAd,CARkB,CASlB;;AACAP,MAAAA,UAAU,CAACQ,OAAX,CAAmBH,KAAnB,EAA0B,CAA1B,EAA6B,UAASI,GAAT,EAAcC,OAAd,EAAuB;AACpD;AACE,eAAOA,OAAP;AACD,OAHD,EAIGC,IAJH,CAISD,OAAD,IAAa;AACjB;AACA,aAAKd,cAAL,CAAoBc,OAApB;AACD,OAPH;AAQD,KA9B4B;AAAA;;AAgC7BE,EAAAA,iBAAiB,GAAE;AACjB;AACA,SAAKb,WAAL;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP;AACA,QAAIlB,WAAW,gBAAI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnB,CAFO,CAGP;;AACA,QAAG,KAAKD,KAAL,CAAWC,WAAX,CAAuBmB,MAAvB,GAAgC,CAAnC,EAAqC;AACnCnB,MAAAA,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAAX,CAAuBoB,GAAvB,CAA2B,CAAClB,IAAD,EAAOmB,CAAP,KAAa;AACpD,YAAI;AAAEC,UAAAA,SAAF;AAAaC,UAAAA;AAAb,YAA6BrB,IAAjC,CADoD,CAEpD;;AACAqB,QAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWF,WAAW,GAAG,KAAzB,IAAkC,GAAlC,GAAwC,GAAtD;AACA,4BACE;AAAK,UAAA,GAAG,EAAGF,CAAC,GAAG,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAsBA,CAAC,GAAC,CAAxB,oBAA2CC,SAA3C,UAA4DC,WAA5D,MADF;AAGD,OAPa,CAAd;AAQD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADA,eAEA;AAAK,MAAA,GAAG,EAAG7B,KAAX;AAAmB,MAAA,EAAE,EAAC,OAAtB;AAA8B,MAAA,KAAK,EAAC,KAApC;AAA0C,MAAA,GAAG,EAAC,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGEM,WAHF,CADF;AAOD;;AA3D4B;;AA8D/B,eAAeF,MAAf","sourcesContent":["// \nimport tiger from \"../../../../image/mask_image1.jpg\";\n// Importing ml5.js as ml5\nimport * as ml5 from \"ml5\";\nimport React, {Component} from \"react\"\n\nclass Camera extends Component {\n  state = {\n    predictions: []  // Set the empty array predictions state\n  }\n\n  setPredictions = (pred) => {\n    // Set the prediction state with the model predictions\n    this.setState({\n      predictions: pred\n    });\n  }\n\n  classifyImg = () => {\n    // Initialize the Image Classifier method with MobileNet\n    const classifier = ml5.imageClassifier('MobileNet', modelLoaded);\n    // When the model is loaded\n    function modelLoaded() {\n      console.log('Model Loaded!');\n    }\n    // Put the image to classify inside a variable\n    const image = document.getElementById('image');\n    // Make a prediction with a selected image\n    classifier.predict(image, 5, function(err, results) {\n    // Return the results\n      return results;\n    })\n      .then((results) => {\n        // Set the predictions in the state\n        this.setPredictions(results)\n      })\n  }\n\n  componentDidMount(){\n    // once the component has mount, start the classification\n    this.classifyImg();\n  }\n\n  render() {\n    // First set the predictions to a default value while loading\n    let predictions = (<div className=\"loader\"></div>);\n    // Map over the predictions and return each prediction with probability\n    if(this.state.predictions.length > 0){\n      predictions = this.state.predictions.map((pred, i) => {\n        let { className, probability } = pred;\n        // round the probability with 2 decimal\n        probability = Math.floor(probability * 10000) / 100 + \"%\";\n        return (\n          <div key={ i + \"\" }>{ i+1 }. Prediction: { className } at { probability } </div>\n        )\n      })\n    }\n\t  \n    return (\n      <div className=\"App\">\n      <h1>Image classification with ML5.js</h1>\n      <img src={ tiger } id=\"image\" width=\"400\" alt=\"\" />\n      { predictions }\n      </div>\n    );\n  }\n}\n\nexport default Camera;"]},"metadata":{},"sourceType":"module"}