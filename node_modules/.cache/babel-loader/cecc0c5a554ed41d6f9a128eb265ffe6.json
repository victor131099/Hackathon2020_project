{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tf = require(\"@tensorflow/tfjs\");\n\nvar fs = require(\"fs\");\n\nvar path_1 = require(\"path\");\n\nvar util_1 = require(\"util\");\n\nvar io_utils_1 = require(\"./io_utils\");\n\nvar stat = util_1.promisify(fs.stat);\nvar writeFile = util_1.promisify(fs.writeFile);\nvar readFile = util_1.promisify(fs.readFile);\nvar mkdir = util_1.promisify(fs.mkdir);\n\nfunction doesNotExistHandler(name) {\n  return function (e) {\n    switch (e.code) {\n      case 'ENOENT':\n        throw new Error(name + \" \" + e.path + \" does not exist: loading failed\");\n\n      default:\n        throw e;\n    }\n  };\n}\n\nvar NodeFileSystem =\n/** @class */\nfunction () {\n  /**\n   * Constructor of the NodeFileSystem IOHandler.\n   * @param path A single path or an Array of paths.\n   *   For saving: expects a single path pointing to an existing or nonexistent\n   *     directory. If the directory does not exist, it will be\n   *     created.\n   *   For loading:\n   *     - If the model has JSON topology (e.g., `tf.Model`), a single path\n   *       pointing to the JSON file (usually named `model.json`) is expected.\n   *       The JSON file is expected to contain `modelTopology` and/or\n   *       `weightsManifest`. If `weightManifest` exists, the values of the\n   *       weights will be loaded from relative paths (relative to the directory\n   *       of `model.json`) as contained in `weightManifest`.\n   *     - If the model has binary (protocol buffer GraphDef) topology,\n   *       an Array of two paths is expected: the first path should point to the\n   *       .pb file and the second path should point to the weight manifest\n   *       JSON file.\n   */\n  function NodeFileSystem(path) {\n    this.MODEL_JSON_FILENAME = 'model.json';\n    this.WEIGHTS_BINARY_FILENAME = 'weights.bin';\n    this.MODEL_BINARY_FILENAME = 'tensorflowjs.pb';\n\n    if (Array.isArray(path)) {\n      tf.util.assert(path.length === 2, function () {\n        return 'file paths must have a length of 2, ' + (\"(actual length is \" + path.length + \").\");\n      });\n      this.path = path.map(function (p) {\n        return path_1.resolve(p);\n      });\n    } else {\n      this.path = path_1.resolve(path);\n    }\n  }\n\n  NodeFileSystem.prototype.save = function (modelArtifacts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var weightsBinPath, weightsManifest, modelJSON, modelJSONPath;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (Array.isArray(this.path)) {\n              throw new Error('Cannot perform saving to multiple paths.');\n            }\n\n            return [4\n            /*yield*/\n            , this.createOrVerifyDirectory()];\n\n          case 1:\n            _a.sent();\n\n            if (!(modelArtifacts.modelTopology instanceof ArrayBuffer)) return [3\n            /*break*/\n            , 2];\n            throw new Error('NodeFileSystem.save() does not support saving model topology ' + 'in binary format yet.');\n\n          case 2:\n            weightsBinPath = path_1.join(this.path, this.WEIGHTS_BINARY_FILENAME);\n            weightsManifest = [{\n              paths: [this.WEIGHTS_BINARY_FILENAME],\n              weights: modelArtifacts.weightSpecs\n            }];\n            modelJSON = {\n              modelTopology: modelArtifacts.modelTopology,\n              weightsManifest: weightsManifest,\n              format: modelArtifacts.format,\n              generatedBy: modelArtifacts.generatedBy,\n              convertedBy: modelArtifacts.convertedBy\n            };\n\n            if (modelArtifacts.trainingConfig != null) {\n              modelJSON.trainingConfig = modelArtifacts.trainingConfig;\n            }\n\n            if (modelArtifacts.userDefinedMetadata != null) {\n              modelJSON.userDefinedMetadata = modelArtifacts.userDefinedMetadata;\n            }\n\n            modelJSONPath = path_1.join(this.path, this.MODEL_JSON_FILENAME);\n            return [4\n            /*yield*/\n            , writeFile(modelJSONPath, JSON.stringify(modelJSON), 'utf8')];\n\n          case 3:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , writeFile(weightsBinPath, Buffer.from(modelArtifacts.weightData), 'binary')];\n\n          case 4:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , {\n              // TODO(cais): Use explicit tf.io.ModelArtifactsInfo type below once it\n              // is available.\n              // tslint:disable-next-line:no-any\n              modelArtifactsInfo: io_utils_1.getModelArtifactsInfoForJSON(modelArtifacts)\n            }];\n        }\n      });\n    });\n  };\n\n  NodeFileSystem.prototype.load = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , Array.isArray(this.path) ? this.loadBinaryModel() : this.loadJSONModel()];\n      });\n    });\n  };\n\n  NodeFileSystem.prototype.loadBinaryModel = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var topologyPath, weightManifestPath, topology, weightManifest, modelTopology, weightsManifest, _a, _b, modelArtifacts, _c, weightSpecs, weightData;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            topologyPath = this.path[0];\n            weightManifestPath = this.path[1];\n            return [4\n            /*yield*/\n            , stat(topologyPath).catch(doesNotExistHandler('Topology Path'))];\n\n          case 1:\n            topology = _d.sent();\n            return [4\n            /*yield*/\n            , stat(weightManifestPath).catch(doesNotExistHandler('Weight Manifest Path'))];\n\n          case 2:\n            weightManifest = _d.sent(); // `this.path` can be either a directory or a file. If it is a file, assume\n            // it is model.json file.\n\n            if (!topology.isFile()) {\n              throw new Error('File specified for topology is not a file!');\n            }\n\n            if (!weightManifest.isFile()) {\n              throw new Error('File specified for the weight manifest is not a file!');\n            }\n\n            return [4\n            /*yield*/\n            , readFile(this.path[0])];\n\n          case 3:\n            modelTopology = _d.sent();\n            _b = (_a = JSON).parse;\n            return [4\n            /*yield*/\n            , readFile(this.path[1], 'utf8')];\n\n          case 4:\n            weightsManifest = _b.apply(_a, [_d.sent()]);\n            modelArtifacts = {\n              modelTopology: modelTopology\n            };\n            return [4\n            /*yield*/\n            , this.loadWeights(weightsManifest, this.path[1])];\n\n          case 5:\n            _c = _d.sent(), weightSpecs = _c[0], weightData = _c[1];\n            modelArtifacts.weightSpecs = weightSpecs;\n            modelArtifacts.weightData = weightData;\n            return [2\n            /*return*/\n            , modelArtifacts];\n        }\n      });\n    });\n  };\n\n  NodeFileSystem.prototype.loadJSONModel = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var path, info, modelJSON, _a, _b, modelArtifacts, _c, weightSpecs, weightData;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            path = this.path;\n            return [4\n            /*yield*/\n            , stat(path).catch(doesNotExistHandler('Path'))];\n\n          case 1:\n            info = _d.sent();\n            if (!info.isFile()) return [3\n            /*break*/\n            , 5];\n            _b = (_a = JSON).parse;\n            return [4\n            /*yield*/\n            , readFile(path, 'utf8')];\n\n          case 2:\n            modelJSON = _b.apply(_a, [_d.sent()]);\n            modelArtifacts = {\n              modelTopology: modelJSON.modelTopology,\n              format: modelJSON.format,\n              generatedBy: modelJSON.generatedBy,\n              convertedBy: modelJSON.convertedBy\n            };\n            if (!(modelJSON.weightsManifest != null)) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , this.loadWeights(modelJSON.weightsManifest, path)];\n\n          case 3:\n            _c = _d.sent(), weightSpecs = _c[0], weightData = _c[1];\n            modelArtifacts.weightSpecs = weightSpecs;\n            modelArtifacts.weightData = weightData;\n            _d.label = 4;\n\n          case 4:\n            if (modelJSON.trainingConfig != null) {\n              modelArtifacts.trainingConfig = modelJSON.trainingConfig;\n            }\n\n            if (modelJSON.userDefinedMetadata != null) {\n              modelArtifacts.userDefinedMetadata = modelJSON.userDefinedMetadata;\n            }\n\n            return [2\n            /*return*/\n            , modelArtifacts];\n\n          case 5:\n            throw new Error('The path to load from must be a file. Loading from a directory ' + 'is not supported.');\n        }\n      });\n    });\n  };\n\n  NodeFileSystem.prototype.loadWeights = function (weightsManifest, path) {\n    return __awaiter(this, void 0, void 0, function () {\n      var dirName, buffers, weightSpecs, _i, weightsManifest_1, group, _a, _b, path_2, weightFilePath, buffer;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            dirName = path_1.dirname(path);\n            buffers = [];\n            weightSpecs = [];\n            _i = 0, weightsManifest_1 = weightsManifest;\n            _c.label = 1;\n\n          case 1:\n            if (!(_i < weightsManifest_1.length)) return [3\n            /*break*/\n            , 7];\n            group = weightsManifest_1[_i];\n            _a = 0, _b = group.paths;\n            _c.label = 2;\n\n          case 2:\n            if (!(_a < _b.length)) return [3\n            /*break*/\n            , 5];\n            path_2 = _b[_a];\n            weightFilePath = path_1.join(dirName, path_2);\n            return [4\n            /*yield*/\n            , readFile(weightFilePath).catch(doesNotExistHandler('Weight file'))];\n\n          case 3:\n            buffer = _c.sent();\n            buffers.push(buffer);\n            _c.label = 4;\n\n          case 4:\n            _a++;\n            return [3\n            /*break*/\n            , 2];\n\n          case 5:\n            weightSpecs.push.apply(weightSpecs, group.weights);\n            _c.label = 6;\n\n          case 6:\n            _i++;\n            return [3\n            /*break*/\n            , 1];\n\n          case 7:\n            return [2\n            /*return*/\n            , [weightSpecs, io_utils_1.toArrayBuffer(buffers)]];\n        }\n      });\n    });\n  };\n  /**\n   * For each item in `this.path`, creates a directory at the path or verify\n   * that the path exists as a directory.\n   */\n\n\n  NodeFileSystem.prototype.createOrVerifyDirectory = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var paths, _i, paths_1, path, e_1;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            paths = Array.isArray(this.path) ? this.path : [this.path];\n            _i = 0, paths_1 = paths;\n            _a.label = 1;\n\n          case 1:\n            if (!(_i < paths_1.length)) return [3\n            /*break*/\n            , 9];\n            path = paths_1[_i];\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 8]);\n\n            return [4\n            /*yield*/\n            , mkdir(path)];\n\n          case 3:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 8];\n\n          case 4:\n            e_1 = _a.sent();\n            if (!(e_1.code === 'EEXIST')) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , stat(path)];\n\n          case 5:\n            if (_a.sent().isFile()) {\n              throw new Error(\"Path \" + path + \" exists as a file. The path must be \" + \"nonexistent or point to a directory.\");\n            }\n\n            return [3\n            /*break*/\n            , 7];\n\n          case 6:\n            throw e_1;\n\n          case 7:\n            return [3\n            /*break*/\n            , 8];\n\n          case 8:\n            _i++;\n            return [3\n            /*break*/\n            , 1];\n\n          case 9:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  NodeFileSystem.URL_SCHEME = 'file://';\n  return NodeFileSystem;\n}();\n\nexports.NodeFileSystem = NodeFileSystem;\n\nexports.nodeFileSystemRouter = function (url) {\n  if (Array.isArray(url)) {\n    if (url.every(function (urlElement) {\n      return urlElement.startsWith(NodeFileSystem.URL_SCHEME);\n    })) {\n      return new NodeFileSystem(url.map(function (urlElement) {\n        return urlElement.slice(NodeFileSystem.URL_SCHEME.length);\n      }));\n    } else {\n      return null;\n    }\n  } else {\n    if (url.startsWith(NodeFileSystem.URL_SCHEME)) {\n      return new NodeFileSystem(url.slice(NodeFileSystem.URL_SCHEME.length));\n    } else {\n      return null;\n    }\n  }\n}; // Registration of `nodeFileSystemRouter` is done in index.ts.\n\n/**\n * Factory function for Node.js native file system IO Handler.\n *\n * @param path A single path or an Array of paths.\n *   For saving: expects a single path pointing to an existing or nonexistent\n *     directory. If the directory does not exist, it will be\n *     created.\n *   For loading:\n *     - If the model has JSON topology (e.g., `tf.Model`), a single path\n *       pointing to the JSON file (usually named `model.json`) is expected.\n *       The JSON file is expected to contain `modelTopology` and/or\n *       `weightsManifest`. If `weightManifest` exists, the values of the\n *       weights will be loaded from relative paths (relative to the directory\n *       of `model.json`) as contained in `weightManifest`.\n *     - If the model has binary (protocol buffer GraphDef) topology,\n *       an Array of two paths is expected: the first path should point to the\n *        .pb file and the second path should point to the weight manifest\n *       JSON file.\n */\n\n\nfunction fileSystem(path) {\n  return new NodeFileSystem(path);\n}\n\nexports.fileSystem = fileSystem;","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/node_modules/@tensorflow/tfjs-node/dist/io/file_system.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","Object","defineProperty","exports","tf","require","fs","path_1","util_1","io_utils_1","stat","promisify","writeFile","readFile","mkdir","doesNotExistHandler","name","code","Error","path","NodeFileSystem","MODEL_JSON_FILENAME","WEIGHTS_BINARY_FILENAME","MODEL_BINARY_FILENAME","Array","isArray","util","assert","map","p","prototype","save","modelArtifacts","weightsBinPath","weightsManifest","modelJSON","modelJSONPath","_a","createOrVerifyDirectory","modelTopology","ArrayBuffer","join","paths","weights","weightSpecs","format","generatedBy","convertedBy","trainingConfig","userDefinedMetadata","JSON","stringify","Buffer","from","weightData","modelArtifactsInfo","getModelArtifactsInfoForJSON","load","loadBinaryModel","loadJSONModel","topologyPath","weightManifestPath","topology","weightManifest","_b","_c","_d","catch","isFile","parse","loadWeights","info","dirName","buffers","_i","weightsManifest_1","group","path_2","weightFilePath","buffer","dirname","toArrayBuffer","paths_1","e_1","URL_SCHEME","nodeFileSystemRouter","url","every","urlElement","startsWith","slice","fileSystem"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tf = require(\"@tensorflow/tfjs\");\nvar fs = require(\"fs\");\nvar path_1 = require(\"path\");\nvar util_1 = require(\"util\");\nvar io_utils_1 = require(\"./io_utils\");\nvar stat = util_1.promisify(fs.stat);\nvar writeFile = util_1.promisify(fs.writeFile);\nvar readFile = util_1.promisify(fs.readFile);\nvar mkdir = util_1.promisify(fs.mkdir);\nfunction doesNotExistHandler(name) {\n    return function (e) {\n        switch (e.code) {\n            case 'ENOENT':\n                throw new Error(name + \" \" + e.path + \" does not exist: loading failed\");\n            default:\n                throw e;\n        }\n    };\n}\nvar NodeFileSystem = /** @class */ (function () {\n    /**\n     * Constructor of the NodeFileSystem IOHandler.\n     * @param path A single path or an Array of paths.\n     *   For saving: expects a single path pointing to an existing or nonexistent\n     *     directory. If the directory does not exist, it will be\n     *     created.\n     *   For loading:\n     *     - If the model has JSON topology (e.g., `tf.Model`), a single path\n     *       pointing to the JSON file (usually named `model.json`) is expected.\n     *       The JSON file is expected to contain `modelTopology` and/or\n     *       `weightsManifest`. If `weightManifest` exists, the values of the\n     *       weights will be loaded from relative paths (relative to the directory\n     *       of `model.json`) as contained in `weightManifest`.\n     *     - If the model has binary (protocol buffer GraphDef) topology,\n     *       an Array of two paths is expected: the first path should point to the\n     *       .pb file and the second path should point to the weight manifest\n     *       JSON file.\n     */\n    function NodeFileSystem(path) {\n        this.MODEL_JSON_FILENAME = 'model.json';\n        this.WEIGHTS_BINARY_FILENAME = 'weights.bin';\n        this.MODEL_BINARY_FILENAME = 'tensorflowjs.pb';\n        if (Array.isArray(path)) {\n            tf.util.assert(path.length === 2, function () { return 'file paths must have a length of 2, ' +\n                (\"(actual length is \" + path.length + \").\"); });\n            this.path = path.map(function (p) { return path_1.resolve(p); });\n        }\n        else {\n            this.path = path_1.resolve(path);\n        }\n    }\n    NodeFileSystem.prototype.save = function (modelArtifacts) {\n        return __awaiter(this, void 0, void 0, function () {\n            var weightsBinPath, weightsManifest, modelJSON, modelJSONPath;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (Array.isArray(this.path)) {\n                            throw new Error('Cannot perform saving to multiple paths.');\n                        }\n                        return [4 /*yield*/, this.createOrVerifyDirectory()];\n                    case 1:\n                        _a.sent();\n                        if (!(modelArtifacts.modelTopology instanceof ArrayBuffer)) return [3 /*break*/, 2];\n                        throw new Error('NodeFileSystem.save() does not support saving model topology ' +\n                            'in binary format yet.');\n                    case 2:\n                        weightsBinPath = path_1.join(this.path, this.WEIGHTS_BINARY_FILENAME);\n                        weightsManifest = [{\n                                paths: [this.WEIGHTS_BINARY_FILENAME],\n                                weights: modelArtifacts.weightSpecs\n                            }];\n                        modelJSON = {\n                            modelTopology: modelArtifacts.modelTopology,\n                            weightsManifest: weightsManifest,\n                            format: modelArtifacts.format,\n                            generatedBy: modelArtifacts.generatedBy,\n                            convertedBy: modelArtifacts.convertedBy\n                        };\n                        if (modelArtifacts.trainingConfig != null) {\n                            modelJSON.trainingConfig = modelArtifacts.trainingConfig;\n                        }\n                        if (modelArtifacts.userDefinedMetadata != null) {\n                            modelJSON.userDefinedMetadata = modelArtifacts.userDefinedMetadata;\n                        }\n                        modelJSONPath = path_1.join(this.path, this.MODEL_JSON_FILENAME);\n                        return [4 /*yield*/, writeFile(modelJSONPath, JSON.stringify(modelJSON), 'utf8')];\n                    case 3:\n                        _a.sent();\n                        return [4 /*yield*/, writeFile(weightsBinPath, Buffer.from(modelArtifacts.weightData), 'binary')];\n                    case 4:\n                        _a.sent();\n                        return [2 /*return*/, {\n                                // TODO(cais): Use explicit tf.io.ModelArtifactsInfo type below once it\n                                // is available.\n                                // tslint:disable-next-line:no-any\n                                modelArtifactsInfo: io_utils_1.getModelArtifactsInfoForJSON(modelArtifacts)\n                            }];\n                }\n            });\n        });\n    };\n    NodeFileSystem.prototype.load = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, Array.isArray(this.path) ? this.loadBinaryModel() :\n                        this.loadJSONModel()];\n            });\n        });\n    };\n    NodeFileSystem.prototype.loadBinaryModel = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var topologyPath, weightManifestPath, topology, weightManifest, modelTopology, weightsManifest, _a, _b, modelArtifacts, _c, weightSpecs, weightData;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        topologyPath = this.path[0];\n                        weightManifestPath = this.path[1];\n                        return [4 /*yield*/, stat(topologyPath).catch(doesNotExistHandler('Topology Path'))];\n                    case 1:\n                        topology = _d.sent();\n                        return [4 /*yield*/, stat(weightManifestPath)\n                                .catch(doesNotExistHandler('Weight Manifest Path'))];\n                    case 2:\n                        weightManifest = _d.sent();\n                        // `this.path` can be either a directory or a file. If it is a file, assume\n                        // it is model.json file.\n                        if (!topology.isFile()) {\n                            throw new Error('File specified for topology is not a file!');\n                        }\n                        if (!weightManifest.isFile()) {\n                            throw new Error('File specified for the weight manifest is not a file!');\n                        }\n                        return [4 /*yield*/, readFile(this.path[0])];\n                    case 3:\n                        modelTopology = _d.sent();\n                        _b = (_a = JSON).parse;\n                        return [4 /*yield*/, readFile(this.path[1], 'utf8')];\n                    case 4:\n                        weightsManifest = _b.apply(_a, [_d.sent()]);\n                        modelArtifacts = {\n                            modelTopology: modelTopology,\n                        };\n                        return [4 /*yield*/, this.loadWeights(weightsManifest, this.path[1])];\n                    case 5:\n                        _c = _d.sent(), weightSpecs = _c[0], weightData = _c[1];\n                        modelArtifacts.weightSpecs = weightSpecs;\n                        modelArtifacts.weightData = weightData;\n                        return [2 /*return*/, modelArtifacts];\n                }\n            });\n        });\n    };\n    NodeFileSystem.prototype.loadJSONModel = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var path, info, modelJSON, _a, _b, modelArtifacts, _c, weightSpecs, weightData;\n            return __generator(this, function (_d) {\n                switch (_d.label) {\n                    case 0:\n                        path = this.path;\n                        return [4 /*yield*/, stat(path).catch(doesNotExistHandler('Path'))];\n                    case 1:\n                        info = _d.sent();\n                        if (!info.isFile()) return [3 /*break*/, 5];\n                        _b = (_a = JSON).parse;\n                        return [4 /*yield*/, readFile(path, 'utf8')];\n                    case 2:\n                        modelJSON = _b.apply(_a, [_d.sent()]);\n                        modelArtifacts = {\n                            modelTopology: modelJSON.modelTopology,\n                            format: modelJSON.format,\n                            generatedBy: modelJSON.generatedBy,\n                            convertedBy: modelJSON.convertedBy\n                        };\n                        if (!(modelJSON.weightsManifest != null)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.loadWeights(modelJSON.weightsManifest, path)];\n                    case 3:\n                        _c = _d.sent(), weightSpecs = _c[0], weightData = _c[1];\n                        modelArtifacts.weightSpecs = weightSpecs;\n                        modelArtifacts.weightData = weightData;\n                        _d.label = 4;\n                    case 4:\n                        if (modelJSON.trainingConfig != null) {\n                            modelArtifacts.trainingConfig = modelJSON.trainingConfig;\n                        }\n                        if (modelJSON.userDefinedMetadata != null) {\n                            modelArtifacts.userDefinedMetadata = modelJSON.userDefinedMetadata;\n                        }\n                        return [2 /*return*/, modelArtifacts];\n                    case 5: throw new Error('The path to load from must be a file. Loading from a directory ' +\n                        'is not supported.');\n                }\n            });\n        });\n    };\n    NodeFileSystem.prototype.loadWeights = function (weightsManifest, path) {\n        return __awaiter(this, void 0, void 0, function () {\n            var dirName, buffers, weightSpecs, _i, weightsManifest_1, group, _a, _b, path_2, weightFilePath, buffer;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        dirName = path_1.dirname(path);\n                        buffers = [];\n                        weightSpecs = [];\n                        _i = 0, weightsManifest_1 = weightsManifest;\n                        _c.label = 1;\n                    case 1:\n                        if (!(_i < weightsManifest_1.length)) return [3 /*break*/, 7];\n                        group = weightsManifest_1[_i];\n                        _a = 0, _b = group.paths;\n                        _c.label = 2;\n                    case 2:\n                        if (!(_a < _b.length)) return [3 /*break*/, 5];\n                        path_2 = _b[_a];\n                        weightFilePath = path_1.join(dirName, path_2);\n                        return [4 /*yield*/, readFile(weightFilePath)\n                                .catch(doesNotExistHandler('Weight file'))];\n                    case 3:\n                        buffer = _c.sent();\n                        buffers.push(buffer);\n                        _c.label = 4;\n                    case 4:\n                        _a++;\n                        return [3 /*break*/, 2];\n                    case 5:\n                        weightSpecs.push.apply(weightSpecs, group.weights);\n                        _c.label = 6;\n                    case 6:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 7: return [2 /*return*/, [weightSpecs, io_utils_1.toArrayBuffer(buffers)]];\n                }\n            });\n        });\n    };\n    /**\n     * For each item in `this.path`, creates a directory at the path or verify\n     * that the path exists as a directory.\n     */\n    NodeFileSystem.prototype.createOrVerifyDirectory = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var paths, _i, paths_1, path, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        paths = Array.isArray(this.path) ? this.path : [this.path];\n                        _i = 0, paths_1 = paths;\n                        _a.label = 1;\n                    case 1:\n                        if (!(_i < paths_1.length)) return [3 /*break*/, 9];\n                        path = paths_1[_i];\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 8]);\n                        return [4 /*yield*/, mkdir(path)];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 8];\n                    case 4:\n                        e_1 = _a.sent();\n                        if (!(e_1.code === 'EEXIST')) return [3 /*break*/, 6];\n                        return [4 /*yield*/, stat(path)];\n                    case 5:\n                        if ((_a.sent()).isFile()) {\n                            throw new Error(\"Path \" + path + \" exists as a file. The path must be \" +\n                                \"nonexistent or point to a directory.\");\n                        }\n                        return [3 /*break*/, 7];\n                    case 6: throw e_1;\n                    case 7: return [3 /*break*/, 8];\n                    case 8:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    NodeFileSystem.URL_SCHEME = 'file://';\n    return NodeFileSystem;\n}());\nexports.NodeFileSystem = NodeFileSystem;\nexports.nodeFileSystemRouter = function (url) {\n    if (Array.isArray(url)) {\n        if (url.every(function (urlElement) { return urlElement.startsWith(NodeFileSystem.URL_SCHEME); })) {\n            return new NodeFileSystem(url.map(function (urlElement) { return urlElement.slice(NodeFileSystem.URL_SCHEME.length); }));\n        }\n        else {\n            return null;\n        }\n    }\n    else {\n        if (url.startsWith(NodeFileSystem.URL_SCHEME)) {\n            return new NodeFileSystem(url.slice(NodeFileSystem.URL_SCHEME.length));\n        }\n        else {\n            return null;\n        }\n    }\n};\n// Registration of `nodeFileSystemRouter` is done in index.ts.\n/**\n * Factory function for Node.js native file system IO Handler.\n *\n * @param path A single path or an Array of paths.\n *   For saving: expects a single path pointing to an existing or nonexistent\n *     directory. If the directory does not exist, it will be\n *     created.\n *   For loading:\n *     - If the model has JSON topology (e.g., `tf.Model`), a single path\n *       pointing to the JSON file (usually named `model.json`) is expected.\n *       The JSON file is expected to contain `modelTopology` and/or\n *       `weightsManifest`. If `weightManifest` exists, the values of the\n *       weights will be loaded from relative paths (relative to the directory\n *       of `model.json`) as contained in `weightManifest`.\n *     - If the model has binary (protocol buffer GraphDef) topology,\n *       an Array of two paths is expected: the first path should point to the\n *        .pb file and the second path should point to the weight manifest\n *       JSON file.\n */\nfunction fileSystem(path) {\n    return new NodeFileSystem(path);\n}\nexports.fileSystem = fileSystem;\n"]},"metadata":{},"sourceType":"script"}