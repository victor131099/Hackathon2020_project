{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class GatherProgram {\n  constructor(aShape, indicesLength, axis) {\n    this.variableNames = ['A', 'indices'];\n    const outputShape = aShape.slice();\n    outputShape[axis] = indicesLength;\n    this.outputShape = outputShape;\n    this.rank = outputShape.length;\n    const dtype = getCoordsDataType(this.rank);\n    const sourceCoords = getSourceCoords(aShape, axis);\n    this.userCode = \"\\n      void main() {\\n        \".concat(dtype, \" resRC = getOutputCoords();\\n        setOutput(getA(\").concat(sourceCoords, \"));\\n      }\\n    \");\n  }\n\n}\n\nfunction getSourceCoords(aShape, axis) {\n  const rank = aShape.length;\n\n  if (rank > 4) {\n    throw Error(\"Gather for rank \".concat(rank, \" is not yet supported\"));\n  }\n\n  if (rank === 1) {\n    return \"int(getIndices(resRC))\";\n  }\n\n  const currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n  const sourceCoords = [];\n\n  for (let i = 0; i < aShape.length; i++) {\n    if (i === axis) {\n      sourceCoords.push(\"int(getIndices(\".concat(currentCoords[i], \"))\"));\n    } else {\n      sourceCoords.push(\"\".concat(currentCoords[i]));\n    }\n  }\n\n  return sourceCoords.join();\n}","map":null,"metadata":{},"sourceType":"module"}