{"ast":null,"code":"var _jsxFileName = \"/home/victor/COVID-19-Coding-Fest/src/pages/customer/components/MaskChart.js\";\nimport { Layout, Row, Col, Card } from \"antd\";\nimport React, { Component } from 'react';\nimport moment, { months } from \"moment\";\nimport { Chart, Geom, Axis, Tooltip } from \"bizcharts\";\nconst Content = Layout.Content;\n\nclass MaskChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emask_data: [],\n      month_data: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\").then(response => response.json()).then(data => this.setState({\n      emask_data: data\n    }));\n  }\n\n  extract_month() {\n    var months_data = [{\n      month: \"Jan\",\n      count_reject: 0\n    }, {\n      month: \"Feb\",\n      count_reject: 0\n    }, {\n      month: \"Mar\",\n      count_reject: 0\n    }, {\n      month: \"Apr\",\n      count_reject: 0\n    }, {\n      month: \"May\",\n      count_reject: 0\n    }, {\n      month: \"Jun\",\n      count_reject: 0\n    }, {\n      month: \"jul\",\n      count_reject: 0\n    }, {\n      month: \"Aug\",\n      count_reject: 0\n    }, {\n      month: \"Sep\",\n      count_reject: 0\n    }, {\n      month: \"Oct\",\n      count_reject: 0\n    }, {\n      month: \"Nov\",\n      count_reject: 0\n    }, {\n      month: \"Dec\",\n      count_reject: 0\n    }];\n\n    for (var i = 0; i < this.state.emask_data.length; i++) {\n      for (var j = 0; j < months_data.length; j++) {\n        var mon = j + 1;\n\n        if (this.state.emask_data[i].status === \"ALERTED\") {\n          if (parseInt(moment(this.state.emask_data[i].date).format(\"MM\")) == mon) {\n            months_data[j].count_reject = months_data[j].count_reject + 1;\n            break;\n          }\n        }\n      }\n    }\n\n    return months_data;\n  }\n\n  render() {\n    var month_data = this.extract_month();\n    return React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      height: 200,\n      data: month_data,\n      forceFit: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Axis, {\n      name: \"month\",\n      visible: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Axis, {\n      name: \"alerted\",\n      visible: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      crosshairs: {\n        type: \"y\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Geom, {\n      type: \"interval\",\n      position: \"month*alerted\",\n      color: \"metric\",\n      adjust: [{\n        type: 'dodge',\n        marginRatio: 1 / 32\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default MaskChart;","map":{"version":3,"sources":["/home/victor/COVID-19-Coding-Fest/src/pages/customer/components/MaskChart.js"],"names":["Layout","Row","Col","Card","React","Component","moment","months","Chart","Geom","Axis","Tooltip","Content","MaskChart","constructor","props","state","emask_data","month_data","componentDidMount","fetch","then","response","json","data","setState","extract_month","months_data","month","count_reject","i","length","j","mon","status","parseInt","date","format","render","type","marginRatio"],"mappings":"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","sourcesContent":["import {Layout, Row, Col,Card } from \"antd\"\nimport React, {Component} from 'react'\nimport moment, { months } from \"moment\"\nimport { Chart,\n    Geom,\n    Axis,\n    Tooltip, } from \"bizcharts\";\n  \n const {Content} = Layout \nclass MaskChart extends Component{\n    constructor(props){\n        super(props);\n        this.state= {\n            emask_data:[],\n            month_data:[]\n        }\n    }\n    componentDidMount () {\n        \n          fetch(\"https://fhrs5atn73.execute-api.ap-southeast-2.amazonaws.com/dev\")\n        .then(response => response.json())\n        .then(data => this.setState({emask_data:data}))\n       \n      };\n      extract_month(){\n          var months_data = [\n            {\n                month: \"Jan\",\n                count_reject:0\n            },\n            {\n                month: \"Feb\",\n                count_reject:0\n            },\n            {\n                month: \"Mar\",\n                count_reject:0\n            },\n            {\n                month: \"Apr\",\n                count_reject:0\n            }, \n            {\n                month: \"May\",\n                count_reject:0\n            },\n            {\n                month: \"Jun\",\n                count_reject:0\n            },\n            {\n                month: \"jul\",\n                count_reject:0\n            },\n            {\n                month: \"Aug\",\n                count_reject:0\n            },\n            {\n                month: \"Sep\",\n                count_reject:0\n            },\n            {\n                month: \"Oct\",\n                count_reject:0\n            }, \n            {\n                month: \"Nov\",\n                count_reject:0\n            }, \n            {\n                month: \"Dec\",\n                count_reject:0\n            }\n        ];\n          \n          for(var i =0; i < this.state.emask_data.length; i++){\n            for(var j=0; j < months_data.length; j++){\n                var mon= j+1;\n                if(this.state.emask_data[i].status ===\"ALERTED\"){\n                    if(parseInt(moment(this.state.emask_data[i].date).format(\"MM\")) == mon ){\n                    \n                        months_data[j].count_reject = months_data[j].count_reject+1\n                        break;\n                    }\n                }\n            }\n          }\n          return months_data;\n\n      }\n    render(){\n        var month_data = this.extract_month()\n        return(\n            <Content>\n                \n                <Chart height={200} data={month_data} forceFit>\n                <Axis name=\"month\" visible={false} />\n            <Axis name=\"alerted\" visible={false} />\n            <Tooltip\n              crosshairs={{ type: \"y\" }}\n            />\n             <Geom type='interval' position='month*alerted' color='metric' adjust={[{ type: 'dodge', marginRatio: 1 / 32 }]} />\n  \n\n\n  </Chart>\n                \n            </Content>\n        )\n    }\n}\nexport default MaskChart;"]},"metadata":{},"sourceType":"module"}